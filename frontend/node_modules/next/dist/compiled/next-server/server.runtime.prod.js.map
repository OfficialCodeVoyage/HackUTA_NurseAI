{"version":3,"file":"server.runtime.prod.js","mappings":"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","sources":["webpack://next/../next-env/dist/index.js","webpack://next/./dist/compiled/@edge-runtime/cookies/index.js","webpack://next/./dist/compiled/cookie/index.js","webpack://next/./dist/compiled/fresh/index.js","webpack://next/./dist/compiled/lru-cache/index.js","webpack://next/./dist/compiled/p-queue/index.js","webpack://next/./dist/compiled/src/index.ts","webpack://next/./dist/src/lib/constants.ts","webpack://next/./dist/src/server/api-utils/index.ts","webpack://next/./dist/src/server/api-utils/node/try-get-preview-data.ts","webpack://next/./dist/src/server/crypto-utils.ts","webpack://next/./dist/src/server/lib/trace/constants.ts","webpack://next/./dist/src/server/node-environment.ts","webpack://next/./dist/src/server/node-polyfill-crypto.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/headers.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/reflect.ts","webpack://next/./dist/src/shared/lib/isomorphic/path.js","webpack://next/./dist/src/shared/lib/modern-browserslist-target.js","webpack://next/./src/experimental/testmode/context.ts","webpack://next/./src/experimental/testmode/fetch.ts","webpack://next/./src/experimental/testmode/server-edge.ts","webpack://next/./dist/esm/server/ sync","webpack://next/external commonjs \"next/dist/server/lib/trace/tracer\"","webpack://next/external commonjs2 \"next/dist/compiled/jsonwebtoken\"","webpack://next/external commonjs2 \"next/dist/compiled/node-html-parser\"","webpack://next/external commonjs2 \"next/dist/compiled/ws\"","webpack://next/external commonjs2 \"next/dist/server/web/sandbox\"","webpack://next/external node-commonjs \"async_hooks\"","webpack://next/external node-commonjs \"crypto\"","webpack://next/external node-commonjs \"fs\"","webpack://next/external node-commonjs \"module\"","webpack://next/external node-commonjs \"node:async_hooks\"","webpack://next/external node-commonjs \"node:crypto\"","webpack://next/external node-commonjs \"os\"","webpack://next/external node-commonjs \"path\"","webpack://next/webpack/bootstrap","webpack://next/webpack/runtime/compat get default export","webpack://next/webpack/runtime/define property getters","webpack://next/webpack/runtime/hasOwnProperty shorthand","webpack://next/webpack/runtime/make namespace object","webpack://next/./dist/src/server/lib/incremental-cache/fetch-cache.ts","webpack://next/./dist/src/server/lib/incremental-cache/file-system-cache.ts","webpack://next/./dist/src/lib/picocolors.ts","webpack://next/./dist/src/server/require-hook.ts","webpack://next/./dist/src/shared/lib/utils.ts","webpack://next/./dist/src/shared/lib/router/utils/route-matcher.ts","webpack://next/./dist/src/server/request-meta.ts","webpack://next/./dist/src/shared/lib/constants.ts","webpack://next/./dist/src/lib/find-pages-dir.ts","webpack://next/./dist/src/server/api-utils/get-cookie-parser.ts","webpack://next/./dist/src/client/components/redirect-status-code.ts","webpack://next/./dist/src/server/base-http/index.ts","webpack://next/./dist/src/server/base-http/node.ts","webpack://next/./dist/src/server/lib/etag.ts","webpack://next/./dist/src/server/lib/revalidate.ts","webpack://next/./dist/src/client/components/app-router-headers.ts","webpack://next/./dist/src/server/send-payload.ts","webpack://next/./dist/src/shared/lib/router/utils/querystring.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-url.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-relative-url.ts","webpack://next/./dist/src/build/output/log.ts","webpack://next/external node-commonjs \"url\"","webpack://next/./dist/src/server/lib/is-ipv6.ts","webpack://next/./dist/src/shared/lib/page-path/ensure-leading-slash.ts","webpack://next/./dist/src/shared/lib/router/utils/app-paths.ts","webpack://next/./dist/src/shared/lib/segment.ts","webpack://next/./dist/src/server/lib/interception-routes.ts","webpack://next/./dist/src/shared/lib/router/utils/is-dynamic.ts","webpack://next/external commonjs \"next/dist/shared/lib/runtime-config.external.js\"","webpack://next/./dist/src/shared/lib/router/utils/is-bot.ts","webpack://next/./dist/src/server/stream-utils/node-web-streams-helper.ts","webpack://next/./dist/src/server/stream-utils/encodedTags.ts","webpack://next/./dist/src/server/web/utils.ts","webpack://next/./dist/src/shared/lib/router/utils/remove-trailing-slash.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-path.ts","webpack://next/./dist/src/shared/lib/router/utils/add-path-prefix.ts","webpack://next/./dist/src/shared/lib/router/utils/add-path-suffix.ts","webpack://next/./dist/src/shared/lib/router/utils/path-has-prefix.ts","webpack://next/./dist/src/shared/lib/get-hostname.ts","webpack://next/./dist/src/shared/lib/i18n/normalize-locale-path.ts","webpack://next/./dist/src/shared/lib/router/utils/remove-path-prefix.ts","webpack://next/./dist/src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://next/./dist/src/server/web/next-url.ts","webpack://next/./dist/src/shared/lib/i18n/detect-domain-locale.ts","webpack://next/./dist/src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://next/./dist/src/shared/lib/router/utils/add-locale.ts","webpack://next/./dist/src/server/web/error.ts","webpack://next/./dist/src/server/web/spec-extension/request.ts","webpack://next/./dist/src/server/base-http/helpers.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/next-request.ts","webpack://next/./dist/src/lib/detached-promise.ts","webpack://next/./dist/src/server/client-component-renderer-logger.ts","webpack://next/./dist/src/server/pipe-readable.ts","webpack://next/./dist/src/server/render-result.ts","webpack://next/./dist/src/shared/lib/page-path/denormalize-page-path.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-path-sep.ts","webpack://next/./dist/src/shared/lib/router/utils/path-match.ts","webpack://next/./dist/src/shared/lib/escape-regexp.ts","webpack://next/./dist/src/shared/lib/router/utils/route-regex.ts","webpack://next/./dist/src/shared/lib/router/utils/prepare-destination.ts","webpack://next/./dist/src/lib/is-error.ts","webpack://next/./dist/src/shared/lib/is-plain-object.ts","webpack://next/./dist/src/server/normalizers/locale-route-normalizer.ts","webpack://next/./dist/src/shared/lib/router/utils/sorted-routes.ts","webpack://next/./dist/src/server/route-matchers/route-matcher.ts","webpack://next/./dist/src/server/route-matchers/locale-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-managers/default-route-matcher-manager.ts","webpack://next/./dist/src/server/normalizers/normalizers.ts","webpack://next/./dist/src/server/normalizers/prefixing-normalizer.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-page-path.ts","webpack://next/./dist/src/server/normalizers/built/app/app-bundle-path-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/app-filename-normalizer.ts","webpack://next/./dist/src/server/normalizers/wrap-normalizer-fn.ts","webpack://next/./dist/src/lib/page-types.ts","webpack://next/./dist/src/server/normalizers/underscore-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/app-pathname-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/index.ts","webpack://next/./dist/src/server/route-kind.ts","webpack://next/./dist/src/server/route-matchers/app-page-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/helpers/cached-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/manifest-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/app-page-route-matcher-provider.ts","webpack://next/./dist/src/lib/is-app-page-route.ts","webpack://next/./dist/src/server/route-matchers/app-route-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/app-route-route-matcher-provider.ts","webpack://next/./dist/src/lib/is-app-route-route.ts","webpack://next/./dist/src/lib/is-api-route.ts","webpack://next/./dist/src/server/route-matchers/pages-api-route-matcher.ts","webpack://next/./dist/src/server/normalizers/built/pages/pages-bundle-path-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/pages/pages-filename-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/pages/index.ts","webpack://next/./dist/src/server/route-matcher-providers/pages-api-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matchers/pages-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/pages-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/helpers/manifest-loaders/server-manifest-loader.ts","webpack://next/./dist/src/server/lib/i18n-provider.ts","webpack://next/./dist/src/server/send-response.ts","webpack://next/external commonjs \"next/dist/client/components/static-generation-async-storage.external.js\"","webpack://next/./dist/src/server/web/spec-extension/adapters/request-cookies.ts","webpack://next/./dist/src/server/lib/match-next-data-pathname.ts","webpack://next/./dist/src/server/normalizers/request/suffix.ts","webpack://next/./dist/src/server/normalizers/request/rsc.ts","webpack://next/./dist/src/server/normalizers/request/prefix.ts","webpack://next/./dist/src/server/normalizers/request/postponed.ts","webpack://next/./dist/src/server/normalizers/request/action.ts","webpack://next/./dist/src/server/app-render/strip-flight-headers.ts","webpack://next/./dist/src/server/route-modules/checks.ts","webpack://next/./dist/src/server/normalizers/request/prefetch-rsc.ts","webpack://next/./dist/src/server/normalizers/request/next-data.ts","webpack://next/./dist/src/server/lib/to-route.ts","webpack://next/./dist/src/server/after/builtin-request-context.ts","webpack://next/./dist/src/server/web/spec-extension/fetch-event.ts","webpack://next/./dist/src/server/web/spec-extension/response.ts","webpack://next/./dist/src/server/web/globals.ts","webpack://next/external commonjs \"next/dist/client/components/request-async-storage.external.js\"","webpack://next/./dist/src/server/web/adapter.ts","webpack://next/./dist/src/server/base-server.ts","webpack://next/./dist/src/shared/lib/router/utils/get-route-from-asset-path.ts","webpack://next/./dist/src/server/lib/format-hostname.ts","webpack://next/./dist/src/server/lib/experimental/ppr.ts","webpack://next/./dist/src/server/lib/patch-set-header.ts","webpack://next/./dist/src/server/server-utils.ts","webpack://next/./dist/src/server/utils.ts","webpack://next/./dist/src/lib/is-edge-runtime.ts","webpack://next/./dist/src/server/lib/server-action-request-meta.ts","webpack://next/./dist/src/shared/lib/router/utils/escape-path-delimiters.ts","webpack://next/./dist/src/server/route-modules/helpers/response-handlers.ts","webpack://next/./dist/src/lib/redirect-status.ts","webpack://next/external node-commonjs \"vm\"","webpack://next/./dist/src/shared/lib/deep-freeze.ts","webpack://next/./dist/src/server/load-manifest.ts","webpack://next/./dist/src/server/require.ts","webpack://next/./dist/src/lib/interop-default.ts","webpack://next/./dist/src/lib/wait.ts","webpack://next/./dist/src/server/app-render/encryption-utils.ts","webpack://next/./dist/src/server/load-components.ts","webpack://next/./dist/src/server/app-render/action-utils.ts","webpack://next/external node-commonjs \"stream\"","webpack://next/./dist/src/lib/batcher.ts","webpack://next/./dist/src/lib/scheduler.ts","webpack://next/./dist/src/server/response-cache/utils.ts","webpack://next/./dist/src/server/response-cache/index.ts","webpack://next/./dist/src/server/lib/incremental-cache/shared-revalidate-timings.ts","webpack://next/./dist/src/server/lib/incremental-cache/index.ts","webpack://next/external node-commonjs \"http\"","webpack://next/external node-commonjs \"https\"","webpack://next/./dist/src/server/lib/node-fs-methods.ts","webpack://next/./dist/src/server/lib/mock-request.ts","webpack://next/./dist/src/server/lib/module-loader/node-module-loader.ts","webpack://next/./dist/src/server/lib/module-loader/route-module-loader.ts","webpack://next/./dist/src/lib/format-dynamic-import-path.ts","webpack://next/./dist/src/lib/generate-interception-routes-rewrites.ts","webpack://next/./dist/src/server/next-server.ts","webpack://next/./dist/src/server/route-matches/pages-api-route-match.ts","webpack://next/./dist/src/server/setup-http-agent-env.ts","webpack://next/./dist/src/shared/lib/router/utils/middleware-route-matcher.ts","webpack://next/./dist/src/server/body-streams.ts"],"sourcesContent":["(()=>{var e={383:e=>{\"use strict\";function _searchLast(e,t){const n=Array.from(e.matchAll(t));return n.length>0?n.slice(-1)[0].index:-1}function _interpolate(e,t,n){const r=_searchLast(e,/(?!(?<=\\\\))\\$/g);if(r===-1)return e;const o=e.slice(r);const s=/((?!(?<=\\\\))\\${?([\\w]+)(?::-([^}\\\\]*))?}?)/;const i=o.match(s);if(i!=null){const[,r,o,s]=i;return _interpolate(e.replace(r,t[o]||s||n.parsed[o]||\"\"),t,n)}return e}function _resolveEscapeSequences(e){return e.replace(/\\\\\\$/g,\"$\")}function expand(e){const t=e.ignoreProcessEnv?{}:process.env;for(const n in e.parsed){const r=Object.prototype.hasOwnProperty.call(t,n)?t[n]:e.parsed[n];e.parsed[n]=_resolveEscapeSequences(_interpolate(r,t,e))}for(const n in e.parsed){t[n]=e.parsed[n]}return e}e.exports.j=expand},234:(e,t,n)=>{const r=n(147);const o=n(17);const s=n(37);const i=n(113);const c=n(803);const a=c.version;const p=/(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/gm;function parse(e){const t={};let n=e.toString();n=n.replace(/\\r\\n?/gm,\"\\n\");let r;while((r=p.exec(n))!=null){const e=r[1];let n=r[2]||\"\";n=n.trim();const o=n[0];n=n.replace(/^(['\"`])([\\s\\S]*)\\1$/gm,\"$2\");if(o==='\"'){n=n.replace(/\\\\n/g,\"\\n\");n=n.replace(/\\\\r/g,\"\\r\")}t[e]=n}return t}function _parseVault(e){const t=_vaultPath(e);const n=l.configDotenv({path:t});if(!n.parsed){throw new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`)}const r=_dotenvKey(e).split(\",\");const o=r.length;let s;for(let e=0;e<o;e++){try{const t=r[e].trim();const o=_instructions(n,t);s=l.decrypt(o.ciphertext,o.key);break}catch(t){if(e+1>=o){throw t}}}return l.parse(s)}function _log(e){console.log(`[dotenv@${a}][INFO] ${e}`)}function _warn(e){console.log(`[dotenv@${a}][WARN] ${e}`)}function _debug(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function _dotenvKey(e){if(e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0){return e.DOTENV_KEY}if(process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0){return process.env.DOTENV_KEY}return\"\"}function _instructions(e,t){let n;try{n=new URL(t)}catch(e){if(e.code===\"ERR_INVALID_URL\"){throw new Error(\"INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development\")}throw e}const r=n.password;if(!r){throw new Error(\"INVALID_DOTENV_KEY: Missing key part\")}const o=n.searchParams.get(\"environment\");if(!o){throw new Error(\"INVALID_DOTENV_KEY: Missing environment part\")}const s=`DOTENV_VAULT_${o.toUpperCase()}`;const i=e.parsed[s];if(!i){throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`)}return{ciphertext:i,key:r}}function _vaultPath(e){let t=o.resolve(process.cwd(),\".env\");if(e&&e.path&&e.path.length>0){t=e.path}return t.endsWith(\".vault\")?t:`${t}.vault`}function _resolveHome(e){return e[0]===\"~\"?o.join(s.homedir(),e.slice(1)):e}function _configVault(e){_log(\"Loading env from encrypted .env.vault\");const t=l._parseVault(e);let n=process.env;if(e&&e.processEnv!=null){n=e.processEnv}l.populate(n,t,e);return{parsed:t}}function configDotenv(e){let t=o.resolve(process.cwd(),\".env\");let n=\"utf8\";const s=Boolean(e&&e.debug);if(e){if(e.path!=null){t=_resolveHome(e.path)}if(e.encoding!=null){n=e.encoding}}try{const o=l.parse(r.readFileSync(t,{encoding:n}));let s=process.env;if(e&&e.processEnv!=null){s=e.processEnv}l.populate(s,o,e);return{parsed:o}}catch(e){if(s){_debug(`Failed to load ${t} ${e.message}`)}return{error:e}}}function config(e){const t=_vaultPath(e);if(_dotenvKey(e).length===0){return l.configDotenv(e)}if(!r.existsSync(t)){_warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`);return l.configDotenv(e)}return l._configVault(e)}function decrypt(e,t){const n=Buffer.from(t.slice(-64),\"hex\");let r=Buffer.from(e,\"base64\");const o=r.slice(0,12);const s=r.slice(-16);r=r.slice(12,-16);try{const e=i.createDecipheriv(\"aes-256-gcm\",n,o);e.setAuthTag(s);return`${e.update(r)}${e.final()}`}catch(e){const t=e instanceof RangeError;const n=e.message===\"Invalid key length\";const r=e.message===\"Unsupported state or unable to authenticate data\";if(t||n){const e=\"INVALID_DOTENV_KEY: It must be 64 characters long (or more)\";throw new Error(e)}else if(r){const e=\"DECRYPTION_FAILED: Please check your DOTENV_KEY\";throw new Error(e)}else{console.error(\"Error: \",e.code);console.error(\"Error: \",e.message);throw e}}}function populate(e,t,n={}){const r=Boolean(n&&n.debug);const o=Boolean(n&&n.override);if(typeof t!==\"object\"){throw new Error(\"OBJECT_REQUIRED: Please check the processEnv argument being passed to populate\")}for(const n of Object.keys(t)){if(Object.prototype.hasOwnProperty.call(e,n)){if(o===true){e[n]=t[n]}if(r){if(o===true){_debug(`\"${n}\" is already defined and WAS overwritten`)}else{_debug(`\"${n}\" is already defined and was NOT overwritten`)}}}else{e[n]=t[n]}}}const l={configDotenv:configDotenv,_configVault:_configVault,_parseVault:_parseVault,config:config,decrypt:decrypt,parse:parse,populate:populate};e.exports.configDotenv=l.configDotenv;e.exports._configVault=l._configVault;e.exports._parseVault=l._parseVault;e.exports.config=l.config;e.exports.decrypt=l.decrypt;e.exports.parse=l.parse;e.exports.populate=l.populate;e.exports=l},113:e=>{\"use strict\";e.exports=require(\"crypto\")},147:e=>{\"use strict\";e.exports=require(\"fs\")},37:e=>{\"use strict\";e.exports=require(\"os\")},17:e=>{\"use strict\";e.exports=require(\"path\")},803:e=>{\"use strict\";e.exports=JSON.parse('{\"name\":\"dotenv\",\"version\":\"16.3.1\",\"description\":\"Loads environment variables from .env file\",\"main\":\"lib/main.js\",\"types\":\"lib/main.d.ts\",\"exports\":{\".\":{\"types\":\"./lib/main.d.ts\",\"require\":\"./lib/main.js\",\"default\":\"./lib/main.js\"},\"./config\":\"./config.js\",\"./config.js\":\"./config.js\",\"./lib/env-options\":\"./lib/env-options.js\",\"./lib/env-options.js\":\"./lib/env-options.js\",\"./lib/cli-options\":\"./lib/cli-options.js\",\"./lib/cli-options.js\":\"./lib/cli-options.js\",\"./package.json\":\"./package.json\"},\"scripts\":{\"dts-check\":\"tsc --project tests/types/tsconfig.json\",\"lint\":\"standard\",\"lint-readme\":\"standard-markdown\",\"pretest\":\"npm run lint && npm run dts-check\",\"test\":\"tap tests/*.js --100 -Rspec\",\"prerelease\":\"npm test\",\"release\":\"standard-version\"},\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/motdotla/dotenv.git\"},\"funding\":\"https://github.com/motdotla/dotenv?sponsor=1\",\"keywords\":[\"dotenv\",\"env\",\".env\",\"environment\",\"variables\",\"config\",\"settings\"],\"readmeFilename\":\"README.md\",\"license\":\"BSD-2-Clause\",\"devDependencies\":{\"@definitelytyped/dtslint\":\"^0.0.133\",\"@types/node\":\"^18.11.3\",\"decache\":\"^4.6.1\",\"sinon\":\"^14.0.1\",\"standard\":\"^17.0.0\",\"standard-markdown\":\"^7.1.0\",\"standard-version\":\"^9.5.0\",\"tap\":\"^16.3.0\",\"tar\":\"^6.1.11\",\"typescript\":\"^4.8.4\"},\"engines\":{\"node\":\">=12\"},\"browser\":{\"fs\":false}}')}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var o=t[n]={exports:{}};var s=true;try{e[n](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return o.exports}(()=>{__nccwpck_require__.n=e=>{var t=e&&e.__esModule?()=>e[\"default\"]:()=>e;__nccwpck_require__.d(t,{a:t});return t}})();(()=>{__nccwpck_require__.d=(e,t)=>{for(var n in t){if(__nccwpck_require__.o(t,n)&&!__nccwpck_require__.o(e,n)){Object.defineProperty(e,n,{enumerable:true,get:t[n]})}}}})();(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();(()=>{__nccwpck_require__.r=e=>{if(typeof Symbol!==\"undefined\"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"})}Object.defineProperty(e,\"__esModule\",{value:true})}})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{\"use strict\";__nccwpck_require__.r(n);__nccwpck_require__.d(n,{initialEnv:()=>a,updateInitialEnv:()=>updateInitialEnv,processEnv:()=>processEnv,resetEnv:()=>resetEnv,loadEnvConfig:()=>loadEnvConfig});var e=__nccwpck_require__(147);var t=__nccwpck_require__.n(e);var r=__nccwpck_require__(17);var o=__nccwpck_require__.n(r);var s=__nccwpck_require__(234);var i=__nccwpck_require__.n(s);var c=__nccwpck_require__(383);let a=undefined;let p=undefined;let l=undefined;let u=[];let _=[];function updateInitialEnv(e){Object.assign(a||{},e)}function replaceProcessEnv(e){Object.keys(process.env).forEach((t=>{if(!t.startsWith(\"__NEXT_PRIVATE\")){if(e[t]===undefined||e[t]===\"\"){delete process.env[t]}}}));Object.entries(e).forEach((([e,t])=>{process.env[e]=t}))}function processEnv(e,t,n=console,o=false,i){var p;if(!a){a=Object.assign({},process.env)}if(!o&&(process.env.__NEXT_PROCESSED_ENV||e.length===0)){return[process.env]}process.env.__NEXT_PROCESSED_ENV=\"true\";const l=Object.assign({},a);const u={};for(const o of e){try{let e={};e.parsed=s.parse(o.contents);e=(0,c.j)(e);if(e.parsed&&!_.some((e=>e.contents===o.contents&&e.path===o.path))){i===null||i===void 0?void 0:i(o.path)}for(const t of Object.keys(e.parsed||{})){if(typeof u[t]===\"undefined\"&&typeof l[t]===\"undefined\"){u[t]=(p=e.parsed)===null||p===void 0?void 0:p[t]}}}catch(e){n.error(`Failed to load env from ${r.join(t||\"\",o.path)}`,e)}}return[Object.assign(process.env,u),u]}function resetEnv(){if(a){replaceProcessEnv(a)}}function loadEnvConfig(t,n,o=console,s=false,i){if(!a){a=Object.assign({},process.env)}if(p&&!s){return{combinedEnv:p,parsedEnv:l,loadedEnvFiles:u}}replaceProcessEnv(a);_=u;u=[];const c=process.env.NODE_ENV===\"test\";const d=c?\"test\":n?\"development\":\"production\";const f=[`.env.${d}.local`,d!==\"test\"&&`.env.local`,`.env.${d}`,\".env\"].filter(Boolean);for(const n of f){const s=r.join(t,n);try{const t=e.statSync(s);if(!t.isFile()){continue}const r=e.readFileSync(s,\"utf8\");u.push({path:n,contents:r})}catch(e){if(e.code!==\"ENOENT\"){o.error(`Failed to load env from ${n}`,e)}}}[p,l]=processEnv(u,t,o,s,i);return{combinedEnv:p,parsedEnv:l,loadedEnvFiles:u}}})();module.exports=n})();","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, path, domain] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0].path, args[0].domain];\n    return this.set({ name, path, domain, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","(()=>{\"use strict\";var e={695:e=>{\n/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\nvar r=/(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;e.exports=fresh;function fresh(e,a){var t=e[\"if-modified-since\"];var s=e[\"if-none-match\"];if(!t&&!s){return false}var i=e[\"cache-control\"];if(i&&r.test(i)){return false}if(s&&s!==\"*\"){var f=a[\"etag\"];if(!f){return false}var n=true;var u=parseTokenList(s);for(var _=0;_<u.length;_++){var o=u[_];if(o===f||o===\"W/\"+f||\"W/\"+o===f){n=false;break}}if(n){return false}}if(t){var p=a[\"last-modified\"];var v=!p||!(parseHttpDate(p)<=parseHttpDate(t));if(v){return false}}return true}function parseHttpDate(e){var r=e&&Date.parse(e);return typeof r===\"number\"?r:NaN}function parseTokenList(e){var r=0;var a=[];var t=0;for(var s=0,i=e.length;s<i;s++){switch(e.charCodeAt(s)){case 32:if(t===r){t=r=s+1}break;case 44:a.push(e.substring(t,r));t=r=s+1;break;default:r=s+1;break}}a.push(e.substring(t,r));return a}}};var r={};function __nccwpck_require__(a){var t=r[a];if(t!==undefined){return t.exports}var s=r[a]={exports:{}};var i=true;try{e[a](s,s.exports,__nccwpck_require__);i=false}finally{if(i)delete r[a]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var a=__nccwpck_require__(695);module.exports=a})();","(()=>{\"use strict\";var t={806:(t,e,i)=>{const s=i(190);const n=Symbol(\"max\");const l=Symbol(\"length\");const r=Symbol(\"lengthCalculator\");const h=Symbol(\"allowStale\");const a=Symbol(\"maxAge\");const o=Symbol(\"dispose\");const u=Symbol(\"noDisposeOnSet\");const f=Symbol(\"lruList\");const p=Symbol(\"cache\");const v=Symbol(\"updateAgeOnGet\");const naiveLength=()=>1;class LRUCache{constructor(t){if(typeof t===\"number\")t={max:t};if(!t)t={};if(t.max&&(typeof t.max!==\"number\"||t.max<0))throw new TypeError(\"max must be a non-negative number\");const e=this[n]=t.max||Infinity;const i=t.length||naiveLength;this[r]=typeof i!==\"function\"?naiveLength:i;this[h]=t.stale||false;if(t.maxAge&&typeof t.maxAge!==\"number\")throw new TypeError(\"maxAge must be a number\");this[a]=t.maxAge||0;this[o]=t.dispose;this[u]=t.noDisposeOnSet||false;this[v]=t.updateAgeOnGet||false;this.reset()}set max(t){if(typeof t!==\"number\"||t<0)throw new TypeError(\"max must be a non-negative number\");this[n]=t||Infinity;trim(this)}get max(){return this[n]}set allowStale(t){this[h]=!!t}get allowStale(){return this[h]}set maxAge(t){if(typeof t!==\"number\")throw new TypeError(\"maxAge must be a non-negative number\");this[a]=t;trim(this)}get maxAge(){return this[a]}set lengthCalculator(t){if(typeof t!==\"function\")t=naiveLength;if(t!==this[r]){this[r]=t;this[l]=0;this[f].forEach((t=>{t.length=this[r](t.value,t.key);this[l]+=t.length}))}trim(this)}get lengthCalculator(){return this[r]}get length(){return this[l]}get itemCount(){return this[f].length}rforEach(t,e){e=e||this;for(let i=this[f].tail;i!==null;){const s=i.prev;forEachStep(this,t,i,e);i=s}}forEach(t,e){e=e||this;for(let i=this[f].head;i!==null;){const s=i.next;forEachStep(this,t,i,e);i=s}}keys(){return this[f].toArray().map((t=>t.key))}values(){return this[f].toArray().map((t=>t.value))}reset(){if(this[o]&&this[f]&&this[f].length){this[f].forEach((t=>this[o](t.key,t.value)))}this[p]=new Map;this[f]=new s;this[l]=0}dump(){return this[f].map((t=>isStale(this,t)?false:{k:t.key,v:t.value,e:t.now+(t.maxAge||0)})).toArray().filter((t=>t))}dumpLru(){return this[f]}set(t,e,i){i=i||this[a];if(i&&typeof i!==\"number\")throw new TypeError(\"maxAge must be a number\");const s=i?Date.now():0;const h=this[r](e,t);if(this[p].has(t)){if(h>this[n]){del(this,this[p].get(t));return false}const r=this[p].get(t);const a=r.value;if(this[o]){if(!this[u])this[o](t,a.value)}a.now=s;a.maxAge=i;a.value=e;this[l]+=h-a.length;a.length=h;this.get(t);trim(this);return true}const v=new Entry(t,e,h,s,i);if(v.length>this[n]){if(this[o])this[o](t,e);return false}this[l]+=v.length;this[f].unshift(v);this[p].set(t,this[f].head);trim(this);return true}has(t){if(!this[p].has(t))return false;const e=this[p].get(t).value;return!isStale(this,e)}get(t){return get(this,t,true)}peek(t){return get(this,t,false)}pop(){const t=this[f].tail;if(!t)return null;del(this,t);return t.value}del(t){del(this,this[p].get(t))}load(t){this.reset();const e=Date.now();for(let i=t.length-1;i>=0;i--){const s=t[i];const n=s.e||0;if(n===0)this.set(s.k,s.v);else{const t=n-e;if(t>0){this.set(s.k,s.v,t)}}}}prune(){this[p].forEach(((t,e)=>get(this,e,false)))}}const get=(t,e,i)=>{const s=t[p].get(e);if(s){const e=s.value;if(isStale(t,e)){del(t,s);if(!t[h])return undefined}else{if(i){if(t[v])s.value.now=Date.now();t[f].unshiftNode(s)}}return e.value}};const isStale=(t,e)=>{if(!e||!e.maxAge&&!t[a])return false;const i=Date.now()-e.now;return e.maxAge?i>e.maxAge:t[a]&&i>t[a]};const trim=t=>{if(t[l]>t[n]){for(let e=t[f].tail;t[l]>t[n]&&e!==null;){const i=e.prev;del(t,e);e=i}}};const del=(t,e)=>{if(e){const i=e.value;if(t[o])t[o](i.key,i.value);t[l]-=i.length;t[p].delete(i.key);t[f].removeNode(e)}};class Entry{constructor(t,e,i,s,n){this.key=t;this.value=e;this.length=i;this.now=s;this.maxAge=n||0}}const forEachStep=(t,e,i,s)=>{let n=i.value;if(isStale(t,n)){del(t,i);if(!t[h])n=undefined}if(n)e.call(s,n.value,n.key,t)};t.exports=LRUCache},76:t=>{t.exports=function(t){t.prototype[Symbol.iterator]=function*(){for(let t=this.head;t;t=t.next){yield t.value}}}},190:(t,e,i)=>{t.exports=Yallist;Yallist.Node=Node;Yallist.create=Yallist;function Yallist(t){var e=this;if(!(e instanceof Yallist)){e=new Yallist}e.tail=null;e.head=null;e.length=0;if(t&&typeof t.forEach===\"function\"){t.forEach((function(t){e.push(t)}))}else if(arguments.length>0){for(var i=0,s=arguments.length;i<s;i++){e.push(arguments[i])}}return e}Yallist.prototype.removeNode=function(t){if(t.list!==this){throw new Error(\"removing node which does not belong to this list\")}var e=t.next;var i=t.prev;if(e){e.prev=i}if(i){i.next=e}if(t===this.head){this.head=e}if(t===this.tail){this.tail=i}t.list.length--;t.next=null;t.prev=null;t.list=null;return e};Yallist.prototype.unshiftNode=function(t){if(t===this.head){return}if(t.list){t.list.removeNode(t)}var e=this.head;t.list=this;t.next=e;if(e){e.prev=t}this.head=t;if(!this.tail){this.tail=t}this.length++};Yallist.prototype.pushNode=function(t){if(t===this.tail){return}if(t.list){t.list.removeNode(t)}var e=this.tail;t.list=this;t.prev=e;if(e){e.next=t}this.tail=t;if(!this.head){this.head=t}this.length++};Yallist.prototype.push=function(){for(var t=0,e=arguments.length;t<e;t++){push(this,arguments[t])}return this.length};Yallist.prototype.unshift=function(){for(var t=0,e=arguments.length;t<e;t++){unshift(this,arguments[t])}return this.length};Yallist.prototype.pop=function(){if(!this.tail){return undefined}var t=this.tail.value;this.tail=this.tail.prev;if(this.tail){this.tail.next=null}else{this.head=null}this.length--;return t};Yallist.prototype.shift=function(){if(!this.head){return undefined}var t=this.head.value;this.head=this.head.next;if(this.head){this.head.prev=null}else{this.tail=null}this.length--;return t};Yallist.prototype.forEach=function(t,e){e=e||this;for(var i=this.head,s=0;i!==null;s++){t.call(e,i.value,s,this);i=i.next}};Yallist.prototype.forEachReverse=function(t,e){e=e||this;for(var i=this.tail,s=this.length-1;i!==null;s--){t.call(e,i.value,s,this);i=i.prev}};Yallist.prototype.get=function(t){for(var e=0,i=this.head;i!==null&&e<t;e++){i=i.next}if(e===t&&i!==null){return i.value}};Yallist.prototype.getReverse=function(t){for(var e=0,i=this.tail;i!==null&&e<t;e++){i=i.prev}if(e===t&&i!==null){return i.value}};Yallist.prototype.map=function(t,e){e=e||this;var i=new Yallist;for(var s=this.head;s!==null;){i.push(t.call(e,s.value,this));s=s.next}return i};Yallist.prototype.mapReverse=function(t,e){e=e||this;var i=new Yallist;for(var s=this.tail;s!==null;){i.push(t.call(e,s.value,this));s=s.prev}return i};Yallist.prototype.reduce=function(t,e){var i;var s=this.head;if(arguments.length>1){i=e}else if(this.head){s=this.head.next;i=this.head.value}else{throw new TypeError(\"Reduce of empty list with no initial value\")}for(var n=0;s!==null;n++){i=t(i,s.value,n);s=s.next}return i};Yallist.prototype.reduceReverse=function(t,e){var i;var s=this.tail;if(arguments.length>1){i=e}else if(this.tail){s=this.tail.prev;i=this.tail.value}else{throw new TypeError(\"Reduce of empty list with no initial value\")}for(var n=this.length-1;s!==null;n--){i=t(i,s.value,n);s=s.prev}return i};Yallist.prototype.toArray=function(){var t=new Array(this.length);for(var e=0,i=this.head;i!==null;e++){t[e]=i.value;i=i.next}return t};Yallist.prototype.toArrayReverse=function(){var t=new Array(this.length);for(var e=0,i=this.tail;i!==null;e++){t[e]=i.value;i=i.prev}return t};Yallist.prototype.slice=function(t,e){e=e||this.length;if(e<0){e+=this.length}t=t||0;if(t<0){t+=this.length}var i=new Yallist;if(e<t||e<0){return i}if(t<0){t=0}if(e>this.length){e=this.length}for(var s=0,n=this.head;n!==null&&s<t;s++){n=n.next}for(;n!==null&&s<e;s++,n=n.next){i.push(n.value)}return i};Yallist.prototype.sliceReverse=function(t,e){e=e||this.length;if(e<0){e+=this.length}t=t||0;if(t<0){t+=this.length}var i=new Yallist;if(e<t||e<0){return i}if(t<0){t=0}if(e>this.length){e=this.length}for(var s=this.length,n=this.tail;n!==null&&s>e;s--){n=n.prev}for(;n!==null&&s>t;s--,n=n.prev){i.push(n.value)}return i};Yallist.prototype.splice=function(t,e){if(t>this.length){t=this.length-1}if(t<0){t=this.length+t}for(var i=0,s=this.head;s!==null&&i<t;i++){s=s.next}var n=[];for(var i=0;s&&i<e;i++){n.push(s.value);s=this.removeNode(s)}if(s===null){s=this.tail}if(s!==this.head&&s!==this.tail){s=s.prev}for(var i=2;i<arguments.length;i++){s=insert(this,s,arguments[i])}return n};Yallist.prototype.reverse=function(){var t=this.head;var e=this.tail;for(var i=t;i!==null;i=i.prev){var s=i.prev;i.prev=i.next;i.next=s}this.head=e;this.tail=t;return this};function insert(t,e,i){var s=e===t.head?new Node(i,null,e,t):new Node(i,e,e.next,t);if(s.next===null){t.tail=s}if(s.prev===null){t.head=s}t.length++;return s}function push(t,e){t.tail=new Node(e,t.tail,null,t);if(!t.head){t.head=t.tail}t.length++}function unshift(t,e){t.head=new Node(e,null,t.head,t);if(!t.tail){t.tail=t.head}t.length++}function Node(t,e,i,s){if(!(this instanceof Node)){return new Node(t,e,i,s)}this.list=s;this.value=t;if(e){e.next=this;this.prev=e}else{this.prev=null}if(i){i.prev=this;this.next=i}else{this.next=null}}try{i(76)(Yallist)}catch(t){}}};var e={};function __nccwpck_require__(i){var s=e[i];if(s!==undefined){return s.exports}var n=e[i]={exports:{}};var l=true;try{t[i](n,n.exports,__nccwpck_require__);l=false}finally{if(l)delete e[i]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var i=__nccwpck_require__(806);module.exports=i})();","(()=>{\"use strict\";var e={993:e=>{var t=Object.prototype.hasOwnProperty,n=\"~\";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)n=false}function EE(e,t,n){this.fn=e;this.context=t;this.once=n||false}function addListener(e,t,r,i,s){if(typeof r!==\"function\"){throw new TypeError(\"The listener must be a function\")}var o=new EE(r,i||e,s),u=n?n+t:t;if(!e._events[u])e._events[u]=o,e._eventsCount++;else if(!e._events[u].fn)e._events[u].push(o);else e._events[u]=[e._events[u],o];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events){if(t.call(r,i))e.push(n?i.slice(1):i)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(r))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=n?n+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var i=0,s=r.length,o=new Array(s);i<s;i++){o[i]=r[i].fn}return o};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=n?n+e:e,r=this._events[t];if(!r)return 0;if(r.fn)return 1;return r.length};EventEmitter.prototype.emit=function emit(e,t,r,i,s,o){var u=n?n+e:e;if(!this._events[u])return false;var a=this._events[u],l=arguments.length,c,h;if(a.fn){if(a.once)this.removeListener(e,a.fn,undefined,true);switch(l){case 1:return a.fn.call(a.context),true;case 2:return a.fn.call(a.context,t),true;case 3:return a.fn.call(a.context,t,r),true;case 4:return a.fn.call(a.context,t,r,i),true;case 5:return a.fn.call(a.context,t,r,i,s),true;case 6:return a.fn.call(a.context,t,r,i,s,o),true}for(h=1,c=new Array(l-1);h<l;h++){c[h-1]=arguments[h]}a.fn.apply(a.context,c)}else{var _=a.length,f;for(h=0;h<_;h++){if(a[h].once)this.removeListener(e,a[h].fn,undefined,true);switch(l){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,t);break;case 3:a[h].fn.call(a[h].context,t,r);break;case 4:a[h].fn.call(a[h].context,t,r,i);break;default:if(!c)for(f=1,c=new Array(l-1);f<l;f++){c[f-1]=arguments[f]}a[h].fn.apply(a[h].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,n){return addListener(this,e,t,n,false)};EventEmitter.prototype.once=function once(e,t,n){return addListener(this,e,t,n,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,r,i){var s=n?n+e:e;if(!this._events[s])return this;if(!t){clearEvent(this,s);return this}var o=this._events[s];if(o.fn){if(o.fn===t&&(!i||o.once)&&(!r||o.context===r)){clearEvent(this,s)}}else{for(var u=0,a=[],l=o.length;u<l;u++){if(o[u].fn!==t||i&&!o[u].once||r&&o[u].context!==r){a.push(o[u])}}if(a.length)this._events[s]=a.length===1?a[0]:a;else clearEvent(this,s)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=n?n+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=n;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},213:e=>{e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},574:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});function lowerBound(e,t,n){let r=0;let i=e.length;while(i>0){const s=i/2|0;let o=r+s;if(n(e[o],t)<=0){r=++o;i-=s+1}else{i=s}}return r}t[\"default\"]=lowerBound},821:(e,t,n)=>{Object.defineProperty(t,\"__esModule\",{value:true});const r=n(574);class PriorityQueue{constructor(){this._queue=[]}enqueue(e,t){t=Object.assign({priority:0},t);const n={priority:t.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority){this._queue.push(n);return}const i=r.default(this._queue,n,((e,t)=>t.priority-e.priority));this._queue.splice(i,0,n)}dequeue(){const e=this._queue.shift();return e===null||e===void 0?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}t[\"default\"]=PriorityQueue},816:(e,t,n)=>{const r=n(213);class TimeoutError extends Error{constructor(e){super(e);this.name=\"TimeoutError\"}}const pTimeout=(e,t,n)=>new Promise(((i,s)=>{if(typeof t!==\"number\"||t<0){throw new TypeError(\"Expected `milliseconds` to be a positive number\")}if(t===Infinity){i(e);return}const o=setTimeout((()=>{if(typeof n===\"function\"){try{i(n())}catch(e){s(e)}return}const r=typeof n===\"string\"?n:`Promise timed out after ${t} milliseconds`;const o=n instanceof Error?n:new TimeoutError(r);if(typeof e.cancel===\"function\"){e.cancel()}s(o)}),t);r(e.then(i,s),(()=>{clearTimeout(o)}))}));e.exports=pTimeout;e.exports[\"default\"]=pTimeout;e.exports.TimeoutError=TimeoutError}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{var e=n;Object.defineProperty(e,\"__esModule\",{value:true});const t=__nccwpck_require__(993);const r=__nccwpck_require__(816);const i=__nccwpck_require__(821);const empty=()=>{};const s=new r.TimeoutError;class PQueue extends t{constructor(e){var t,n,r,s;super();this._intervalCount=0;this._intervalEnd=0;this._pendingCount=0;this._resolveEmpty=empty;this._resolveIdle=empty;e=Object.assign({carryoverConcurrencyCount:false,intervalCap:Infinity,interval:0,concurrency:Infinity,autoStart:true,queueClass:i.default},e);if(!(typeof e.intervalCap===\"number\"&&e.intervalCap>=1)){throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:\"\"}\\` (${typeof e.intervalCap})`)}if(e.interval===undefined||!(Number.isFinite(e.interval)&&e.interval>=0)){throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(s=(r=e.interval)===null||r===void 0?void 0:r.toString())!==null&&s!==void 0?s:\"\"}\\` (${typeof e.interval})`)}this._carryoverConcurrencyCount=e.carryoverConcurrencyCount;this._isIntervalIgnored=e.intervalCap===Infinity||e.interval===0;this._intervalCap=e.intervalCap;this._interval=e.interval;this._queue=new e.queueClass;this._queueClass=e.queueClass;this.concurrency=e.concurrency;this._timeout=e.timeout;this._throwOnTimeout=e.throwOnTimeout===true;this._isPaused=e.autoStart===false}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--;this._tryToStartAnother();this.emit(\"next\")}_resolvePromises(){this._resolveEmpty();this._resolveEmpty=empty;if(this._pendingCount===0){this._resolveIdle();this._resolveIdle=empty;this.emit(\"idle\")}}_onResumeInterval(){this._onInterval();this._initializeIntervalIfNeeded();this._timeoutId=undefined}_isIntervalPaused(){const e=Date.now();if(this._intervalId===undefined){const t=this._intervalEnd-e;if(t<0){this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}else{if(this._timeoutId===undefined){this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)}return true}}return false}_tryToStartAnother(){if(this._queue.size===0){if(this._intervalId){clearInterval(this._intervalId)}this._intervalId=undefined;this._resolvePromises();return false}if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();if(!t){return false}this.emit(\"active\");t();if(e){this._initializeIntervalIfNeeded()}return true}}return false}_initializeIntervalIfNeeded(){if(this._isIntervalIgnored||this._intervalId!==undefined){return}this._intervalId=setInterval((()=>{this._onInterval()}),this._interval);this._intervalEnd=Date.now()+this._interval}_onInterval(){if(this._intervalCount===0&&this._pendingCount===0&&this._intervalId){clearInterval(this._intervalId);this._intervalId=undefined}this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._processQueue()}_processQueue(){while(this._tryToStartAnother()){}}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e===\"number\"&&e>=1)){throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${e}\\` (${typeof e})`)}this._concurrency=e;this._processQueue()}async add(e,t={}){return new Promise(((n,i)=>{const run=async()=>{this._pendingCount++;this._intervalCount++;try{const o=this._timeout===undefined&&t.timeout===undefined?e():r.default(Promise.resolve(e()),t.timeout===undefined?this._timeout:t.timeout,(()=>{if(t.throwOnTimeout===undefined?this._throwOnTimeout:t.throwOnTimeout){i(s)}return undefined}));n(await o)}catch(e){i(e)}this._next()};this._queue.enqueue(run,t);this._tryToStartAnother();this.emit(\"add\")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){if(!this._isPaused){return this}this._isPaused=false;this._processQueue();return this}pause(){this._isPaused=true}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size===0){return}return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t();e()}}))}async onIdle(){if(this._pendingCount===0&&this._queue.size===0){return}return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t();e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}e[\"default\"]=PQueue})();module.exports=n})();","/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\" } = options;\n  const defaultPattern = `[^${escapeString(options.delimiter || \"/#?\")}]+?`;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    // tslint:disable-next-line\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? defaultPattern : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {}\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map(token => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {}\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function(pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      // tslint:disable-next-line\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map(value => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  // Use a negative lookahead to match only capturing groups.\n  const groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (let i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: \"\",\n        suffix: \"\",\n        modifier: \"\",\n        pattern: \"\"\n      });\n    }\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  const parts = paths.map(path => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp allows an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {}\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x\n  } = options;\n  const endsWith = `[${escapeString(options.endsWith || \"\")}]|$`;\n  const delimiter = `[${escapeString(options.delimiter || \"/#?\")}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiter}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWith})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n        : // tslint:disable-next-line\n          endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiter}(?=${endsWith}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiter}|${endsWith})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n","import type { ServerRuntime } from '../types'\n\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_SOFT_TAGS_HEADER = 'x-next-cache-soft-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 64\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The layer for the API routes.\n   */\n  api: 'api',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The server bundle layer for metadata routes.\n   */\n  appMetadataRoute: 'app-metadata-route',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.appMetadataRoute,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.appMetadataRoute,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.api,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.appMetadataRoute,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { CookieSerializeOptions } from 'next/dist/compiled/cookie'\nimport type { NextApiResponse } from '../../shared/lib/utils'\n\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers'\nimport {\n  PRERENDER_REVALIDATE_HEADER,\n  PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER,\n} from '../../lib/constants'\nimport { getTracer } from '../lib/trace/tracer'\nimport { NodeSpan } from '../lib/trace/constants'\n\nexport type NextApiRequestCookies = Partial<{ [key: string]: string }>\nexport type NextApiRequestQuery = Partial<{ [key: string]: string | string[] }>\n\nexport type __ApiPreviewProps = {\n  previewModeId: string\n  previewModeEncryptionKey: string\n  previewModeSigningKey: string\n}\n\nexport function wrapApiHandler<T extends (...args: any[]) => any>(\n  page: string,\n  handler: T\n): T {\n  return ((...args) => {\n    getTracer().getRootSpanAttributes()?.set('next.route', page)\n    // Call API route method\n    return getTracer().trace(\n      NodeSpan.runHandler,\n      {\n        spanName: `executing api route (pages) ${page}`,\n      },\n      () => handler(...args)\n    )\n  }) as T\n}\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */\nexport function sendStatusCode(\n  res: NextApiResponse,\n  statusCode: number\n): NextApiResponse<any> {\n  res.statusCode = statusCode\n  return res\n}\n\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */\nexport function redirect(\n  res: NextApiResponse,\n  statusOrUrl: string | number,\n  url?: string\n): NextApiResponse<any> {\n  if (typeof statusOrUrl === 'string') {\n    url = statusOrUrl\n    statusOrUrl = 307\n  }\n  if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n    throw new Error(\n      `Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`\n    )\n  }\n  res.writeHead(statusOrUrl, { Location: url })\n  res.write(url)\n  res.end()\n  return res\n}\n\nexport function checkIsOnDemandRevalidate(\n  req: Request | IncomingMessage | BaseNextRequest,\n  previewProps: __ApiPreviewProps\n): {\n  isOnDemandRevalidate: boolean\n  revalidateOnlyGenerated: boolean\n} {\n  const headers = HeadersAdapter.from(req.headers)\n\n  const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER)\n  const isOnDemandRevalidate = previewModeId === previewProps.previewModeId\n\n  const revalidateOnlyGenerated = headers.has(\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER\n  )\n\n  return { isOnDemandRevalidate, revalidateOnlyGenerated }\n}\n\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`\n\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024\n\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA)\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS)\n\nexport function clearPreviewData<T>(\n  res: NextApiResponse<T>,\n  options: {\n    path?: string\n  } = {}\n): NextApiResponse<T> {\n  if (SYMBOL_CLEARED_COOKIES in res) {\n    return res\n  }\n\n  const { serialize } =\n    require('next/dist/compiled/cookie') as typeof import('cookie')\n  const previous = res.getHeader('Set-Cookie')\n  res.setHeader(`Set-Cookie`, [\n    ...(typeof previous === 'string'\n      ? [previous]\n      : Array.isArray(previous)\n        ? previous\n        : []),\n    serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n    serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n  ])\n\n  Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n    value: true,\n    enumerable: false,\n  })\n  return res\n}\n\n/**\n * Custom error class\n */\nexport class ApiError extends Error {\n  readonly statusCode: number\n\n  constructor(statusCode: number, message: string) {\n    super(message)\n    this.statusCode = statusCode\n  }\n}\n\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */\nexport function sendError(\n  res: NextApiResponse,\n  statusCode: number,\n  message: string\n): void {\n  res.statusCode = statusCode\n  res.statusMessage = message\n  res.end(message)\n}\n\ninterface LazyProps {\n  req: IncomingMessage\n}\n\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */\nexport function setLazyProp<T>(\n  { req }: LazyProps,\n  prop: string,\n  getter: () => T\n): void {\n  const opts = { configurable: true, enumerable: true }\n  const optsReset = { ...opts, writable: true }\n\n  Object.defineProperty(req, prop, {\n    ...opts,\n    get: () => {\n      const value = getter()\n      // we set the property on the object to avoid recalculating it\n      Object.defineProperty(req, prop, { ...optsReset, value })\n      return value\n    },\n    set: (value) => {\n      Object.defineProperty(req, prop, { ...optsReset, value })\n    },\n  })\n}\n","import type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextApiResponse } from '../../../shared/lib/utils'\nimport { checkIsOnDemandRevalidate } from '../.'\nimport type { __ApiPreviewProps } from '../.'\nimport type { BaseNextRequest, BaseNextResponse } from '../../base-http'\nimport type { PreviewData } from '../../../types'\n\nimport {\n  clearPreviewData,\n  COOKIE_NAME_PRERENDER_BYPASS,\n  COOKIE_NAME_PRERENDER_DATA,\n  SYMBOL_PREVIEW_DATA,\n} from '../index'\nimport { RequestCookies } from '../../web/spec-extension/cookies'\nimport { HeadersAdapter } from '../../web/spec-extension/adapters/headers'\n\nexport function tryGetPreviewData(\n  req: IncomingMessage | BaseNextRequest | Request,\n  res: ServerResponse | BaseNextResponse,\n  options: __ApiPreviewProps\n): PreviewData {\n  // if an On-Demand revalidation is being done preview mode\n  // is disabled\n  if (options && checkIsOnDemandRevalidate(req, options).isOnDemandRevalidate) {\n    return false\n  }\n\n  // Read cached preview data if present\n  // TODO: use request metadata instead of a symbol\n  if (SYMBOL_PREVIEW_DATA in req) {\n    return (req as any)[SYMBOL_PREVIEW_DATA] as any\n  }\n\n  const headers = HeadersAdapter.from(req.headers)\n  const cookies = new RequestCookies(headers)\n\n  const previewModeId = cookies.get(COOKIE_NAME_PRERENDER_BYPASS)?.value\n  const tokenPreviewData = cookies.get(COOKIE_NAME_PRERENDER_DATA)?.value\n\n  // Case: preview mode cookie set but data cookie is not set\n  if (\n    previewModeId &&\n    !tokenPreviewData &&\n    previewModeId === options.previewModeId\n  ) {\n    // This is \"Draft Mode\" which doesn't use\n    // previewData, so we return an empty object\n    // for backwards compat with \"Preview Mode\".\n    const data = {}\n    Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false,\n    })\n    return data\n  }\n\n  // Case: neither cookie is set.\n  if (!previewModeId && !tokenPreviewData) {\n    return false\n  }\n\n  // Case: one cookie is set, but not the other.\n  if (!previewModeId || !tokenPreviewData) {\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  // Case: preview session is for an old build.\n  if (previewModeId !== options.previewModeId) {\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  let encryptedPreviewData: {\n    data: string\n  }\n  try {\n    const jsonwebtoken =\n      require('next/dist/compiled/jsonwebtoken') as typeof import('next/dist/compiled/jsonwebtoken')\n    encryptedPreviewData = jsonwebtoken.verify(\n      tokenPreviewData,\n      options.previewModeSigningKey\n    ) as typeof encryptedPreviewData\n  } catch {\n    // TODO: warn\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  const { decryptWithSecret } =\n    require('../../crypto-utils') as typeof import('../../crypto-utils')\n  const decryptedPreviewData = decryptWithSecret(\n    Buffer.from(options.previewModeEncryptionKey),\n    encryptedPreviewData.data\n  )\n\n  try {\n    // TODO: strict runtime type checking\n    const data = JSON.parse(decryptedPreviewData)\n    // Cache lookup\n    Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false,\n    })\n    return data\n  } catch {\n    return false\n  }\n}\n","import crypto from 'crypto'\n\n// Background:\n// https://security.stackexchange.com/questions/184305/why-would-i-ever-use-aes-256-cbc-if-aes-256-gcm-is-more-secure\n\nconst CIPHER_ALGORITHM = `aes-256-gcm`,\n  CIPHER_KEY_LENGTH = 32, // https://stackoverflow.com/a/28307668/4397028\n  CIPHER_IV_LENGTH = 16, // https://stackoverflow.com/a/28307668/4397028\n  CIPHER_TAG_LENGTH = 16,\n  CIPHER_SALT_LENGTH = 64\n\nconst PBKDF2_ITERATIONS = 100_000 // https://support.1password.com/pbkdf2/\n\nexport function encryptWithSecret(secret: Buffer, data: string): string {\n  const iv = crypto.randomBytes(CIPHER_IV_LENGTH)\n  const salt = crypto.randomBytes(CIPHER_SALT_LENGTH)\n\n  // https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n  const key = crypto.pbkdf2Sync(\n    secret,\n    salt,\n    PBKDF2_ITERATIONS,\n    CIPHER_KEY_LENGTH,\n    `sha512`\n  )\n\n  const cipher = crypto.createCipheriv(CIPHER_ALGORITHM, key, iv)\n  const encrypted = Buffer.concat([cipher.update(data, `utf8`), cipher.final()])\n\n  // https://nodejs.org/api/crypto.html#crypto_cipher_getauthtag\n  const tag = cipher.getAuthTag()\n\n  return Buffer.concat([\n    // Data as required by:\n    // Salt for Key: https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n    // IV: https://nodejs.org/api/crypto.html#crypto_class_decipher\n    // Tag: https://nodejs.org/api/crypto.html#crypto_decipher_setauthtag_buffer\n    salt,\n    iv,\n    tag,\n    encrypted,\n  ]).toString(`hex`)\n}\n\nexport function decryptWithSecret(\n  secret: Buffer,\n  encryptedData: string\n): string {\n  const buffer = Buffer.from(encryptedData, `hex`)\n\n  const salt = buffer.slice(0, CIPHER_SALT_LENGTH)\n  const iv = buffer.slice(\n    CIPHER_SALT_LENGTH,\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH\n  )\n  const tag = buffer.slice(\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH,\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH + CIPHER_TAG_LENGTH\n  )\n  const encrypted = buffer.slice(\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH + CIPHER_TAG_LENGTH\n  )\n\n  // https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n  const key = crypto.pbkdf2Sync(\n    secret,\n    salt,\n    PBKDF2_ITERATIONS,\n    CIPHER_KEY_LENGTH,\n    `sha512`\n  )\n\n  const decipher = crypto.createDecipheriv(CIPHER_ALGORITHM, key, iv)\n  decipher.setAuthTag(tag)\n\n  return decipher.update(encrypted) + decipher.final(`utf8`)\n}\n","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/\n\n// eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\n\nenum BaseServerSpan {\n  handleRequest = 'BaseServer.handleRequest',\n  run = 'BaseServer.run',\n  pipe = 'BaseServer.pipe',\n  getStaticHTML = 'BaseServer.getStaticHTML',\n  render = 'BaseServer.render',\n  renderToResponseWithComponents = 'BaseServer.renderToResponseWithComponents',\n  renderToResponse = 'BaseServer.renderToResponse',\n  renderToHTML = 'BaseServer.renderToHTML',\n  renderError = 'BaseServer.renderError',\n  renderErrorToResponse = 'BaseServer.renderErrorToResponse',\n  renderErrorToHTML = 'BaseServer.renderErrorToHTML',\n  render404 = 'BaseServer.render404',\n}\n\nenum LoadComponentsSpan {\n  loadDefaultErrorComponents = 'LoadComponents.loadDefaultErrorComponents',\n  loadComponents = 'LoadComponents.loadComponents',\n}\n\nenum NextServerSpan {\n  getRequestHandler = 'NextServer.getRequestHandler',\n  getServer = 'NextServer.getServer',\n  getServerRequestHandler = 'NextServer.getServerRequestHandler',\n  createServer = 'createServer.createServer',\n}\n\nenum NextNodeServerSpan {\n  compression = 'NextNodeServer.compression',\n  getBuildId = 'NextNodeServer.getBuildId',\n  createComponentTree = 'NextNodeServer.createComponentTree',\n  clientComponentLoading = 'NextNodeServer.clientComponentLoading',\n  getLayoutOrPageModule = 'NextNodeServer.getLayoutOrPageModule',\n  generateStaticRoutes = 'NextNodeServer.generateStaticRoutes',\n  generateFsStaticRoutes = 'NextNodeServer.generateFsStaticRoutes',\n  generatePublicRoutes = 'NextNodeServer.generatePublicRoutes',\n  generateImageRoutes = 'NextNodeServer.generateImageRoutes.route',\n  sendRenderResult = 'NextNodeServer.sendRenderResult',\n  proxyRequest = 'NextNodeServer.proxyRequest',\n  runApi = 'NextNodeServer.runApi',\n  render = 'NextNodeServer.render',\n  renderHTML = 'NextNodeServer.renderHTML',\n  imageOptimizer = 'NextNodeServer.imageOptimizer',\n  getPagePath = 'NextNodeServer.getPagePath',\n  getRoutesManifest = 'NextNodeServer.getRoutesManifest',\n  findPageComponents = 'NextNodeServer.findPageComponents',\n  getFontManifest = 'NextNodeServer.getFontManifest',\n  getServerComponentManifest = 'NextNodeServer.getServerComponentManifest',\n  getRequestHandler = 'NextNodeServer.getRequestHandler',\n  renderToHTML = 'NextNodeServer.renderToHTML',\n  renderError = 'NextNodeServer.renderError',\n  renderErrorToHTML = 'NextNodeServer.renderErrorToHTML',\n  render404 = 'NextNodeServer.render404',\n  startResponse = 'NextNodeServer.startResponse',\n\n  // nested inner span, does not require parent scope name\n  route = 'route',\n  onProxyReq = 'onProxyReq',\n  apiResolver = 'apiResolver',\n  internalFetch = 'internalFetch',\n}\n\nenum StartServerSpan {\n  startServer = 'startServer.startServer',\n}\n\nenum RenderSpan {\n  getServerSideProps = 'Render.getServerSideProps',\n  getStaticProps = 'Render.getStaticProps',\n  renderToString = 'Render.renderToString',\n  renderDocument = 'Render.renderDocument',\n  createBodyResult = 'Render.createBodyResult',\n}\n\nenum AppRenderSpan {\n  renderToString = 'AppRender.renderToString',\n  renderToReadableStream = 'AppRender.renderToReadableStream',\n  getBodyResult = 'AppRender.getBodyResult',\n  fetch = 'AppRender.fetch',\n}\n\nenum RouterSpan {\n  executeRoute = 'Router.executeRoute',\n}\n\nenum NodeSpan {\n  runHandler = 'Node.runHandler',\n}\n\nenum AppRouteRouteHandlersSpan {\n  runHandler = 'AppRouteRouteHandlers.runHandler',\n}\n\nenum ResolveMetadataSpan {\n  generateMetadata = 'ResolveMetadata.generateMetadata',\n  generateViewport = 'ResolveMetadata.generateViewport',\n}\n\nenum MiddlewareSpan {\n  execute = 'Middleware.execute',\n}\n\ntype SpanTypes =\n  | `${BaseServerSpan}`\n  | `${LoadComponentsSpan}`\n  | `${NextServerSpan}`\n  | `${StartServerSpan}`\n  | `${NextNodeServerSpan}`\n  | `${RenderSpan}`\n  | `${RouterSpan}`\n  | `${AppRenderSpan}`\n  | `${NodeSpan}`\n  | `${AppRouteRouteHandlersSpan}`\n  | `${ResolveMetadataSpan}`\n  | `${MiddlewareSpan}`\n\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n  MiddlewareSpan.execute,\n  BaseServerSpan.handleRequest,\n  RenderSpan.getServerSideProps,\n  RenderSpan.getStaticProps,\n  AppRenderSpan.fetch,\n  AppRenderSpan.getBodyResult,\n  RenderSpan.renderDocument,\n  NodeSpan.runHandler,\n  AppRouteRouteHandlersSpan.runHandler,\n  ResolveMetadataSpan.generateMetadata,\n  ResolveMetadataSpan.generateViewport,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.getLayoutOrPageModule,\n  NextNodeServerSpan.startResponse,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\nexport {\n  BaseServerSpan,\n  LoadComponentsSpan,\n  NextServerSpan,\n  NextNodeServerSpan,\n  StartServerSpan,\n  RenderSpan,\n  RouterSpan,\n  AppRenderSpan,\n  NodeSpan,\n  AppRouteRouteHandlersSpan,\n  ResolveMetadataSpan,\n  MiddlewareSpan,\n}\n\nexport type { SpanTypes }\n","// This file should be imported before any others. It sets up the environment\n// for later imports to work properly.\n\n// expose AsyncLocalStorage on global for react usage if it isn't already provided by the environment\nif (typeof (globalThis as any).AsyncLocalStorage !== 'function') {\n  const { AsyncLocalStorage } = require('async_hooks')\n  ;(globalThis as any).AsyncLocalStorage = AsyncLocalStorage\n}\n\nif (typeof (globalThis as any).WebSocket !== 'function') {\n  Object.defineProperty(globalThis, 'WebSocket', {\n    get() {\n      return require('next/dist/compiled/ws').WebSocket\n    },\n  })\n}\n","// Polyfill crypto() in the Node.js environment\n\nif (!global.crypto) {\n  let webcrypto: Crypto | undefined\n\n  Object.defineProperty(global, 'crypto', {\n    enumerable: false,\n    configurable: true,\n    get() {\n      if (!webcrypto) {\n        webcrypto = require('node:crypto').webcrypto\n      }\n      return webcrypto\n    },\n    set(value: Crypto) {\n      webcrypto = value\n    },\n  })\n}\n","import type { IncomingHttpHeaders } from 'http'\n\nimport { ReflectAdapter } from './reflect'\n\n/**\n * @internal\n */\nexport class ReadonlyHeadersError extends Error {\n  constructor() {\n    super(\n      'Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyHeadersError()\n  }\n}\n\nexport type ReadonlyHeaders = Headers & {\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  append(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  set(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  delete(...args: any[]): void\n}\nexport class HeadersAdapter extends Headers {\n  private readonly headers: IncomingHttpHeaders\n\n  constructor(headers: IncomingHttpHeaders) {\n    // We've already overridden the methods that would be called, so we're just\n    // calling the super constructor to ensure that the instanceof check works.\n    super()\n\n    this.headers = new Proxy(headers, {\n      get(target, prop, receiver) {\n        // Because this is just an object, we expect that all \"get\" operations\n        // are for properties. If it's a \"get\" for a symbol, we'll just return\n        // the symbol.\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return undefined.\n        if (typeof original === 'undefined') return\n\n        // If the original casing exists, return the value.\n        return ReflectAdapter.get(target, original, receiver)\n      },\n      set(target, prop, value, receiver) {\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.set(target, prop, value, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, use the prop as the key.\n        return ReflectAdapter.set(target, original ?? prop, value, receiver)\n      },\n      has(target, prop) {\n        if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return false.\n        if (typeof original === 'undefined') return false\n\n        // If the original casing exists, return true.\n        return ReflectAdapter.has(target, original)\n      },\n      deleteProperty(target, prop) {\n        if (typeof prop === 'symbol')\n          return ReflectAdapter.deleteProperty(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return true.\n        if (typeof original === 'undefined') return true\n\n        // If the original casing exists, delete the property.\n        return ReflectAdapter.deleteProperty(target, original)\n      },\n    })\n  }\n\n  /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */\n  public static seal(headers: Headers): ReadonlyHeaders {\n    return new Proxy<ReadonlyHeaders>(headers, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'append':\n          case 'delete':\n          case 'set':\n            return ReadonlyHeadersError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n\n  /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */\n  private merge(value: string | string[]): string {\n    if (Array.isArray(value)) return value.join(', ')\n\n    return value\n  }\n\n  /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */\n  public static from(headers: IncomingHttpHeaders | Headers): Headers {\n    if (headers instanceof Headers) return headers\n\n    return new HeadersAdapter(headers)\n  }\n\n  public append(name: string, value: string): void {\n    const existing = this.headers[name]\n    if (typeof existing === 'string') {\n      this.headers[name] = [existing, value]\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      this.headers[name] = value\n    }\n  }\n\n  public delete(name: string): void {\n    delete this.headers[name]\n  }\n\n  public get(name: string): string | null {\n    const value = this.headers[name]\n    if (typeof value !== 'undefined') return this.merge(value)\n\n    return null\n  }\n\n  public has(name: string): boolean {\n    return typeof this.headers[name] !== 'undefined'\n  }\n\n  public set(name: string, value: string): void {\n    this.headers[name] = value\n  }\n\n  public forEach(\n    callbackfn: (value: string, name: string, parent: Headers) => void,\n    thisArg?: any\n  ): void {\n    for (const [name, value] of this.entries()) {\n      callbackfn.call(thisArg, value, name, this)\n    }\n  }\n\n  public *entries(): IterableIterator<[string, string]> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(name) as string\n\n      yield [name, value] as [string, string]\n    }\n  }\n\n  public *keys(): IterableIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      yield name\n    }\n  }\n\n  public *values(): IterableIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(key) as string\n\n      yield value\n    }\n  }\n\n  public [Symbol.iterator](): IterableIterator<[string, string]> {\n    return this.entries()\n  }\n}\n","export class ReflectAdapter {\n  static get<T extends object>(\n    target: T,\n    prop: string | symbol,\n    receiver: unknown\n  ): any {\n    const value = Reflect.get(target, prop, receiver)\n    if (typeof value === 'function') {\n      return value.bind(target)\n    }\n\n    return value\n  }\n\n  static set<T extends object>(\n    target: T,\n    prop: string | symbol,\n    value: any,\n    receiver: any\n  ): boolean {\n    return Reflect.set(target, prop, value, receiver)\n  }\n\n  static has<T extends object>(target: T, prop: string | symbol): boolean {\n    return Reflect.has(target, prop)\n  }\n\n  static deleteProperty<T extends object>(\n    target: T,\n    prop: string | symbol\n  ): boolean {\n    return Reflect.deleteProperty(target, prop)\n  }\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */\nconst MODERN_BROWSERSLIST_TARGET = [\n  'chrome 64',\n  'edge 79',\n  'firefox 67',\n  'opera 51',\n  'safari 12',\n]\n\nmodule.exports = MODERN_BROWSERSLIST_TARGET\n","import { AsyncLocalStorage } from 'node:async_hooks'\n\nexport interface TestReqInfo {\n  url: string\n  proxyPort: number\n  testData: string\n}\n\nexport interface TestRequestReader<R> {\n  url(req: R): string\n  header(req: R, name: string): string | null\n}\n\nconst testStorage = new AsyncLocalStorage<TestReqInfo>()\n\nfunction extractTestInfoFromRequest<R>(\n  req: R,\n  reader: TestRequestReader<R>\n): TestReqInfo | undefined {\n  const proxyPortHeader = reader.header(req, 'next-test-proxy-port')\n  if (!proxyPortHeader) {\n    return undefined\n  }\n  const url = reader.url(req)\n  const proxyPort = Number(proxyPortHeader)\n  const testData = reader.header(req, 'next-test-data') || ''\n  return { url, proxyPort, testData }\n}\n\nexport function withRequest<R, T>(\n  req: R,\n  reader: TestRequestReader<R>,\n  fn: () => T\n): T {\n  const testReqInfo = extractTestInfoFromRequest(req, reader)\n  if (!testReqInfo) {\n    return fn()\n  }\n  return testStorage.run(testReqInfo, fn)\n}\n\nexport function getTestReqInfo<R>(\n  req?: R,\n  reader?: TestRequestReader<R>\n): TestReqInfo | undefined {\n  const testReqInfo = testStorage.getStore()\n  if (testReqInfo) {\n    return testReqInfo\n  }\n  if (req && reader) {\n    return extractTestInfoFromRequest(req, reader)\n  }\n  return undefined\n}\n","import type {\n  ProxyFetchRequest,\n  ProxyFetchResponse,\n  ProxyResponse,\n} from './proxy'\nimport { getTestReqInfo, type TestRequestReader } from './context'\n\ntype Fetch = typeof fetch\ntype FetchInputArg = Parameters<Fetch>[0]\ntype FetchInitArg = Parameters<Fetch>[1]\n\nexport const reader: TestRequestReader<Request> = {\n  url(req) {\n    return req.url\n  },\n  header(req, name) {\n    return req.headers.get(name)\n  },\n}\n\nfunction getTestStack(): string {\n  let stack = (new Error().stack ?? '').split('\\n')\n  // Skip the first line and find first non-empty line.\n  for (let i = 1; i < stack.length; i++) {\n    if (stack[i].length > 0) {\n      stack = stack.slice(i)\n      break\n    }\n  }\n  // Filter out franmework lines.\n  stack = stack.filter((f) => !f.includes('/next/dist/'))\n  // At most 5 lines.\n  stack = stack.slice(0, 5)\n  // Cleanup some internal info and trim.\n  stack = stack.map((s) => s.replace('webpack-internal:///(rsc)/', '').trim())\n  return stack.join('    ')\n}\n\nasync function buildProxyRequest(\n  testData: string,\n  request: Request\n): Promise<ProxyFetchRequest> {\n  const {\n    url,\n    method,\n    headers,\n    body,\n    cache,\n    credentials,\n    integrity,\n    mode,\n    redirect,\n    referrer,\n    referrerPolicy,\n  } = request\n  return {\n    testData,\n    api: 'fetch',\n    request: {\n      url,\n      method,\n      headers: [...Array.from(headers), ['next-test-stack', getTestStack()]],\n      body: body\n        ? Buffer.from(await request.arrayBuffer()).toString('base64')\n        : null,\n      cache,\n      credentials,\n      integrity,\n      mode,\n      redirect,\n      referrer,\n      referrerPolicy,\n    },\n  }\n}\n\nfunction buildResponse(proxyResponse: ProxyFetchResponse): Response {\n  const { status, headers, body } = proxyResponse.response\n  return new Response(body ? Buffer.from(body, 'base64') : null, {\n    status,\n    headers: new Headers(headers),\n  })\n}\n\nexport async function handleFetch(\n  originalFetch: Fetch,\n  request: Request\n): Promise<Response> {\n  const testInfo = getTestReqInfo(request, reader)\n  if (!testInfo) {\n    // Passthrough non-test requests.\n    return originalFetch(request)\n  }\n\n  const { testData, proxyPort } = testInfo\n  const proxyRequest = await buildProxyRequest(testData, request)\n\n  const resp = await originalFetch(`http://localhost:${proxyPort}`, {\n    method: 'POST',\n    body: JSON.stringify(proxyRequest),\n    next: {\n      // @ts-ignore\n      internal: true,\n    },\n  })\n  if (!resp.ok) {\n    throw new Error(`Proxy request failed: ${resp.status}`)\n  }\n\n  const proxyResponse = (await resp.json()) as ProxyResponse\n  const { api } = proxyResponse\n  switch (api) {\n    case 'continue':\n      return originalFetch(request)\n    case 'abort':\n    case 'unhandled':\n      throw new Error(\n        `Proxy request aborted [${request.method} ${request.url}]`\n      )\n    default:\n      break\n  }\n  return buildResponse(proxyResponse)\n}\n\nexport function interceptFetch(originalFetch: Fetch) {\n  global.fetch = function testFetch(\n    input: FetchInputArg,\n    init?: FetchInitArg\n  ): Promise<Response> {\n    // Passthrough internal requests.\n    // @ts-ignore\n    if (init?.next?.internal) {\n      return originalFetch(input, init)\n    }\n    return handleFetch(originalFetch, new Request(input, init))\n  }\n  return () => {\n    global.fetch = originalFetch\n  }\n}\n","import { withRequest as withRequestContext } from './context'\nimport { interceptFetch, reader } from './fetch'\n\nexport function interceptTestApis(): () => void {\n  return interceptFetch(global.fetch)\n}\n\nexport function wrapRequestHandler<T>(\n  handler: (req: Request, fn: () => T) => T\n): (req: Request, fn: () => T) => T {\n  return (req, fn) => withRequestContext(req, reader, () => handler(req, fn))\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./dist/esm/server sync recursive\";\nmodule.exports = webpackEmptyContext;","module.exports = require(\"next/dist/server/lib/trace/tracer\");","module.exports = require(\"next/dist/compiled/jsonwebtoken\");","module.exports = require(\"next/dist/compiled/node-html-parser\");","module.exports = require(\"next/dist/compiled/ws\");","module.exports = require(\"next/dist/server/web/sandbox\");","module.exports = require(\"async_hooks\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"module\");","module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:crypto\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from './'\nimport type { IncrementalCacheValue } from '../../response-cache'\n\nimport LRUCache from 'next/dist/compiled/lru-cache'\nimport {\n  CACHE_ONE_YEAR,\n  NEXT_CACHE_SOFT_TAGS_HEADER,\n} from '../../../lib/constants'\n\nlet rateLimitedUntil = 0\nlet memoryCache: LRUCache<string, CacheHandlerValue> | undefined\n\ninterface NextFetchCacheParams {\n  internal?: boolean\n  fetchType?: string\n  fetchIdx?: number\n  fetchUrl?: string\n}\n\nconst CACHE_TAGS_HEADER = 'x-vercel-cache-tags' as const\nconst CACHE_HEADERS_HEADER = 'x-vercel-sc-headers' as const\nconst CACHE_STATE_HEADER = 'x-vercel-cache-state' as const\nconst CACHE_REVALIDATE_HEADER = 'x-vercel-revalidate' as const\nconst CACHE_FETCH_URL_HEADER = 'x-vercel-cache-item-name' as const\nconst CACHE_CONTROL_VALUE_HEADER = 'x-vercel-cache-control' as const\n\nconst DEBUG = Boolean(process.env.NEXT_PRIVATE_DEBUG_CACHE)\n\nasync function fetchRetryWithTimeout(\n  url: Parameters<typeof fetch>[0],\n  init: Parameters<typeof fetch>[1],\n  retryIndex = 0\n): Promise<Response> {\n  const controller = new AbortController()\n  const timeout = setTimeout(() => {\n    controller.abort()\n  }, 500)\n\n  return fetch(url, {\n    ...(init || {}),\n    signal: controller.signal,\n  })\n    .catch((err) => {\n      if (retryIndex === 3) {\n        throw err\n      } else {\n        if (DEBUG) {\n          console.log(`Fetch failed for ${url} retry ${retryIndex}`)\n        }\n        return fetchRetryWithTimeout(url, init, retryIndex + 1)\n      }\n    })\n    .finally(() => {\n      clearTimeout(timeout)\n    })\n}\n\nexport default class FetchCache implements CacheHandler {\n  private headers: Record<string, string>\n  private cacheEndpoint?: string\n\n  private hasMatchingTags(arr1: string[], arr2: string[]) {\n    if (arr1.length !== arr2.length) return false\n\n    const set1 = new Set(arr1)\n    const set2 = new Set(arr2)\n\n    if (set1.size !== set2.size) return false\n\n    for (let tag of set1) {\n      if (!set2.has(tag)) return false\n    }\n\n    return true\n  }\n\n  static isAvailable(ctx: {\n    _requestHeaders: CacheHandlerContext['_requestHeaders']\n  }) {\n    return !!(\n      ctx._requestHeaders['x-vercel-sc-host'] || process.env.SUSPENSE_CACHE_URL\n    )\n  }\n\n  constructor(ctx: CacheHandlerContext) {\n    this.headers = {}\n    this.headers['Content-Type'] = 'application/json'\n\n    if (CACHE_HEADERS_HEADER in ctx._requestHeaders) {\n      const newHeaders = JSON.parse(\n        ctx._requestHeaders[CACHE_HEADERS_HEADER] as string\n      )\n      for (const k in newHeaders) {\n        this.headers[k] = newHeaders[k]\n      }\n      delete ctx._requestHeaders[CACHE_HEADERS_HEADER]\n    }\n    const scHost =\n      ctx._requestHeaders['x-vercel-sc-host'] || process.env.SUSPENSE_CACHE_URL\n\n    const scBasePath =\n      ctx._requestHeaders['x-vercel-sc-basepath'] ||\n      process.env.SUSPENSE_CACHE_BASEPATH\n\n    if (process.env.SUSPENSE_CACHE_AUTH_TOKEN) {\n      this.headers['Authorization'] =\n        `Bearer ${process.env.SUSPENSE_CACHE_AUTH_TOKEN}`\n    }\n\n    if (scHost) {\n      const scProto = process.env.SUSPENSE_CACHE_PROTO || 'https'\n      this.cacheEndpoint = `${scProto}://${scHost}${scBasePath || ''}`\n      if (DEBUG) {\n        console.log('using cache endpoint', this.cacheEndpoint)\n      }\n    } else if (DEBUG) {\n      console.log('no cache endpoint available')\n    }\n\n    if (ctx.maxMemoryCacheSize) {\n      if (!memoryCache) {\n        if (DEBUG) {\n          console.log('using memory store for fetch cache')\n        }\n\n        memoryCache = new LRUCache({\n          max: ctx.maxMemoryCacheSize,\n          length({ value }) {\n            if (!value) {\n              return 25\n            } else if (value.kind === 'REDIRECT') {\n              return JSON.stringify(value.props).length\n            } else if (value.kind === 'IMAGE') {\n              throw new Error('invariant image should not be incremental-cache')\n            } else if (value.kind === 'FETCH') {\n              return JSON.stringify(value.data || '').length\n            } else if (value.kind === 'ROUTE') {\n              return value.body.length\n            }\n            // rough estimate of size of cache value\n            return (\n              value.html.length +\n              (JSON.stringify(\n                value.kind === 'APP_PAGE' ? value.rscData : value.pageData\n              )?.length || 0)\n            )\n          },\n        })\n      }\n    } else {\n      if (DEBUG) {\n        console.log('not using memory store for fetch cache')\n      }\n    }\n  }\n\n  public resetRequestCache(): void {\n    memoryCache?.reset()\n  }\n\n  public async revalidateTag(\n    ...args: Parameters<CacheHandler['revalidateTag']>\n  ) {\n    let [tags] = args\n    tags = typeof tags === 'string' ? [tags] : tags\n    if (DEBUG) {\n      console.log('revalidateTag', tags)\n    }\n\n    if (!tags.length) return\n\n    if (Date.now() < rateLimitedUntil) {\n      if (DEBUG) {\n        console.log('rate limited ', rateLimitedUntil)\n      }\n      return\n    }\n\n    try {\n      const res = await fetchRetryWithTimeout(\n        `${this.cacheEndpoint}/v1/suspense-cache/revalidate?tags=${tags\n          .map((tag) => encodeURIComponent(tag))\n          .join(',')}`,\n        {\n          method: 'POST',\n          headers: this.headers,\n          // @ts-expect-error not on public type\n          next: { internal: true },\n        }\n      )\n\n      if (res.status === 429) {\n        const retryAfter = res.headers.get('retry-after') || '60000'\n        rateLimitedUntil = Date.now() + parseInt(retryAfter)\n      }\n\n      if (!res.ok) {\n        throw new Error(`Request failed with status ${res.status}.`)\n      }\n    } catch (err) {\n      console.warn(`Failed to revalidate tag ${tags}`, err)\n    }\n  }\n\n  public async get(...args: Parameters<CacheHandler['get']>) {\n    const [key, ctx = {}] = args\n    const { tags, softTags, kindHint, fetchIdx, fetchUrl } = ctx\n\n    if (kindHint !== 'fetch') {\n      return null\n    }\n\n    if (Date.now() < rateLimitedUntil) {\n      if (DEBUG) {\n        console.log('rate limited')\n      }\n      return null\n    }\n\n    // memory cache is cleared at the end of each request\n    // so that revalidate events are pulled from upstream\n    // on successive requests\n    let data = memoryCache?.get(key)\n\n    const hasFetchKindAndMatchingTags =\n      data?.value?.kind === 'FETCH' &&\n      this.hasMatchingTags(tags ?? [], data.value.tags ?? [])\n\n    // Get data from fetch cache. Also check if new tags have been\n    // specified with the same cache key (fetch URL)\n    if (this.cacheEndpoint && (!data || !hasFetchKindAndMatchingTags)) {\n      try {\n        const start = Date.now()\n        const fetchParams: NextFetchCacheParams = {\n          internal: true,\n          fetchType: 'cache-get',\n          fetchUrl: fetchUrl,\n          fetchIdx,\n        }\n        const res = await fetch(\n          `${this.cacheEndpoint}/v1/suspense-cache/${key}`,\n          {\n            method: 'GET',\n            headers: {\n              ...this.headers,\n              [CACHE_FETCH_URL_HEADER]: fetchUrl,\n              [CACHE_TAGS_HEADER]: tags?.join(',') || '',\n              [NEXT_CACHE_SOFT_TAGS_HEADER]: softTags?.join(',') || '',\n            } as any,\n            next: fetchParams as NextFetchRequestConfig,\n          }\n        )\n\n        if (res.status === 429) {\n          const retryAfter = res.headers.get('retry-after') || '60000'\n          rateLimitedUntil = Date.now() + parseInt(retryAfter)\n        }\n\n        if (res.status === 404) {\n          if (DEBUG) {\n            console.log(\n              `no fetch cache entry for ${key}, duration: ${\n                Date.now() - start\n              }ms`\n            )\n          }\n          return null\n        }\n\n        if (!res.ok) {\n          console.error(await res.text())\n          throw new Error(`invalid response from cache ${res.status}`)\n        }\n\n        const cached: IncrementalCacheValue = await res.json()\n\n        if (!cached || cached.kind !== 'FETCH') {\n          DEBUG && console.log({ cached })\n          throw new Error('invalid cache value')\n        }\n\n        // if new tags were specified, merge those tags to the existing tags\n        if (cached.kind === 'FETCH') {\n          cached.tags ??= []\n          for (const tag of tags ?? []) {\n            if (!cached.tags.includes(tag)) {\n              cached.tags.push(tag)\n            }\n          }\n        }\n\n        const cacheState = res.headers.get(CACHE_STATE_HEADER)\n        const age = res.headers.get('age')\n\n        data = {\n          value: cached,\n          // if it's already stale set it to a time in the past\n          // if not derive last modified from age\n          lastModified:\n            cacheState !== 'fresh'\n              ? Date.now() - CACHE_ONE_YEAR\n              : Date.now() - parseInt(age || '0', 10) * 1000,\n        }\n\n        if (DEBUG) {\n          console.log(\n            `got fetch cache entry for ${key}, duration: ${\n              Date.now() - start\n            }ms, size: ${\n              Object.keys(cached).length\n            }, cache-state: ${cacheState} tags: ${tags?.join(\n              ','\n            )} softTags: ${softTags?.join(',')}`\n          )\n        }\n\n        if (data) {\n          memoryCache?.set(key, data)\n        }\n      } catch (err) {\n        // unable to get data from fetch-cache\n        if (DEBUG) {\n          console.error(`Failed to get from fetch-cache`, err)\n        }\n      }\n    }\n\n    return data || null\n  }\n\n  public async set(...args: Parameters<CacheHandler['set']>) {\n    const [key, data, ctx] = args\n\n    const newValue = data?.kind === 'FETCH' ? data.data : undefined\n    const existingCache = memoryCache?.get(key)\n    const existingValue = existingCache?.value\n    if (\n      existingValue?.kind === 'FETCH' &&\n      Object.keys(existingValue.data).every(\n        (field) =>\n          JSON.stringify(\n            (existingValue.data as Record<string, string | Object>)[field]\n          ) ===\n          JSON.stringify((newValue as Record<string, string | Object>)[field])\n      )\n    ) {\n      if (DEBUG) {\n        console.log(`skipping cache set for ${key} as not modified`)\n      }\n      return\n    }\n\n    const { fetchCache, fetchIdx, fetchUrl, tags } = ctx\n    if (!fetchCache) return\n\n    if (Date.now() < rateLimitedUntil) {\n      if (DEBUG) {\n        console.log('rate limited')\n      }\n      return\n    }\n\n    memoryCache?.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n\n    if (this.cacheEndpoint) {\n      try {\n        const start = Date.now()\n        if (data !== null && 'revalidate' in data) {\n          this.headers[CACHE_REVALIDATE_HEADER] = data.revalidate.toString()\n        }\n        if (\n          !this.headers[CACHE_REVALIDATE_HEADER] &&\n          data !== null &&\n          'data' in data\n        ) {\n          this.headers[CACHE_CONTROL_VALUE_HEADER] =\n            data.data.headers['cache-control']\n        }\n        const body = JSON.stringify({\n          ...data,\n          // we send the tags in the header instead\n          // of in the body here\n          tags: undefined,\n        })\n\n        if (DEBUG) {\n          console.log('set cache', key)\n        }\n        const fetchParams: NextFetchCacheParams = {\n          internal: true,\n          fetchType: 'cache-set',\n          fetchUrl,\n          fetchIdx,\n        }\n        const res = await fetch(\n          `${this.cacheEndpoint}/v1/suspense-cache/${key}`,\n          {\n            method: 'POST',\n            headers: {\n              ...this.headers,\n              [CACHE_FETCH_URL_HEADER]: fetchUrl || '',\n              [CACHE_TAGS_HEADER]: tags?.join(',') || '',\n            },\n            body: body,\n            next: fetchParams as NextFetchRequestConfig,\n          }\n        )\n\n        if (res.status === 429) {\n          const retryAfter = res.headers.get('retry-after') || '60000'\n          rateLimitedUntil = Date.now() + parseInt(retryAfter)\n        }\n\n        if (!res.ok) {\n          DEBUG && console.log(await res.text())\n          throw new Error(`invalid response ${res.status}`)\n        }\n\n        if (DEBUG) {\n          console.log(\n            `successfully set to fetch-cache for ${key}, duration: ${\n              Date.now() - start\n            }ms, size: ${body.length}`\n          )\n        }\n      } catch (err) {\n        // unable to set to fetch-cache\n        if (DEBUG) {\n          console.error(`Failed to update fetch cache`, err)\n        }\n      }\n    }\n    return\n  }\n}\n","import type { RouteMetadata } from '../../../export/routes/types'\nimport type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from './'\nimport type { CacheFs } from '../../../shared/lib/utils'\nimport type { CachedFetchValue } from '../../response-cache'\n\nimport LRUCache from 'next/dist/compiled/lru-cache'\nimport path from '../../../shared/lib/isomorphic/path'\nimport {\n  NEXT_CACHE_TAGS_HEADER,\n  NEXT_DATA_SUFFIX,\n  NEXT_META_SUFFIX,\n  RSC_PREFETCH_SUFFIX,\n  RSC_SUFFIX,\n} from '../../../lib/constants'\n\ntype FileSystemCacheContext = Omit<\n  CacheHandlerContext,\n  'fs' | 'serverDistDir'\n> & {\n  fs: CacheFs\n  serverDistDir: string\n}\n\ntype TagsManifest = {\n  version: 1\n  items: { [tag: string]: { revalidatedAt: number } }\n}\nlet memoryCache: LRUCache<string, CacheHandlerValue> | undefined\nlet tagsManifest: TagsManifest | undefined\n\nexport default class FileSystemCache implements CacheHandler {\n  private fs: FileSystemCacheContext['fs']\n  private flushToDisk?: FileSystemCacheContext['flushToDisk']\n  private serverDistDir: FileSystemCacheContext['serverDistDir']\n  private appDir: boolean\n  private pagesDir: boolean\n  private tagsManifestPath?: string\n  private revalidatedTags: string[]\n  private debug: boolean\n\n  constructor(ctx: FileSystemCacheContext) {\n    this.fs = ctx.fs\n    this.flushToDisk = ctx.flushToDisk\n    this.serverDistDir = ctx.serverDistDir\n    this.appDir = !!ctx._appDir\n    this.pagesDir = !!ctx._pagesDir\n    this.revalidatedTags = ctx.revalidatedTags\n    this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n\n    if (ctx.maxMemoryCacheSize) {\n      if (!memoryCache) {\n        if (this.debug) {\n          console.log('using memory store for fetch cache')\n        }\n\n        memoryCache = new LRUCache({\n          max: ctx.maxMemoryCacheSize,\n          length({ value }) {\n            if (!value) {\n              return 25\n            } else if (value.kind === 'REDIRECT') {\n              return JSON.stringify(value.props).length\n            } else if (value.kind === 'IMAGE') {\n              throw new Error('invariant image should not be incremental-cache')\n            } else if (value.kind === 'FETCH') {\n              return JSON.stringify(value.data || '').length\n            } else if (value.kind === 'ROUTE') {\n              return value.body.length\n            }\n            // rough estimate of size of cache value\n            return (\n              value.html.length +\n              (JSON.stringify(\n                value.kind === 'APP_PAGE' ? value.rscData : value.pageData\n              )?.length || 0)\n            )\n          },\n        })\n      }\n    } else if (this.debug) {\n      console.log('not using memory store for fetch cache')\n    }\n\n    if (this.serverDistDir && this.fs) {\n      this.tagsManifestPath = path.join(\n        this.serverDistDir,\n        '..',\n        'cache',\n        'fetch-cache',\n        'tags-manifest.json'\n      )\n\n      this.loadTagsManifestSync()\n    }\n  }\n\n  public resetRequestCache(): void {}\n\n  /**\n   * Load the tags manifest from the file system\n   */\n  private async loadTagsManifest() {\n    if (!this.tagsManifestPath || !this.fs || tagsManifest) return\n    try {\n      tagsManifest = JSON.parse(\n        await this.fs.readFile(this.tagsManifestPath, 'utf8')\n      )\n    } catch (err: any) {\n      tagsManifest = { version: 1, items: {} }\n    }\n    if (this.debug) console.log('loadTagsManifest', tagsManifest)\n  }\n\n  /**\n   * As above, but synchronous for use in the constructor. This is to\n   * preserve the existing behaviour when instantiating the cache handler. Although it's\n   * not ideal to block the main thread it's only called once during startup.\n   */\n  private loadTagsManifestSync() {\n    if (!this.tagsManifestPath || !this.fs || tagsManifest) return\n    try {\n      tagsManifest = JSON.parse(\n        this.fs.readFileSync(this.tagsManifestPath, 'utf8')\n      )\n    } catch (err: any) {\n      tagsManifest = { version: 1, items: {} }\n    }\n    if (this.debug) console.log('loadTagsManifest', tagsManifest)\n  }\n\n  public async revalidateTag(\n    ...args: Parameters<CacheHandler['revalidateTag']>\n  ) {\n    let [tags] = args\n    tags = typeof tags === 'string' ? [tags] : tags\n\n    if (this.debug) {\n      console.log('revalidateTag', tags)\n    }\n\n    if (tags.length === 0) {\n      return\n    }\n\n    // we need to ensure the tagsManifest is refreshed\n    // since separate workers can be updating it at the same\n    // time and we can't flush out of sync data\n    await this.loadTagsManifest()\n    if (!tagsManifest || !this.tagsManifestPath) {\n      return\n    }\n\n    for (const tag of tags) {\n      const data = tagsManifest.items[tag] || {}\n      data.revalidatedAt = Date.now()\n      tagsManifest.items[tag] = data\n    }\n\n    try {\n      await this.fs.mkdir(path.dirname(this.tagsManifestPath))\n      await this.fs.writeFile(\n        this.tagsManifestPath,\n        JSON.stringify(tagsManifest || {})\n      )\n      if (this.debug) {\n        console.log('Updated tags manifest', tagsManifest)\n      }\n    } catch (err: any) {\n      console.warn('Failed to update tags manifest.', err)\n    }\n  }\n\n  public async get(...args: Parameters<CacheHandler['get']>) {\n    const [key, ctx = {}] = args\n    const { tags, softTags, kindHint, isRoutePPREnabled } = ctx\n    let data = memoryCache?.get(key)\n\n    if (this.debug) {\n      console.log('get', key, tags, kindHint, !!data)\n    }\n\n    // let's check the disk for seed data\n    if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n      try {\n        const filePath = this.getFilePath(`${key}.body`, 'app')\n        const fileData = await this.fs.readFile(filePath)\n        const { mtime } = await this.fs.stat(filePath)\n\n        const meta = JSON.parse(\n          await this.fs.readFile(\n            filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n            'utf8'\n          )\n        )\n\n        const cacheEntry: CacheHandlerValue = {\n          lastModified: mtime.getTime(),\n          value: {\n            kind: 'ROUTE',\n            body: fileData,\n            headers: meta.headers,\n            status: meta.status,\n          },\n        }\n        return cacheEntry\n      } catch (_) {\n        // no .meta data for the related key\n      }\n\n      try {\n        // Determine the file kind if we didn't know it already.\n        let kind = kindHint\n        if (!kind) {\n          kind = this.detectFileKind(`${key}.html`)\n        }\n\n        const isAppPath = kind === 'app'\n        const filePath = this.getFilePath(\n          kind === 'fetch' ? key : `${key}.html`,\n          kind\n        )\n\n        const fileData = await this.fs.readFile(filePath, 'utf8')\n        const { mtime } = await this.fs.stat(filePath)\n\n        if (kind === 'fetch' && this.flushToDisk) {\n          const lastModified = mtime.getTime()\n          const parsedData: CachedFetchValue = JSON.parse(fileData)\n          data = {\n            lastModified,\n            value: parsedData,\n          }\n\n          if (data.value?.kind === 'FETCH') {\n            const storedTags = data.value?.tags\n\n            // update stored tags if a new one is being added\n            // TODO: remove this when we can send the tags\n            // via header on GET same as SET\n            if (!tags?.every((tag) => storedTags?.includes(tag))) {\n              if (this.debug) {\n                console.log('tags vs storedTags mismatch', tags, storedTags)\n              }\n              await this.set(key, data.value, {\n                tags,\n                isRoutePPREnabled,\n              })\n            }\n          }\n        } else {\n          let meta: RouteMetadata | undefined\n\n          if (isAppPath) {\n            try {\n              meta = JSON.parse(\n                await this.fs.readFile(\n                  filePath.replace(/\\.html$/, NEXT_META_SUFFIX),\n                  'utf8'\n                )\n              )\n            } catch {}\n          }\n\n          if (isAppPath) {\n            const rscData = await this.fs.readFile(\n              this.getFilePath(\n                `${key}${isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`,\n                'app'\n              )\n            )\n            data = {\n              lastModified: mtime.getTime(),\n              value: {\n                kind: 'APP_PAGE',\n                html: fileData,\n                rscData,\n                postponed: meta?.postponed,\n                headers: meta?.headers,\n                status: meta?.status,\n              },\n            }\n          } else {\n            const pageData = JSON.parse(\n              await this.fs.readFile(\n                this.getFilePath(`${key}${NEXT_DATA_SUFFIX}`, 'pages'),\n                'utf8'\n              )\n            )\n\n            data = {\n              lastModified: mtime.getTime(),\n              value: {\n                kind: 'PAGE',\n                html: fileData,\n                pageData,\n                headers: meta?.headers,\n                status: meta?.status,\n              },\n            }\n          }\n        }\n\n        if (data) {\n          memoryCache?.set(key, data)\n        }\n      } catch (_) {\n        // unable to get data from disk\n      }\n    }\n\n    if (data?.value?.kind === 'APP_PAGE' || data?.value?.kind === 'PAGE') {\n      let cacheTags: undefined | string[]\n      const tagsHeader = data.value.headers?.[NEXT_CACHE_TAGS_HEADER]\n\n      if (typeof tagsHeader === 'string') {\n        cacheTags = tagsHeader.split(',')\n      }\n\n      if (cacheTags?.length) {\n        await this.loadTagsManifest()\n\n        const isStale = cacheTags.some((tag) => {\n          return (\n            tagsManifest?.items[tag]?.revalidatedAt &&\n            tagsManifest?.items[tag].revalidatedAt >=\n              (data?.lastModified || Date.now())\n          )\n        })\n\n        // we trigger a blocking validation if an ISR page\n        // had a tag revalidated, if we want to be a background\n        // revalidation instead we return data.lastModified = -1\n        if (isStale) {\n          data = undefined\n        }\n      }\n    }\n\n    if (data && data?.value?.kind === 'FETCH') {\n      await this.loadTagsManifest()\n\n      const combinedTags = [...(tags || []), ...(softTags || [])]\n\n      const wasRevalidated = combinedTags.some((tag) => {\n        if (this.revalidatedTags.includes(tag)) {\n          return true\n        }\n\n        return (\n          tagsManifest?.items[tag]?.revalidatedAt &&\n          tagsManifest?.items[tag].revalidatedAt >=\n            (data?.lastModified || Date.now())\n        )\n      })\n      // When revalidate tag is called we don't return\n      // stale data so it's updated right away\n      if (wasRevalidated) {\n        data = undefined\n      }\n    }\n\n    return data ?? null\n  }\n\n  public async set(...args: Parameters<CacheHandler['set']>) {\n    const [key, data, ctx] = args\n    memoryCache?.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n    if (this.debug) {\n      console.log('set', key)\n    }\n\n    if (!this.flushToDisk) return\n\n    if (data?.kind === 'ROUTE') {\n      const filePath = this.getFilePath(`${key}.body`, 'app')\n      await this.fs.mkdir(path.dirname(filePath))\n      await this.fs.writeFile(filePath, data.body)\n\n      const meta: RouteMetadata = {\n        headers: data.headers,\n        status: data.status,\n        postponed: undefined,\n      }\n\n      await this.fs.writeFile(\n        filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n        JSON.stringify(meta, null, 2)\n      )\n      return\n    }\n\n    if (data?.kind === 'PAGE' || data?.kind === 'APP_PAGE') {\n      const isAppPath = data.kind === 'APP_PAGE'\n      const htmlPath = this.getFilePath(\n        `${key}.html`,\n        isAppPath ? 'app' : 'pages'\n      )\n      await this.fs.mkdir(path.dirname(htmlPath))\n      await this.fs.writeFile(htmlPath, data.html)\n\n      await this.fs.writeFile(\n        this.getFilePath(\n          `${key}${\n            isAppPath\n              ? ctx.isRoutePPREnabled\n                ? RSC_PREFETCH_SUFFIX\n                : RSC_SUFFIX\n              : NEXT_DATA_SUFFIX\n          }`,\n          isAppPath ? 'app' : 'pages'\n        ),\n        isAppPath ? data.rscData : JSON.stringify(data.pageData)\n      )\n\n      if (data.headers || data.status || (isAppPath && data.postponed)) {\n        const meta: RouteMetadata = {\n          headers: data.headers,\n          status: data.status,\n          postponed: isAppPath ? data.postponed : undefined,\n        }\n\n        await this.fs.writeFile(\n          htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX),\n          JSON.stringify(meta)\n        )\n      }\n    } else if (data?.kind === 'FETCH') {\n      const filePath = this.getFilePath(key, 'fetch')\n      await this.fs.mkdir(path.dirname(filePath))\n      await this.fs.writeFile(\n        filePath,\n        JSON.stringify({\n          ...data,\n          tags: ctx.tags,\n        })\n      )\n    }\n  }\n\n  private detectFileKind(pathname: string) {\n    if (!this.appDir && !this.pagesDir) {\n      throw new Error(\n        \"Invariant: Can't determine file path kind, no page directory enabled\"\n      )\n    }\n\n    // If app directory isn't enabled, then assume it's pages and avoid the fs\n    // hit.\n    if (!this.appDir && this.pagesDir) {\n      return 'pages'\n    }\n    // Otherwise assume it's a pages file if the pages directory isn't enabled.\n    else if (this.appDir && !this.pagesDir) {\n      return 'app'\n    }\n\n    // If both are enabled, we need to test each in order, starting with\n    // `pages`.\n    let filePath = this.getFilePath(pathname, 'pages')\n    if (this.fs.existsSync(filePath)) {\n      return 'pages'\n    }\n\n    filePath = this.getFilePath(pathname, 'app')\n    if (this.fs.existsSync(filePath)) {\n      return 'app'\n    }\n\n    throw new Error(\n      `Invariant: Unable to determine file path kind for ${pathname}`\n    )\n  }\n\n  private getFilePath(\n    pathname: string,\n    kind: 'app' | 'fetch' | 'pages'\n  ): string {\n    switch (kind) {\n      case 'fetch':\n        // we store in .next/cache/fetch-cache so it can be persisted\n        // across deploys\n        return path.join(\n          this.serverDistDir,\n          '..',\n          'cache',\n          'fetch-cache',\n          pathname\n        )\n      case 'pages':\n        return path.join(this.serverDistDir, 'pages', pathname)\n      case 'app':\n        return path.join(this.serverDistDir, 'app', pathname)\n      default:\n        throw new Error(\"Invariant: Can't determine file path kind\")\n    }\n  }\n}\n","// ISC License\n\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\n\nconst { env, stdout } = globalThis?.process ?? {}\n\nconst enabled =\n  env &&\n  !env.NO_COLOR &&\n  (env.FORCE_COLOR || (stdout?.isTTY && !env.CI && env.TERM !== 'dumb'))\n\nconst replaceClose = (\n  str: string,\n  close: string,\n  replace: string,\n  index: number\n): string => {\n  const start = str.substring(0, index) + replace\n  const end = str.substring(index + close.length)\n  const nextIndex = end.indexOf(close)\n  return ~nextIndex\n    ? start + replaceClose(end, close, replace, nextIndex)\n    : start + end\n}\n\nconst formatter = (open: string, close: string, replace = open) => {\n  if (!enabled) return String\n  return (input: string) => {\n    const string = '' + input\n    const index = string.indexOf(close, open.length)\n    return ~index\n      ? open + replaceClose(string, close, replace, index) + close\n      : open + string + close\n  }\n}\n\nexport const reset = enabled ? (s: string) => `\\x1b[0m${s}\\x1b[0m` : String\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m')\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m')\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m')\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m')\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m')\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m')\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m')\nexport const black = formatter('\\x1b[30m', '\\x1b[39m')\nexport const red = formatter('\\x1b[31m', '\\x1b[39m')\nexport const green = formatter('\\x1b[32m', '\\x1b[39m')\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m')\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m')\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m')\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m')\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m')\nexport const white = formatter('\\x1b[37m', '\\x1b[39m')\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m')\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m')\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m')\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m')\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m')\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m')\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m')\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m')\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m')\n","// Synchronously inject a require hook for webpack and webpack/. It's required to use the internal ncc webpack version.\n// This is needed for userland plugins to attach to the same webpack instance as Next.js'.\n// Individually compiled modules are as defined for the compilation in bundles/webpack/packages/*.\n\n// This module will only be loaded once per process.\nconst path = require('path')\nconst mod = require('module')\nconst originalRequire = mod.prototype.require\nconst resolveFilename = mod._resolveFilename\n\nlet resolve: typeof require.resolve = process.env.NEXT_MINIMAL\n  ? // @ts-ignore\n    __non_webpack_require__.resolve\n  : require.resolve\n\nexport const hookPropertyMap = new Map()\n\nexport const defaultOverrides = {\n  'styled-jsx': path.dirname(resolve('styled-jsx/package.json')),\n  'styled-jsx/style': resolve('styled-jsx/style'),\n  'styled-jsx/style.js': resolve('styled-jsx/style'),\n}\n\nconst toResolveMap = (map: Record<string, string>): [string, string][] =>\n  Object.entries(map).map(([key, value]) => [key, resolve(value)])\n\nexport function addHookAliases(aliases: [string, string][] = []) {\n  for (const [key, value] of aliases) {\n    hookPropertyMap.set(key, value)\n  }\n}\n\naddHookAliases(toResolveMap(defaultOverrides))\n\nmod._resolveFilename = function (\n  originalResolveFilename: (\n    request: string,\n    parent: string,\n    isMain: boolean,\n    opts: any\n  ) => string,\n  requestMap: Map<string, string>,\n  request: string,\n  parent: string,\n  isMain: boolean,\n  options: any\n) {\n  const hookResolved = requestMap.get(request)\n  if (hookResolved) request = hookResolved\n\n  return originalResolveFilename.call(mod, request, parent, isMain, options)\n\n  // We use `bind` here to avoid referencing outside variables to create potential memory leaks.\n}.bind(null, resolveFilename, hookPropertyMap)\n\n// This is a hack to make sure that if a user requires a Next.js module that wasn't bundled\n// that needs to point to the rendering runtime version, it will point to the correct one.\n// This can happen on `pages` when a user requires a dependency that uses next/image for example.\nmod.prototype.require = function (request: string) {\n  if (request.endsWith('.shared-runtime')) {\n    return originalRequire.call(\n      this,\n      `next/dist/server/route-modules/pages/vendored/contexts/${path.basename(\n        request,\n        '.shared-runtime'\n      )}`\n    )\n  }\n\n  return originalRequire.call(this, request)\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration#on-demand-revalidation\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import type { RouteRegex } from './route-regex'\nimport { DecodeError } from '../../utils'\n\nexport interface RouteMatchFn {\n  (pathname: string | null | undefined): false | Params\n}\n\nexport interface Params {\n  [param: string]: any\n}\n\nexport function getRouteMatcher({ re, groups }: RouteRegex): RouteMatchFn {\n  return (pathname: string | null | undefined) => {\n    const routeMatch = re.exec(pathname!)\n    if (!routeMatch) {\n      return false\n    }\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch (_) {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n    const params: { [paramName: string]: string | string[] } = {}\n\n    Object.keys(groups).forEach((slugName: string) => {\n      const g = groups[slugName]\n      const m = routeMatch[g.pos]\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/')\n          ? m.split('/').map((entry) => decode(entry))\n          : g.repeat\n            ? [decode(m)]\n            : decode(m)\n      }\n    })\n    return params\n  }\n}\n","/* eslint-disable no-redeclare */\nimport type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport type { ServerComponentsHmrCache } from './response-cache'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: any\n\n  /**\n   * The server components HMR cache, only for dev.\n   */\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntry?: (\n    cacheEntry: any,\n    requestMeta: any\n  ) => Promise<boolean | void> | boolean | void\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  __nextNotFoundSrcPage?: string\n  __nextDefaultLocale?: string\n  __nextFallback?: 'true'\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   *\n   * When this property is mutated, it's important to also update the request\n   * metadata for `_nextInferredDefaultLocale` to ensure that the correct\n   * behavior is applied.\n   */\n  __nextLocale?: string\n\n  /**\n   * `1` when the request did not have a locale in the pathname part of the\n   * URL but the default locale was inferred from either the domain or the\n   * configuration.\n   */\n  __nextInferredLocaleFromDefault?: '1'\n\n  __nextSsgPath?: string\n  _nextBubbleNoFallback?: '1'\n\n  /**\n   * When set to `1`, the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  __nextDataReq?: '1'\n  __nextCustomErrorRender?: '1'\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery &\n  NextQueryMetadata & {\n    amp?: '1'\n  }\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n\nexport function getNextInternalQuery(\n  query: NextParsedUrlQuery\n): NextQueryMetadata {\n  const keysToInclude: (keyof NextQueryMetadata)[] = [\n    '__nextDefaultLocale',\n    '__nextFallback',\n    '__nextLocale',\n    '__nextSsgPath',\n    '_nextBubbleNoFallback',\n    '__nextDataReq',\n    '__nextInferredLocaleFromDefault',\n  ]\n  const nextInternalQuery: NextQueryMetadata = {}\n\n  for (const key of keysToInclude) {\n    if (key in query) {\n      // @ts-ignore this can't be typed correctly\n      nextInternalQuery[key] = query[key]\n    }\n  }\n\n  return nextInternalQuery\n}\n","import MODERN_BROWSERSLIST_TARGET from './modern-browserslist-target'\n\nexport { MODERN_BROWSERSLIST_TARGET }\n\nexport type ValueOf<T> = Required<T>[keyof T]\n\nexport const COMPILER_NAMES = {\n  client: 'client',\n  server: 'server',\n  edgeServer: 'edge-server',\n} as const\n\nexport type CompilerNameValues = ValueOf<typeof COMPILER_NAMES>\n\nexport const COMPILER_INDEXES: {\n  [compilerKey in CompilerNameValues]: number\n} = {\n  [COMPILER_NAMES.client]: 0,\n  [COMPILER_NAMES.server]: 1,\n  [COMPILER_NAMES.edgeServer]: 2,\n} as const\n\nexport const UNDERSCORE_NOT_FOUND_ROUTE = '/_not-found'\nexport const UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = `${UNDERSCORE_NOT_FOUND_ROUTE}/page`\nexport const PHASE_EXPORT = 'phase-export'\nexport const PHASE_PRODUCTION_BUILD = 'phase-production-build'\nexport const PHASE_PRODUCTION_SERVER = 'phase-production-server'\nexport const PHASE_DEVELOPMENT_SERVER = 'phase-development-server'\nexport const PHASE_TEST = 'phase-test'\nexport const PHASE_INFO = 'phase-info'\nexport const PAGES_MANIFEST = 'pages-manifest.json'\nexport const APP_PATHS_MANIFEST = 'app-paths-manifest.json'\nexport const APP_PATH_ROUTES_MANIFEST = 'app-path-routes-manifest.json'\nexport const BUILD_MANIFEST = 'build-manifest.json'\nexport const APP_BUILD_MANIFEST = 'app-build-manifest.json'\nexport const FUNCTIONS_CONFIG_MANIFEST = 'functions-config-manifest.json'\nexport const SUBRESOURCE_INTEGRITY_MANIFEST = 'subresource-integrity-manifest'\nexport const NEXT_FONT_MANIFEST = 'next-font-manifest'\nexport const EXPORT_MARKER = 'export-marker.json'\nexport const EXPORT_DETAIL = 'export-detail.json'\nexport const PRERENDER_MANIFEST = 'prerender-manifest.json'\nexport const ROUTES_MANIFEST = 'routes-manifest.json'\nexport const IMAGES_MANIFEST = 'images-manifest.json'\nexport const SERVER_FILES_MANIFEST = 'required-server-files.json'\nexport const DEV_CLIENT_PAGES_MANIFEST = '_devPagesManifest.json'\nexport const MIDDLEWARE_MANIFEST = 'middleware-manifest.json'\nexport const TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST =\n  '_clientMiddlewareManifest.json'\nexport const DEV_CLIENT_MIDDLEWARE_MANIFEST = '_devMiddlewareManifest.json'\nexport const REACT_LOADABLE_MANIFEST = 'react-loadable-manifest.json'\nexport const AUTOMATIC_FONT_OPTIMIZATION_MANIFEST = 'font-manifest.json'\nexport const SERVER_DIRECTORY = 'server'\nexport const CONFIG_FILES = [\n  'next.config.js',\n  'next.config.mjs',\n  'next.config.ts',\n]\nexport const BUILD_ID_FILE = 'BUILD_ID'\nexport const BLOCKED_PAGES = ['/_document', '/_app', '/_error']\nexport const CLIENT_PUBLIC_FILES_PATH = 'public'\nexport const CLIENT_STATIC_FILES_PATH = 'static'\nexport const STRING_LITERAL_DROP_BUNDLE = '__NEXT_DROP_CLIENT_FILE__'\nexport const NEXT_BUILTIN_DOCUMENT = '__NEXT_BUILTIN_DOCUMENT__'\nexport const BARREL_OPTIMIZATION_PREFIX = '__barrel_optimize__'\n\n// server/[entry]/page_client-reference-manifest.js\nexport const CLIENT_REFERENCE_MANIFEST = 'client-reference-manifest'\n// server/server-reference-manifest\nexport const SERVER_REFERENCE_MANIFEST = 'server-reference-manifest'\n// server/middleware-build-manifest.js\nexport const MIDDLEWARE_BUILD_MANIFEST = 'middleware-build-manifest'\n// server/middleware-react-loadable-manifest.js\nexport const MIDDLEWARE_REACT_LOADABLE_MANIFEST =\n  'middleware-react-loadable-manifest'\n// server/interception-route-rewrite-manifest.js\nexport const INTERCEPTION_ROUTE_REWRITE_MANIFEST =\n  'interception-route-rewrite-manifest'\n\n// static/runtime/main.js\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN = `main`\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = `${CLIENT_STATIC_FILES_RUNTIME_MAIN}-app`\n// next internal client components chunk for layouts\nexport const APP_CLIENT_INTERNALS = 'app-pages-internals'\n// static/runtime/react-refresh.js\nexport const CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = `react-refresh`\n// static/runtime/amp.js\nexport const CLIENT_STATIC_FILES_RUNTIME_AMP = `amp`\n// static/runtime/webpack.js\nexport const CLIENT_STATIC_FILES_RUNTIME_WEBPACK = `webpack`\n// static/runtime/polyfills.js\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = 'polyfills'\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n)\nexport const DEFAULT_RUNTIME_WEBPACK = 'webpack-runtime'\nexport const EDGE_RUNTIME_WEBPACK = 'edge-runtime-webpack'\nexport const STATIC_PROPS_ID = '__N_SSG'\nexport const SERVER_PROPS_ID = '__N_SSP'\nexport const GOOGLE_FONT_PROVIDER = 'https://fonts.googleapis.com/'\nexport const OPTIMIZED_FONT_PROVIDERS = [\n  { url: GOOGLE_FONT_PROVIDER, preconnect: 'https://fonts.gstatic.com' },\n  { url: 'https://use.typekit.net', preconnect: 'https://use.typekit.net' },\n]\nexport const DEFAULT_SERIF_FONT = {\n  name: 'Times New Roman',\n  xAvgCharWidth: 821,\n  azAvgWidth: 854.3953488372093,\n  unitsPerEm: 2048,\n}\nexport const DEFAULT_SANS_SERIF_FONT = {\n  name: 'Arial',\n  xAvgCharWidth: 904,\n  azAvgWidth: 934.5116279069767,\n  unitsPerEm: 2048,\n}\nexport const STATIC_STATUS_PAGES = ['/500']\nexport const TRACE_OUTPUT_VERSION = 1\n// in `MB`\nexport const TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000\n\nexport const RSC_MODULE_TYPES = {\n  client: 'client',\n  server: 'server',\n} as const\n\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nexport const EDGE_UNSUPPORTED_NODE_APIS = [\n  'clearImmediate',\n  'setImmediate',\n  'BroadcastChannel',\n  'ByteLengthQueuingStrategy',\n  'CompressionStream',\n  'CountQueuingStrategy',\n  'DecompressionStream',\n  'DomException',\n  'MessageChannel',\n  'MessageEvent',\n  'MessagePort',\n  'ReadableByteStreamController',\n  'ReadableStreamBYOBRequest',\n  'ReadableStreamDefaultController',\n  'TransformStreamDefaultController',\n  'WritableStreamDefaultController',\n]\n\nexport const SYSTEM_ENTRYPOINTS = new Set<string>([\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n])\n","import fs from 'fs'\nimport path from 'path'\n\nexport function findDir(dir: string, name: 'pages' | 'app'): string | null {\n  // prioritize ./${name} over ./src/${name}\n  let curDir = path.join(dir, name)\n  if (fs.existsSync(curDir)) return curDir\n\n  curDir = path.join(dir, 'src', name)\n  if (fs.existsSync(curDir)) return curDir\n\n  return null\n}\n\nexport function findPagesDir(dir: string): {\n  pagesDir: string | undefined\n  appDir: string | undefined\n} {\n  const pagesDir = findDir(dir, 'pages') || undefined\n  const appDir = findDir(dir, 'app') || undefined\n\n  if (appDir == null && pagesDir == null) {\n    throw new Error(\n      \"> Couldn't find any `pages` or `app` directory. Please create one under the project root\"\n    )\n  }\n\n  return {\n    pagesDir,\n    appDir,\n  }\n}\n","import type { NextApiRequestCookies } from '.'\n\n/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */\n\nexport function getCookieParser(headers: {\n  [key: string]: string | string[] | null | undefined\n}): () => NextApiRequestCookies {\n  return function parseCookie(): NextApiRequestCookies {\n    const { cookie } = headers\n\n    if (!cookie) {\n      return {}\n    }\n\n    const { parse: parseCookieFn } = require('next/dist/compiled/cookie')\n    return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie)\n  }\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import type { IncomingHttpHeaders, OutgoingHttpHeaders } from 'http'\nimport type { I18NConfig } from '../config-shared'\n\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code'\nimport type { NextApiRequestCookies } from '../api-utils'\nimport { getCookieParser } from '../api-utils/get-cookie-parser'\n\nexport interface BaseNextRequestConfig {\n  basePath: string | undefined\n  i18n?: I18NConfig\n  trailingSlash?: boolean | undefined\n}\n\nexport type FetchMetric = {\n  url: string\n  idx: number\n  end: number\n  start: number\n  method: string\n  status: number\n  cacheReason: string\n  cacheStatus: 'hit' | 'miss' | 'skip' | 'hmr'\n  cacheWarning?: string\n}\n\nexport type FetchMetrics = Array<FetchMetric>\n\nexport abstract class BaseNextRequest<Body = any> {\n  protected _cookies: NextApiRequestCookies | undefined\n  public abstract headers: IncomingHttpHeaders\n  public abstract fetchMetrics?: FetchMetric[]\n\n  constructor(\n    public method: string,\n    public url: string,\n    public body: Body\n  ) {}\n\n  // Utils implemented using the abstract methods above\n\n  public get cookies() {\n    if (this._cookies) return this._cookies\n    return (this._cookies = getCookieParser(this.headers)())\n  }\n}\n\nexport abstract class BaseNextResponse<Destination = any> {\n  abstract statusCode: number | undefined\n  abstract statusMessage: string | undefined\n  abstract get sent(): boolean\n\n  constructor(public destination: Destination) {}\n\n  /**\n   * Sets a value for the header overwriting existing values\n   */\n  abstract setHeader(name: string, value: string | string[]): this\n\n  /**\n   * Removes a header\n   */\n  abstract removeHeader(name: string): this\n\n  /**\n   * Appends value for the given header name\n   */\n  abstract appendHeader(name: string, value: string): this\n\n  /**\n   * Get all vaues for a header as an array or undefined if no value is present\n   */\n  abstract getHeaderValues(name: string): string[] | undefined\n\n  abstract hasHeader(name: string): boolean\n\n  /**\n   * Get vaues for a header concatenated using `,` or undefined if no value is present\n   */\n  abstract getHeader(name: string): string | undefined\n\n  abstract getHeaders(): OutgoingHttpHeaders\n\n  abstract body(value: string): this\n\n  abstract send(): void\n\n  abstract onClose(callback: () => void): void\n\n  // Utils implemented using the abstract methods above\n\n  public redirect(destination: string, statusCode: number) {\n    this.setHeader('Location', destination)\n    this.statusCode = statusCode\n\n    // Since IE11 doesn't support the 308 header add backwards\n    // compatibility using refresh header\n    if (statusCode === RedirectStatusCode.PermanentRedirect) {\n      this.setHeader('Refresh', `0;url=${destination}`)\n    }\n\n    return this\n  }\n}\n","import type { ServerResponse, IncomingMessage } from 'http'\nimport type { Writable, Readable } from 'stream'\n\nimport { SYMBOL_CLEARED_COOKIES } from '../api-utils'\nimport type { NextApiRequestCookies } from '../api-utils'\n\nimport { NEXT_REQUEST_META } from '../request-meta'\nimport type { RequestMeta } from '../request-meta'\n\nimport { BaseNextRequest, BaseNextResponse, type FetchMetric } from './index'\nimport type { OutgoingHttpHeaders } from 'node:http'\n\ntype Req = IncomingMessage & {\n  [NEXT_REQUEST_META]?: RequestMeta\n  cookies?: NextApiRequestCookies\n  fetchMetrics?: FetchMetric[]\n}\n\nexport class NodeNextRequest extends BaseNextRequest<Readable> {\n  public headers = this._req.headers\n  public fetchMetrics: FetchMetric[] | undefined = this._req?.fetchMetrics;\n\n  [NEXT_REQUEST_META]: RequestMeta = this._req[NEXT_REQUEST_META] || {}\n\n  constructor(private _req: Req) {\n    super(_req.method!.toUpperCase(), _req.url!, _req)\n  }\n\n  get originalRequest() {\n    // Need to mimic these changes to the original req object for places where we use it:\n    // render.tsx, api/ssg requests\n    this._req[NEXT_REQUEST_META] = this[NEXT_REQUEST_META]\n    this._req.url = this.url\n    this._req.cookies = this.cookies\n    return this._req\n  }\n\n  set originalRequest(value: Req) {\n    this._req = value\n  }\n\n  private streaming = false\n\n  /**\n   * Returns the request body as a Web Readable Stream. The body here can only\n   * be read once as the body will start flowing as soon as the data handler\n   * is attached.\n   *\n   * @internal\n   */\n  public stream() {\n    if (this.streaming) {\n      throw new Error(\n        'Invariant: NodeNextRequest.stream() can only be called once'\n      )\n    }\n    this.streaming = true\n\n    return new ReadableStream({\n      start: (controller) => {\n        this._req.on('data', (chunk) => {\n          controller.enqueue(new Uint8Array(chunk))\n        })\n        this._req.on('end', () => {\n          controller.close()\n        })\n        this._req.on('error', (err) => {\n          controller.error(err)\n        })\n      },\n    })\n  }\n}\n\nexport class NodeNextResponse extends BaseNextResponse<Writable> {\n  private textBody: string | undefined = undefined\n\n  public [SYMBOL_CLEARED_COOKIES]?: boolean\n\n  get originalResponse() {\n    if (SYMBOL_CLEARED_COOKIES in this) {\n      this._res[SYMBOL_CLEARED_COOKIES] = this[SYMBOL_CLEARED_COOKIES]\n    }\n\n    return this._res\n  }\n\n  constructor(\n    private _res: ServerResponse & { [SYMBOL_CLEARED_COOKIES]?: boolean }\n  ) {\n    super(_res)\n  }\n\n  get sent() {\n    return this._res.finished || this._res.headersSent\n  }\n\n  get statusCode() {\n    return this._res.statusCode\n  }\n\n  set statusCode(value: number) {\n    this._res.statusCode = value\n  }\n\n  get statusMessage() {\n    return this._res.statusMessage\n  }\n\n  set statusMessage(value: string) {\n    this._res.statusMessage = value\n  }\n\n  setHeader(name: string, value: string | string[]): this {\n    this._res.setHeader(name, value)\n    return this\n  }\n\n  removeHeader(name: string): this {\n    this._res.removeHeader(name)\n    return this\n  }\n\n  getHeaderValues(name: string): string[] | undefined {\n    const values = this._res.getHeader(name)\n\n    if (values === undefined) return undefined\n\n    return (Array.isArray(values) ? values : [values]).map((value) =>\n      value.toString()\n    )\n  }\n\n  hasHeader(name: string): boolean {\n    return this._res.hasHeader(name)\n  }\n\n  getHeader(name: string): string | undefined {\n    const values = this.getHeaderValues(name)\n    return Array.isArray(values) ? values.join(',') : undefined\n  }\n\n  getHeaders(): OutgoingHttpHeaders {\n    return this._res.getHeaders()\n  }\n\n  appendHeader(name: string, value: string): this {\n    const currentValues = this.getHeaderValues(name) ?? []\n\n    if (!currentValues.includes(value)) {\n      this._res.setHeader(name, [...currentValues, value])\n    }\n\n    return this\n  }\n\n  body(value: string) {\n    this.textBody = value\n    return this\n  }\n\n  send() {\n    this._res.end(this.textBody)\n  }\n\n  public onClose(callback: () => void) {\n    this.originalResponse.on('close', callback)\n  }\n}\n","/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */\nexport const fnv1a52 = (str: string) => {\n  const len = str.length\n  let i = 0,\n    t0 = 0,\n    v0 = 0x2325,\n    t1 = 0,\n    v1 = 0x8422,\n    t2 = 0,\n    v2 = 0x9ce4,\n    t3 = 0,\n    v3 = 0xcbf2\n\n  while (i < len) {\n    v0 ^= str.charCodeAt(i++)\n    t0 = v0 * 435\n    t1 = v1 * 435\n    t2 = v2 * 435\n    t3 = v3 * 435\n    t2 += v0 << 8\n    t3 += v1 << 8\n    t1 += t0 >>> 16\n    v0 = t0 & 65535\n    t2 += t1 >>> 16\n    v1 = t1 & 65535\n    v3 = (t3 + (t2 >>> 16)) & 65535\n    v2 = t2 & 65535\n  }\n\n  return (\n    (v3 & 15) * 281474976710656 +\n    v2 * 4294967296 +\n    v1 * 65536 +\n    (v0 ^ (v3 >> 4))\n  )\n}\n\nexport const generateETag = (payload: string, weak = false) => {\n  const prefix = weak ? 'W/\"' : '\"'\n  return (\n    prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"'\n  )\n}\n","import { CACHE_ONE_YEAR } from '../../lib/constants'\n\n/**\n * The revalidate option used internally for pages. A value of `false` means\n * that the page should not be revalidated. A number means that the page\n * should be revalidated after the given number of seconds (this also includes\n * `1` which means to revalidate after 1 second). A value of `0` is not a valid\n * value for this option.\n */\nexport type Revalidate = number | false\nexport type SwrDelta = number\n\nexport function formatRevalidate({\n  revalidate,\n  swrDelta,\n}: {\n  revalidate: Revalidate\n  swrDelta?: SwrDelta\n}): string {\n  const swrHeader = swrDelta\n    ? `stale-while-revalidate=${swrDelta}`\n    : 'stale-while-revalidate'\n\n  if (revalidate === 0) {\n    return 'private, no-cache, no-store, max-age=0, must-revalidate'\n  } else if (typeof revalidate === 'number') {\n    return `s-maxage=${revalidate}, ${swrHeader}`\n  }\n\n  return `s-maxage=${CACHE_ONE_YEAR}, ${swrHeader}`\n}\n","export const RSC_HEADER = 'RSC' as const\nexport const ACTION_HEADER = 'Next-Action' as const\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh' as const\nexport const NEXT_URL = 'Next-Url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\n","import type { IncomingMessage, ServerResponse } from 'http'\nimport type RenderResult from './render-result'\nimport type { Revalidate, SwrDelta } from './lib/revalidate'\n\nimport { isResSent } from '../shared/lib/utils'\nimport { generateETag } from './lib/etag'\nimport fresh from 'next/dist/compiled/fresh'\nimport { formatRevalidate } from './lib/revalidate'\nimport { RSC_CONTENT_TYPE_HEADER } from '../client/components/app-router-headers'\n\nexport function sendEtagResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  etag: string | undefined\n): boolean {\n  if (etag) {\n    /**\n     * The server generating a 304 response MUST generate any of the\n     * following header fields that would have been sent in a 200 (OK)\n     * response to the same request: Cache-Control, Content-Location, Date,\n     * ETag, Expires, and Vary. https://tools.ietf.org/html/rfc7232#section-4.1\n     */\n    res.setHeader('ETag', etag)\n  }\n\n  if (fresh(req.headers, { etag })) {\n    res.statusCode = 304\n    res.end()\n    return true\n  }\n\n  return false\n}\n\nexport async function sendRenderResult({\n  req,\n  res,\n  result,\n  type,\n  generateEtags,\n  poweredByHeader,\n  revalidate,\n  swrDelta,\n}: {\n  req: IncomingMessage\n  res: ServerResponse\n  result: RenderResult\n  type: 'html' | 'json' | 'rsc'\n  generateEtags: boolean\n  poweredByHeader: boolean\n  revalidate: Revalidate | undefined\n  swrDelta: SwrDelta | undefined\n}): Promise<void> {\n  if (isResSent(res)) {\n    return\n  }\n\n  if (poweredByHeader && type === 'html') {\n    res.setHeader('X-Powered-By', 'Next.js')\n  }\n\n  if (typeof revalidate !== 'undefined') {\n    res.setHeader(\n      'Cache-Control',\n      formatRevalidate({\n        revalidate,\n        swrDelta,\n      })\n    )\n  }\n\n  const payload = result.isDynamic ? null : result.toUnchunkedString()\n\n  if (payload !== null) {\n    let etagPayload = payload\n    if (type === 'rsc') {\n      // ensure etag generation is deterministic as\n      // ordering can differ even if underlying content\n      // does not differ\n      etagPayload = payload.split('\\n').sort().join('\\n')\n    } else if (type === 'html' && payload.includes('__next_f')) {\n      const { parse } =\n        require('next/dist/compiled/node-html-parser') as typeof import('next/dist/compiled/node-html-parser')\n\n      try {\n        // Parse the HTML\n        let root = parse(payload)\n\n        // Get script tags in the body element\n        let scriptTags = root\n          .querySelector('body')\n          ?.querySelectorAll('script')\n          .filter(\n            (node) =>\n              !node.hasAttribute('src') && node.innerHTML?.includes('__next_f')\n          )\n\n        // Sort the script tags by their inner text\n        scriptTags?.sort((a, b) => a.innerHTML.localeCompare(b.innerHTML))\n\n        // Remove the original script tags\n        scriptTags?.forEach((script: any) => script.remove())\n\n        // Append the sorted script tags to the body\n        scriptTags?.forEach((script: any) =>\n          root.querySelector('body')?.appendChild(script)\n        )\n\n        // Stringify back to HTML\n        etagPayload = root.toString()\n      } catch (err) {\n        console.error(`Error parsing HTML payload`, err)\n      }\n    }\n\n    const etag = generateEtags ? generateETag(etagPayload) : undefined\n    if (sendEtagResponse(req, res, etag)) {\n      return\n    }\n  }\n\n  if (!res.getHeader('Content-Type')) {\n    res.setHeader(\n      'Content-Type',\n      result.contentType\n        ? result.contentType\n        : type === 'rsc'\n          ? RSC_CONTENT_TYPE_HEADER\n          : type === 'json'\n            ? 'application/json'\n            : 'text/html; charset=utf-8'\n    )\n  }\n\n  if (payload) {\n    res.setHeader('Content-Length', Buffer.byteLength(payload))\n  }\n\n  if (req.method === 'HEAD') {\n    res.end(null)\n    return\n  }\n\n  if (payload !== null) {\n    res.end(payload)\n    return\n  }\n\n  // Pipe the render result to the response after we get a writer for it.\n  await result.pipeToNodeResponse(res)\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(query[key])) {\n      ;(query[key] as string[]).push(value)\n    } else {\n      query[key] = [query[key] as string, value]\n    }\n  })\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (\n    typeof param === 'string' ||\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(\n  urlQuery: ParsedUrlQuery\n): URLSearchParams {\n  const result = new URLSearchParams()\n  Object.entries(urlQuery).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      value.forEach((item) => result.append(key, stringifyUrlQueryParam(item)))\n    } else {\n      result.set(key, stringifyUrlQueryParam(value))\n    }\n  })\n  return result\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  searchParamsList.forEach((searchParams) => {\n    Array.from(searchParams.keys()).forEach((key) => target.delete(key))\n    searchParams.forEach((value, key) => target.append(key, value))\n  })\n  return target\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n  }\n}\n","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors'\n\nexport const prefixes = {\n  wait: white(bold('○')),\n  error: red(bold('⨯')),\n  warn: yellow(bold('⚠')),\n  ready: '▲', // no color\n  info: white(bold(' ')),\n  event: green(bold('✓')),\n  trace: magenta(bold('»')),\n} as const\n\nconst LOGGING_METHOD = {\n  log: 'log',\n  warn: 'warn',\n  error: 'error',\n} as const\n\nfunction prefixedLog(prefixType: keyof typeof prefixes, ...message: any[]) {\n  if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n    message.shift()\n  }\n\n  const consoleMethod: keyof typeof LOGGING_METHOD =\n    prefixType in LOGGING_METHOD\n      ? LOGGING_METHOD[prefixType as keyof typeof LOGGING_METHOD]\n      : 'log'\n\n  const prefix = prefixes[prefixType]\n  // If there's no message, don't print the prefix but a new line\n  if (message.length === 0) {\n    console[consoleMethod]('')\n  } else {\n    console[consoleMethod](' ' + prefix, ...message)\n  }\n}\n\nexport function bootstrap(...message: any[]) {\n  console.log(' ', ...message)\n}\n\nexport function wait(...message: any[]) {\n  prefixedLog('wait', ...message)\n}\n\nexport function error(...message: any[]) {\n  prefixedLog('error', ...message)\n}\n\nexport function warn(...message: any[]) {\n  prefixedLog('warn', ...message)\n}\n\nexport function ready(...message: any[]) {\n  prefixedLog('ready', ...message)\n}\n\nexport function info(...message: any[]) {\n  prefixedLog('info', ...message)\n}\n\nexport function event(...message: any[]) {\n  prefixedLog('event', ...message)\n}\n\nexport function trace(...message: any[]) {\n  prefixedLog('trace', ...message)\n}\n\nconst warnOnceMessages = new Set()\nexport function warnOnce(...message: any[]) {\n  if (!warnOnceMessages.has(message[0])) {\n    warnOnceMessages.add(message.join(' '))\n\n    warn(...message)\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");","// Regex from `node/lib/internal/net.js`: https://github.com/nodejs/node/blob/9fc57006c27564ed7f75eee090eca86786508f51/lib/internal/net.js#L19-L29\n// License included below:\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])'\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})'\nconst IPv6Reg = new RegExp(\n  '^(' +\n    `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +\n    `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +\n    `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +\n    `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +\n    `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +\n    `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +\n    ')(%[0-9a-zA-Z-.:]{1,})?$'\n)\n\nexport function isIPv6(s: string) {\n  return IPv6Reg.test(s)\n}\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","export function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from '../../../../server/lib/interception-routes'\n\n// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/\n\nexport function isDynamicRoute(route: string): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/shared/lib/runtime-config.external.js\");","const BOT_UA_RE =\n  /Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i\n\nexport function isBot(userAgent: string): boolean {\n  return BOT_UA_RE.test(userAgent)\n}\n","import { getTracer } from '../lib/trace/tracer'\nimport { AppRenderSpan } from '../lib/trace/constants'\nimport { DetachedPromise } from '../../lib/detached-promise'\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler'\nimport { ENCODED_TAGS } from './encodedTags'\nimport {\n  indexOfUint8Array,\n  isEquivalentUint8Arrays,\n  removeFromUint8Array,\n} from './uint8array-helpers'\n\nfunction voidCatch() {\n  // this catcher is designed to be used with pipeTo where we expect the underlying\n  // pipe implementation to forward errors but we don't want the pipeTo promise to reject\n  // and be unhandled\n}\n\nexport type ReactReadableStream = ReadableStream<Uint8Array> & {\n  allReady?: Promise<void> | undefined\n}\n\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder()\n\nexport function chainStreams<T>(\n  ...streams: ReadableStream<T>[]\n): ReadableStream<T> {\n  // We could encode this invariant in the arguments but current uses of this function pass\n  // use spread so it would be missed by\n  if (streams.length === 0) {\n    throw new Error('Invariant: chainStreams requires at least one stream')\n  }\n\n  // If we only have 1 stream we fast path it by returning just this stream\n  if (streams.length === 1) {\n    return streams[0]\n  }\n\n  const { readable, writable } = new TransformStream()\n\n  // We always initiate pipeTo immediately. We know we have at least 2 streams\n  // so we need to avoid closing the writable when this one finishes.\n  let promise = streams[0].pipeTo(writable, { preventClose: true })\n\n  let i = 1\n  for (; i < streams.length - 1; i++) {\n    const nextStream = streams[i]\n    promise = promise.then(() =>\n      nextStream.pipeTo(writable, { preventClose: true })\n    )\n  }\n\n  // We can omit the length check because we halted before the last stream and there\n  // is at least two streams so the lastStream here will always be defined\n  const lastStream = streams[i]\n  promise = promise.then(() => lastStream.pipeTo(writable))\n\n  // Catch any errors from the streams and ignore them, they will be handled\n  // by whatever is consuming the readable stream.\n  promise.catch(voidCatch)\n\n  return readable\n}\n\nexport function streamFromString(str: string): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(encoder.encode(str))\n      controller.close()\n    },\n  })\n}\n\nexport function streamFromBuffer(chunk: Buffer): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(chunk)\n      controller.close()\n    },\n  })\n}\n\nexport async function streamToBuffer(\n  stream: ReadableStream<Uint8Array>\n): Promise<Buffer> {\n  const buffers: Buffer[] = []\n\n  for await (const chunk of stream) {\n    buffers.push(Buffer.from(chunk))\n  }\n\n  return Buffer.concat(buffers)\n}\n\nexport async function streamToString(\n  stream: ReadableStream<Uint8Array>\n): Promise<string> {\n  const decoder = new TextDecoder('utf-8', { fatal: true })\n  let string = ''\n\n  for await (const chunk of stream) {\n    string += decoder.decode(chunk, { stream: true })\n  }\n\n  string += decoder.decode()\n\n  return string\n}\n\nexport function createBufferedTransformStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let bufferedChunks: Array<Uint8Array> = []\n  let bufferByteLength: number = 0\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    // If we already have a pending flush, then return early.\n    if (pending) return\n\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        const chunk = new Uint8Array(bufferByteLength)\n        let copiedBytes = 0\n\n        for (let i = 0; i < bufferedChunks.length; i++) {\n          const bufferedChunk = bufferedChunks[i]\n          chunk.set(bufferedChunk, copiedBytes)\n          copiedBytes += bufferedChunk.byteLength\n        }\n        // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n        // and our bufferByteLength to prepare for the next round of buffered chunks\n        bufferedChunks.length = 0\n        bufferByteLength = 0\n        controller.enqueue(chunk)\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      // Combine the previous buffer with the new chunk.\n      bufferedChunks.push(chunk)\n      bufferByteLength += chunk.byteLength\n\n      // Flush the buffer to the controller.\n      flush(controller)\n    },\n    flush() {\n      if (!pending) return\n\n      return pending.promise\n    },\n  })\n}\n\nfunction createInsertedHTMLStream(\n  getServerInsertedHTML: () => Promise<string>\n): TransformStream<Uint8Array, Uint8Array> {\n  return new TransformStream({\n    transform: async (chunk, controller) => {\n      const html = await getServerInsertedHTML()\n      if (html) {\n        controller.enqueue(encoder.encode(html))\n      }\n\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nexport function renderToInitialFizzStream({\n  ReactDOMServer,\n  element,\n  streamOptions,\n}: {\n  ReactDOMServer: typeof import('react-dom/server.edge')\n  element: React.ReactElement\n  streamOptions?: any\n}): Promise<ReactReadableStream> {\n  return getTracer().trace(AppRenderSpan.renderToReadableStream, async () =>\n    ReactDOMServer.renderToReadableStream(element, streamOptions)\n  )\n}\n\nfunction createHeadInsertionTransformStream(\n  insert: () => Promise<string>\n): TransformStream<Uint8Array, Uint8Array> {\n  let inserted = false\n  let freezing = false\n\n  // We need to track if this transform saw any bytes because if it didn't\n  // we won't want to insert any server HTML at all\n  let hasBytes = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      hasBytes = true\n      // While react is flushing chunks, we don't apply insertions\n      if (freezing) {\n        controller.enqueue(chunk)\n        return\n      }\n\n      const insertion = await insert()\n\n      if (inserted) {\n        if (insertion) {\n          const encodedInsertion = encoder.encode(insertion)\n          controller.enqueue(encodedInsertion)\n        }\n        controller.enqueue(chunk)\n        freezing = true\n      } else {\n        // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n        const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        if (index !== -1) {\n          if (insertion) {\n            const encodedInsertion = encoder.encode(insertion)\n            const insertedHeadContent = new Uint8Array(\n              chunk.length + encodedInsertion.length\n            )\n            insertedHeadContent.set(chunk.slice(0, index))\n            insertedHeadContent.set(encodedInsertion, index)\n            insertedHeadContent.set(\n              chunk.slice(index),\n              index + encodedInsertion.length\n            )\n            controller.enqueue(insertedHeadContent)\n          } else {\n            controller.enqueue(chunk)\n          }\n          freezing = true\n          inserted = true\n        }\n      }\n\n      if (!inserted) {\n        controller.enqueue(chunk)\n      } else {\n        scheduleImmediate(() => {\n          freezing = false\n        })\n      }\n    },\n    async flush(controller) {\n      // Check before closing if there's anything remaining to insert.\n      if (hasBytes) {\n        const insertion = await insert()\n        if (insertion) {\n          controller.enqueue(encoder.encode(insertion))\n        }\n      }\n    },\n  })\n}\n\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(\n  suffix: string\n): TransformStream<Uint8Array, Uint8Array> {\n  let flushed = false\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        controller.enqueue(encoder.encode(suffix))\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // If we've already flushed, we're done.\n      if (flushed) return\n\n      // Schedule the flush to happen.\n      flushed = true\n      flush(controller)\n    },\n    flush(controller) {\n      if (pending) return pending.promise\n      if (flushed) return\n\n      // Flush now.\n      controller.enqueue(encoder.encode(suffix))\n    },\n  })\n}\n\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(\n  stream: ReadableStream<Uint8Array>\n): TransformStream<Uint8Array, Uint8Array> {\n  let pull: Promise<void> | null = null\n  let donePulling = false\n\n  async function startPulling(controller: TransformStreamDefaultController) {\n    if (pull) {\n      return\n    }\n\n    const reader = stream.getReader()\n\n    // NOTE: streaming flush\n    // We are buffering here for the inlined data stream because the\n    // \"shell\" stream might be chunkenized again by the underlying stream\n    // implementation, e.g. with a specific high-water mark. To ensure it's\n    // the safe timing to pipe the data stream, this extra tick is\n    // necessary.\n\n    // We don't start reading until we've left the current Task to ensure\n    // that it's inserted after flushing the shell. Note that this implementation\n    // might get stale if impl details of Fizz change in the future.\n    await atLeastOneTask()\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (done) {\n          donePulling = true\n          return\n        }\n\n        controller.enqueue(value)\n      }\n    } catch (err) {\n      controller.error(err)\n    }\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // Start the streaming if it hasn't already been started yet.\n      if (!pull) {\n        pull = startPulling(controller)\n      }\n    },\n    flush(controller) {\n      if (donePulling) {\n        return\n      }\n      return pull || startPulling(controller)\n    },\n  })\n}\n\nconst CLOSE_TAG = '</body></html>'\n\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */\nfunction createMoveSuffixStream(): TransformStream<Uint8Array, Uint8Array> {\n  let foundSuffix = false\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (foundSuffix) {\n        return controller.enqueue(chunk)\n      }\n\n      const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n      if (index > -1) {\n        foundSuffix = true\n\n        // If the whole chunk is the suffix, then don't write anything, it will\n        // be written in the flush.\n        if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n          return\n        }\n\n        // Write out the part before the suffix.\n        const before = chunk.slice(0, index)\n        controller.enqueue(before)\n\n        // In the case where the suffix is in the middle of the chunk, we need\n        // to split the chunk into two parts.\n        if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n          // Write out the part after the suffix.\n          const after = chunk.slice(\n            index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length\n          )\n          controller.enqueue(after)\n        }\n      } else {\n        controller.enqueue(chunk)\n      }\n    },\n    flush(controller) {\n      // Even if we didn't find the suffix, the HTML is not valid if we don't\n      // add it, so insert it at the end.\n      controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n    },\n  })\n}\n\nfunction createStripDocumentClosingTagsTransform(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  return new TransformStream({\n    transform(chunk, controller) {\n      // We rely on the assumption that chunks will never break across a code unit.\n      // This is reasonable because we currently concat all of React's output from a single\n      // flush into one chunk before streaming it forward which means the chunk will represent\n      // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n      // longer do this large buffered chunk\n      if (\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)\n      ) {\n        // the entire chunk is the closing tags; return without enqueueing anything.\n        return\n      }\n\n      // We assume these tags will go at together at the end of the document and that\n      // they won't appear anywhere else in the document. This is not really a safe assumption\n      // but until we revamp our streaming infra this is a performant way to string the tags\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY)\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML)\n\n      controller.enqueue(chunk)\n    },\n  })\n}\n\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */\nexport function createRootLayoutValidatorStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let foundHtml = false\n  let foundBody = false\n  return new TransformStream({\n    async transform(chunk, controller) {\n      // Peek into the streamed chunk to see if the tags are present.\n      if (\n        !foundHtml &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1\n      ) {\n        foundHtml = true\n      }\n\n      if (\n        !foundBody &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1\n      ) {\n        foundBody = true\n      }\n\n      controller.enqueue(chunk)\n    },\n    flush(controller) {\n      const missingTags: typeof window.__next_root_layout_missing_tags = []\n      if (!foundHtml) missingTags.push('html')\n      if (!foundBody) missingTags.push('body')\n\n      if (!missingTags.length) return\n\n      controller.enqueue(\n        encoder.encode(\n          `<script>self.__next_root_layout_missing_tags=${JSON.stringify(\n            missingTags\n          )}</script>`\n        )\n      )\n    },\n  })\n}\n\nfunction chainTransformers<T>(\n  readable: ReadableStream<T>,\n  transformers: ReadonlyArray<TransformStream<T, T> | null>\n): ReadableStream<T> {\n  let stream = readable\n  for (const transformer of transformers) {\n    if (!transformer) continue\n\n    stream = stream.pipeThrough(transformer)\n  }\n  return stream\n}\n\nexport type ContinueStreamOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array> | undefined\n  isStaticGeneration: boolean\n  getServerInsertedHTML: (() => Promise<string>) | undefined\n  serverInsertedHTMLToHead: boolean\n  validateRootLayout?: boolean\n  /**\n   * Suffix to inject after the buffered data, but before the close tags.\n   */\n  suffix?: string | undefined\n}\n\nexport async function continueFizzStream(\n  renderStream: ReactReadableStream,\n  {\n    suffix,\n    inlinedDataStream,\n    isStaticGeneration,\n    getServerInsertedHTML,\n    serverInsertedHTMLToHead,\n    validateRootLayout,\n  }: ContinueStreamOptions\n): Promise<ReadableStream<Uint8Array>> {\n  // Suffix itself might contain close tags at the end, so we need to split it.\n  const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null\n\n  // If we're generating static HTML and there's an `allReady` promise on the\n  // stream, we need to wait for it to resolve before continuing.\n  if (isStaticGeneration && 'allReady' in renderStream) {\n    await renderStream.allReady\n  }\n\n  return chainTransformers(renderStream, [\n    // Buffer everything to avoid flushing too frequently\n    createBufferedTransformStream(),\n\n    // Insert generated tags to head\n    getServerInsertedHTML && !serverInsertedHTMLToHead\n      ? createInsertedHTMLStream(getServerInsertedHTML)\n      : null,\n\n    // Insert suffix content\n    suffixUnclosed != null && suffixUnclosed.length > 0\n      ? createDeferredSuffixStream(suffixUnclosed)\n      : null,\n\n    // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n\n    // Validate the root layout for missing html or body tags\n    validateRootLayout ? createRootLayoutValidatorStream() : null,\n\n    // Close tags should always be deferred to the end\n    createMoveSuffixStream(),\n\n    // Special head insertions\n    // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n    // hydration errors. Remove this once it's ready to be handled by react itself.\n    getServerInsertedHTML && serverInsertedHTMLToHead\n      ? createHeadInsertionTransformStream(getServerInsertedHTML)\n      : null,\n  ])\n}\n\ntype ContinueDynamicPrerenderOptions = {\n  getServerInsertedHTML: () => Promise<string>\n}\n\nexport async function continueDynamicPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  { getServerInsertedHTML }: ContinueDynamicPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      .pipeThrough(createStripDocumentClosingTagsTransform())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n  )\n}\n\ntype ContinueStaticPrerenderOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n}\n\nexport async function continueStaticPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  { inlinedDataStream, getServerInsertedHTML }: ContinueStaticPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\ntype ContinueResumeOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n}\n\nexport async function continueDynamicHTMLResume(\n  renderStream: ReadableStream<Uint8Array>,\n  { inlinedDataStream, getServerInsertedHTML }: ContinueResumeOptions\n) {\n  return (\n    renderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\ntype ContinueDynamicDataResumeOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n}\n\nexport async function continueDynamicDataResume(\n  renderStream: ReadableStream<Uint8Array>,\n  { inlinedDataStream }: ContinueDynamicDataResumeOptions\n) {\n  return (\n    renderStream\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n","export const ENCODED_TAGS = {\n  // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n  OPENING: {\n    // <html\n    HTML: new Uint8Array([60, 104, 116, 109, 108]),\n    // <body\n    BODY: new Uint8Array([60, 98, 111, 100, 121]),\n  },\n  CLOSED: {\n    // </head>\n    HEAD: new Uint8Array([60, 47, 104, 101, 97, 100, 62]),\n    // </body>\n    BODY: new Uint8Array([60, 47, 98, 111, 100, 121, 62]),\n    // </html>\n    HTML: new Uint8Array([60, 47, 104, 116, 109, 108, 62]),\n    // </body></html>\n    BODY_AND_HTML: new Uint8Array([\n      60, 47, 98, 111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62,\n    ]),\n  },\n} as const\n","import type { OutgoingHttpHeaders } from 'http'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../lib/constants'\n\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */\nexport function fromNodeOutgoingHttpHeaders(\n  nodeHeaders: OutgoingHttpHeaders\n): Headers {\n  const headers = new Headers()\n  for (let [key, value] of Object.entries(nodeHeaders)) {\n    const values = Array.isArray(value) ? value : [value]\n    for (let v of values) {\n      if (typeof v === 'undefined') continue\n      if (typeof v === 'number') {\n        v = v.toString()\n      }\n\n      headers.append(key, v)\n    }\n  }\n  return headers\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nexport function splitCookiesString(cookiesString: string) {\n  var cookiesStrings = []\n  var pos = 0\n  var start\n  var ch\n  var lastComma\n  var nextStart\n  var cookiesSeparatorFound\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1\n    }\n    return pos < cookiesString.length\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos)\n\n    return ch !== '=' && ch !== ';' && ch !== ','\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos\n    cookiesSeparatorFound = false\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos)\n      if (ch === ',') {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos\n        pos += 1\n\n        skipWhitespace()\n        nextStart = pos\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n          // we found cookies separator\n          cookiesSeparatorFound = true\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart\n          cookiesStrings.push(cookiesString.substring(start, lastComma))\n          start = pos\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1\n        }\n      } else {\n        pos += 1\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length))\n    }\n  }\n\n  return cookiesStrings\n}\n\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */\nexport function toNodeOutgoingHttpHeaders(\n  headers: Headers\n): OutgoingHttpHeaders {\n  const nodeHeaders: OutgoingHttpHeaders = {}\n  const cookies: string[] = []\n  if (headers) {\n    for (const [key, value] of headers.entries()) {\n      if (key.toLowerCase() === 'set-cookie') {\n        // We may have gotten a comma joined string of cookies, or multiple\n        // set-cookie headers. We need to merge them into one header array\n        // to represent all the cookies.\n        cookies.push(...splitCookiesString(value))\n        nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies\n      } else {\n        nodeHeaders[key] = value\n      }\n    }\n  }\n  return nodeHeaders\n}\n\n/**\n * Validate the correctness of a user-provided URL.\n */\nexport function validateURL(url: string | URL): string {\n  try {\n    return String(new URL(String(url)))\n  } catch (error: any) {\n    throw new Error(\n      `URL is malformed \"${String(\n        url\n      )}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,\n      { cause: error }\n    )\n  }\n}\n\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key; it calls the provided function\n * with the normalized key.\n */\nexport function normalizeNextQueryParam(\n  key: string,\n  onKeyNormalized: (normalizedKey: string) => void\n) {\n  const prefixes = [NEXT_QUERY_PARAM_PREFIX, NEXT_INTERCEPTION_MARKER_PREFIX]\n  for (const prefix of prefixes) {\n    if (key !== prefix && key.startsWith(prefix)) {\n      const normalizedKey = key.substring(prefix.length)\n      onKeyNormalized(normalizedKey)\n    }\n  }\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: string[]\n): PathLocale {\n  let detectedLocale: string | undefined\n  // first item will be empty string from splitting at first char\n  const pathnameParts = pathname.split('/')\n\n  ;(locales || []).some((locale) => {\n    if (\n      pathnameParts[1] &&\n      pathnameParts[1].toLowerCase() === locale.toLowerCase()\n    ) {\n      detectedLocale = locale\n      pathnameParts.splice(1, 1)\n      pathname = pathnameParts.join('/') || '/'\n      return true\n    }\n    return false\n  })\n\n  return {\n    pathname,\n    detectedLocale,\n  }\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { I18NProvider } from '../lib/i18n-provider'\n\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info'\n\ninterface Options {\n  base?: string | URL\n  headers?: OutgoingHttpHeaders\n  forceLocale?: boolean\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  i18nProvider?: I18NProvider\n}\n\nconst REGEX_LOCALHOST_HOSTNAME =\n  /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/\n\nfunction parseURL(url: string | URL, base?: string | URL) {\n  return new URL(\n    String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'),\n    base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost')\n  )\n}\n\nconst Internal = Symbol('NextURLInternal')\n\nexport class NextURL {\n  private [Internal]: {\n    basePath: string\n    buildId?: string\n    flightSearchParameters?: Record<string, string>\n    defaultLocale?: string\n    domainLocale?: DomainLocale\n    locale?: string\n    options: Options\n    trailingSlash?: boolean\n    url: URL\n  }\n\n  constructor(input: string | URL, base?: string | URL, opts?: Options)\n  constructor(input: string | URL, opts?: Options)\n  constructor(\n    input: string | URL,\n    baseOrOpts?: string | URL | Options,\n    opts?: Options\n  ) {\n    let base: undefined | string | URL\n    let options: Options\n\n    if (\n      (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts) ||\n      typeof baseOrOpts === 'string'\n    ) {\n      base = baseOrOpts\n      options = opts || {}\n    } else {\n      options = opts || baseOrOpts || {}\n    }\n\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: '',\n    }\n\n    this.analyze()\n  }\n\n  private analyze() {\n    const info = getNextPathnameInfo(this[Internal].url.pathname, {\n      nextConfig: this[Internal].options.nextConfig,\n      parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n      i18nProvider: this[Internal].options.i18nProvider,\n    })\n\n    const hostname = getHostname(\n      this[Internal].url,\n      this[Internal].options.headers\n    )\n    this[Internal].domainLocale = this[Internal].options.i18nProvider\n      ? this[Internal].options.i18nProvider.detectDomainLocale(hostname)\n      : detectDomainLocale(\n          this[Internal].options.nextConfig?.i18n?.domains,\n          hostname\n        )\n\n    const defaultLocale =\n      this[Internal].domainLocale?.defaultLocale ||\n      this[Internal].options.nextConfig?.i18n?.defaultLocale\n\n    this[Internal].url.pathname = info.pathname\n    this[Internal].defaultLocale = defaultLocale\n    this[Internal].basePath = info.basePath ?? ''\n    this[Internal].buildId = info.buildId\n    this[Internal].locale = info.locale ?? defaultLocale\n    this[Internal].trailingSlash = info.trailingSlash\n  }\n\n  private formatPathname() {\n    return formatNextPathnameInfo({\n      basePath: this[Internal].basePath,\n      buildId: this[Internal].buildId,\n      defaultLocale: !this[Internal].options.forceLocale\n        ? this[Internal].defaultLocale\n        : undefined,\n      locale: this[Internal].locale,\n      pathname: this[Internal].url.pathname,\n      trailingSlash: this[Internal].trailingSlash,\n    })\n  }\n\n  private formatSearch() {\n    return this[Internal].url.search\n  }\n\n  public get buildId() {\n    return this[Internal].buildId\n  }\n\n  public set buildId(buildId: string | undefined) {\n    this[Internal].buildId = buildId\n  }\n\n  public get locale() {\n    return this[Internal].locale ?? ''\n  }\n\n  public set locale(locale: string) {\n    if (\n      !this[Internal].locale ||\n      !this[Internal].options.nextConfig?.i18n?.locales.includes(locale)\n    ) {\n      throw new TypeError(\n        `The NextURL configuration includes no locale \"${locale}\"`\n      )\n    }\n\n    this[Internal].locale = locale\n  }\n\n  get defaultLocale() {\n    return this[Internal].defaultLocale\n  }\n\n  get domainLocale() {\n    return this[Internal].domainLocale\n  }\n\n  get searchParams() {\n    return this[Internal].url.searchParams\n  }\n\n  get host() {\n    return this[Internal].url.host\n  }\n\n  set host(value: string) {\n    this[Internal].url.host = value\n  }\n\n  get hostname() {\n    return this[Internal].url.hostname\n  }\n\n  set hostname(value: string) {\n    this[Internal].url.hostname = value\n  }\n\n  get port() {\n    return this[Internal].url.port\n  }\n\n  set port(value: string) {\n    this[Internal].url.port = value\n  }\n\n  get protocol() {\n    return this[Internal].url.protocol\n  }\n\n  set protocol(value: string) {\n    this[Internal].url.protocol = value\n  }\n\n  get href() {\n    const pathname = this.formatPathname()\n    const search = this.formatSearch()\n    return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`\n  }\n\n  set href(url: string) {\n    this[Internal].url = parseURL(url)\n    this.analyze()\n  }\n\n  get origin() {\n    return this[Internal].url.origin\n  }\n\n  get pathname() {\n    return this[Internal].url.pathname\n  }\n\n  set pathname(value: string) {\n    this[Internal].url.pathname = value\n  }\n\n  get hash() {\n    return this[Internal].url.hash\n  }\n\n  set hash(value: string) {\n    this[Internal].url.hash = value\n  }\n\n  get search() {\n    return this[Internal].url.search\n  }\n\n  set search(value: string) {\n    this[Internal].url.search = value\n  }\n\n  get password() {\n    return this[Internal].url.password\n  }\n\n  set password(value: string) {\n    this[Internal].url.password = value\n  }\n\n  get username() {\n    return this[Internal].url.username\n  }\n\n  set username(value: string) {\n    this[Internal].url.username = value\n  }\n\n  get basePath() {\n    return this[Internal].basePath\n  }\n\n  set basePath(value: string) {\n    this[Internal].basePath = value.startsWith('/') ? value : `/${value}`\n  }\n\n  toString() {\n    return this.href\n  }\n\n  toJSON() {\n    return this.href\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      href: this.href,\n      origin: this.origin,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash,\n    }\n  }\n\n  clone() {\n    return new NextURL(String(this), this[Internal].options)\n  }\n}\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","export class PageSignatureError extends Error {\n  constructor({ page }: { page: string }) {\n    super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `)\n  }\n}\n\nexport class RemovedPageError extends Error {\n  constructor() {\n    super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `)\n  }\n}\n\nexport class RemovedUAError extends Error {\n  constructor() {\n    super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `)\n  }\n}\n","import type { I18NConfig } from '../../config-shared'\nimport type { RequestData } from '../types'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { RemovedUAError, RemovedPageError } from '../error'\nimport { RequestCookies } from './cookies'\n\nexport const INTERNALS = Symbol('internal request')\n\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */\nexport class NextRequest extends Request {\n  [INTERNALS]: {\n    cookies: RequestCookies\n    geo: RequestData['geo']\n    ip?: string\n    url: string\n    nextUrl: NextURL\n  }\n\n  constructor(input: URL | RequestInfo, init: RequestInit = {}) {\n    const url =\n      typeof input !== 'string' && 'url' in input ? input.url : String(input)\n    validateURL(url)\n    if (input instanceof Request) super(input, init)\n    else super(url, init)\n    const nextUrl = new NextURL(url, {\n      headers: toNodeOutgoingHttpHeaders(this.headers),\n      nextConfig: init.nextConfig,\n    })\n    this[INTERNALS] = {\n      cookies: new RequestCookies(this.headers),\n      geo: init.geo || {},\n      ip: init.ip,\n      nextUrl,\n      url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        ? url\n        : nextUrl.toString(),\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      geo: this.geo,\n      ip: this.ip,\n      nextUrl: this.nextUrl,\n      url: this.url,\n      // rest of props come from Request\n      bodyUsed: this.bodyUsed,\n      cache: this.cache,\n      credentials: this.credentials,\n      destination: this.destination,\n      headers: Object.fromEntries(this.headers),\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      method: this.method,\n      mode: this.mode,\n      redirect: this.redirect,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      signal: this.signal,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  public get geo() {\n    return this[INTERNALS].geo\n  }\n\n  public get ip() {\n    return this[INTERNALS].ip\n  }\n\n  public get nextUrl() {\n    return this[INTERNALS].nextUrl\n  }\n\n  /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */\n  public get page() {\n    throw new RemovedPageError()\n  }\n\n  /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */\n  public get ua() {\n    throw new RemovedUAError()\n  }\n\n  public get url() {\n    return this[INTERNALS].url\n  }\n}\n\nexport interface RequestInit extends globalThis.RequestInit {\n  geo?: {\n    city?: string\n    country?: string\n    region?: string\n  }\n  ip?: string\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  signal?: AbortSignal\n}\n","import type { BaseNextRequest, BaseNextResponse } from './'\nimport type { NodeNextRequest, NodeNextResponse } from './node'\nimport type { WebNextRequest, WebNextResponse } from './web'\n\n/**\n * This file provides some helpers that should be used in conjunction with\n * explicit environment checks. When combined with the environment checks, it\n * will ensure that the correct typings are used as well as enable code\n * elimination.\n */\n\n/**\n * Type guard to determine if a request is a WebNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base request is a WebNextRequest.\n */\nexport const isWebNextRequest = (req: BaseNextRequest): req is WebNextRequest =>\n  process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a response is a WebNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base response is a WebNextResponse.\n */\nexport const isWebNextResponse = (\n  res: BaseNextResponse\n): res is WebNextResponse => process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a request is a NodeNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base request is a NodeNextRequest.\n */\nexport const isNodeNextRequest = (\n  req: BaseNextRequest\n): req is NodeNextRequest => process.env.NEXT_RUNTIME !== 'edge'\n\n/**\n * Type guard to determine if a response is a NodeNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base response is a NodeNextResponse.\n */\nexport const isNodeNextResponse = (\n  res: BaseNextResponse\n): res is NodeNextResponse => process.env.NEXT_RUNTIME !== 'edge'\n","import type { BaseNextRequest } from '../../../base-http'\nimport type { NodeNextRequest } from '../../../base-http/node'\nimport type { WebNextRequest } from '../../../base-http/web'\nimport type { Writable } from 'node:stream'\n\nimport { getRequestMeta } from '../../../request-meta'\nimport { fromNodeOutgoingHttpHeaders } from '../../utils'\nimport { NextRequest } from '../request'\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers'\n\nexport const ResponseAbortedName = 'ResponseAborted'\nexport class ResponseAborted extends Error {\n  public readonly name = ResponseAbortedName\n}\n\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */\nexport function createAbortController(response: Writable): AbortController {\n  const controller = new AbortController()\n\n  // If `finish` fires first, then `res.end()` has been called and the close is\n  // just us finishing the stream on our side. If `close` fires first, then we\n  // know the client disconnected before we finished.\n  response.once('close', () => {\n    if (response.writableFinished) return\n\n    controller.abort(new ResponseAborted())\n  })\n\n  return controller\n}\n\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */\nexport function signalFromNodeResponse(response: Writable): AbortSignal {\n  const { errored, destroyed } = response\n  if (errored || destroyed) {\n    return AbortSignal.abort(errored ?? new ResponseAborted())\n  }\n\n  const { signal } = createAbortController(response)\n  return signal\n}\n\nexport class NextRequestAdapter {\n  public static fromBaseNextRequest(\n    request: BaseNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME === 'edge' &&\n      isWebNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromWebNextRequest(request)\n    } else if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME !== 'edge' &&\n      isNodeNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromNodeNextRequest(request, signal)\n    } else {\n      throw new Error('Invariant: Unsupported NextRequest type')\n    }\n  }\n\n  public static fromNodeNextRequest(\n    request: NodeNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: BodyInit | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n      // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n      body = request.body\n    }\n\n    let url: URL\n    if (request.url.startsWith('http')) {\n      url = new URL(request.url)\n    } else {\n      // Grab the full URL from the request metadata.\n      const base = getRequestMeta(request, 'initURL')\n      if (!base || !base.startsWith('http')) {\n        // Because the URL construction relies on the fact that the URL provided\n        // is absolute, we need to provide a base URL. We can't use the request\n        // URL because it's relative, so we use a dummy URL instead.\n        url = new URL(request.url, 'http://n')\n      } else {\n        url = new URL(request.url, base)\n      }\n    }\n\n    return new NextRequest(url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      // @ts-expect-error - see https://github.com/whatwg/fetch/pull/1457\n      duplex: 'half',\n      signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n\n  public static fromWebNextRequest(request: WebNextRequest): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: ReadableStream | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n      body = request.body\n    }\n\n    return new NextRequest(request.url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      // @ts-expect-error - see https://github.com/whatwg/fetch/pull/1457\n      duplex: 'half',\n      signal: request.request.signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(request.request.signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n}\n","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n","// Combined load times for loading client components\nlet clientComponentLoadStart = 0\nlet clientComponentLoadTimes = 0\nlet clientComponentLoadCount = 0\n\nexport function wrapClientComponentLoader(ComponentMod: any) {\n  if (!('performance' in globalThis)) {\n    return ComponentMod.__next_app__\n  }\n\n  return {\n    require: (...args: any[]) => {\n      const startTime = performance.now()\n\n      if (clientComponentLoadStart === 0) {\n        clientComponentLoadStart = startTime\n      }\n\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.require(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n    loadChunk: (...args: any[]) => {\n      const startTime = performance.now()\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.loadChunk(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n  }\n}\n\nexport function getClientComponentLoaderMetrics(\n  options: { reset?: boolean } = {}\n) {\n  const metrics =\n    clientComponentLoadStart === 0\n      ? undefined\n      : {\n          clientComponentLoadStart,\n          clientComponentLoadTimes,\n          clientComponentLoadCount,\n        }\n\n  if (options.reset) {\n    clientComponentLoadStart = 0\n    clientComponentLoadTimes = 0\n    clientComponentLoadCount = 0\n  }\n\n  return metrics\n}\n","import type { ServerResponse } from 'node:http'\n\nimport {\n  ResponseAbortedName,\n  createAbortController,\n} from './web/spec-extension/adapters/next-request'\nimport { DetachedPromise } from '../lib/detached-promise'\nimport { getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger'\n\nexport function isAbortError(e: any): e is Error & { name: 'AbortError' } {\n  return e?.name === 'AbortError' || e?.name === ResponseAbortedName\n}\n\nfunction createWriterFromResponse(\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n): WritableStream<Uint8Array> {\n  let started = false\n\n  // Create a promise that will resolve once the response has drained. See\n  // https://nodejs.org/api/stream.html#stream_event_drain\n  let drained = new DetachedPromise<void>()\n  function onDrain() {\n    drained.resolve()\n  }\n  res.on('drain', onDrain)\n\n  // If the finish event fires, it means we shouldn't block and wait for the\n  // drain event.\n  res.once('close', () => {\n    res.off('drain', onDrain)\n    drained.resolve()\n  })\n\n  // Create a promise that will resolve once the response has finished. See\n  // https://nodejs.org/api/http.html#event-finish_1\n  const finished = new DetachedPromise<void>()\n  res.once('finish', () => {\n    finished.resolve()\n  })\n\n  // Create a writable stream that will write to the response.\n  return new WritableStream<Uint8Array>({\n    write: async (chunk) => {\n      // You'd think we'd want to use `start` instead of placing this in `write`\n      // but this ensures that we don't actually flush the headers until we've\n      // started writing chunks.\n      if (!started) {\n        started = true\n\n        if (\n          'performance' in globalThis &&\n          process.env.NEXT_OTEL_PERFORMANCE_PREFIX\n        ) {\n          const metrics = getClientComponentLoaderMetrics()\n          if (metrics) {\n            performance.measure(\n              `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`,\n              {\n                start: metrics.clientComponentLoadStart,\n                end:\n                  metrics.clientComponentLoadStart +\n                  metrics.clientComponentLoadTimes,\n              }\n            )\n          }\n        }\n\n        res.flushHeaders()\n        getTracer().trace(\n          NextNodeServerSpan.startResponse,\n          {\n            spanName: 'start response',\n          },\n          () => undefined\n        )\n      }\n\n      try {\n        const ok = res.write(chunk)\n\n        // Added by the `compression` middleware, this is a function that will\n        // flush the partially-compressed response to the client.\n        if ('flush' in res && typeof res.flush === 'function') {\n          res.flush()\n        }\n\n        // If the write returns false, it means there's some backpressure, so\n        // wait until it's streamed before continuing.\n        if (!ok) {\n          await drained.promise\n\n          // Reset the drained promise so that we can wait for the next drain event.\n          drained = new DetachedPromise<void>()\n        }\n      } catch (err) {\n        res.end()\n        throw new Error('failed to write chunk to response', { cause: err })\n      }\n    },\n    abort: (err) => {\n      if (res.writableFinished) return\n\n      res.destroy(err)\n    },\n    close: async () => {\n      // if a waitUntil promise was passed, wait for it to resolve before\n      // ending the response.\n      if (waitUntilForEnd) {\n        await waitUntilForEnd\n      }\n\n      if (res.writableFinished) return\n\n      res.end()\n      return finished.promise\n    },\n  })\n}\n\nexport async function pipeToNodeResponse(\n  readable: ReadableStream<Uint8Array>,\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n) {\n  try {\n    // If the response has already errored, then just return now.\n    const { errored, destroyed } = res\n    if (errored || destroyed) return\n\n    // Create a new AbortController so that we can abort the readable if the\n    // client disconnects.\n    const controller = createAbortController(res)\n\n    const writer = createWriterFromResponse(res, waitUntilForEnd)\n\n    await readable.pipeTo(writer, { signal: controller.signal })\n  } catch (err: any) {\n    // If this isn't related to an abort error, re-throw it.\n    if (isAbortError(err)) return\n\n    throw new Error('failed to pipe response', { cause: err })\n  }\n}\n","import type { OutgoingHttpHeaders, ServerResponse } from 'http'\nimport type { Revalidate } from './lib/revalidate'\nimport type { FetchMetrics } from './base-http'\n\nimport {\n  chainStreams,\n  streamFromBuffer,\n  streamFromString,\n  streamToBuffer,\n  streamToString,\n} from './stream-utils/node-web-streams-helper'\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable'\n\ntype ContentTypeOption = string | undefined\n\nexport type AppPageRenderResultMetadata = {\n  flightData?: Buffer\n  revalidate?: Revalidate\n  staticBailoutInfo?: {\n    stack?: string\n    description?: string\n  }\n\n  /**\n   * The postponed state if the render had postponed and needs to be resumed.\n   */\n  postponed?: string\n\n  /**\n   * The headers to set on the response that were added by the render.\n   */\n  headers?: OutgoingHttpHeaders\n  fetchTags?: string\n  fetchMetrics?: FetchMetrics\n}\n\nexport type PagesRenderResultMetadata = {\n  pageData?: any\n  revalidate?: Revalidate\n  assetQueryString?: string\n  isNotFound?: boolean\n  isRedirect?: boolean\n}\n\nexport type StaticRenderResultMetadata = {}\n\nexport type RenderResultMetadata = AppPageRenderResultMetadata &\n  PagesRenderResultMetadata &\n  StaticRenderResultMetadata\n\nexport type RenderResultResponse =\n  | ReadableStream<Uint8Array>[]\n  | ReadableStream<Uint8Array>\n  | string\n  | Buffer\n  | null\n\nexport type RenderResultOptions<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> = {\n  contentType?: ContentTypeOption\n  waitUntil?: Promise<unknown>\n  metadata: Metadata\n}\n\nexport default class RenderResult<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> {\n  /**\n   * The detected content type for the response. This is used to set the\n   * `Content-Type` header.\n   */\n  public readonly contentType: ContentTypeOption\n\n  /**\n   * The metadata for the response. This is used to set the revalidation times\n   * and other metadata.\n   */\n  public readonly metadata: Readonly<Metadata>\n\n  /**\n   * The response itself. This can be a string, a stream, or null. If it's a\n   * string, then it's a static response. If it's a stream, then it's a\n   * dynamic response. If it's null, then the response was not found or was\n   * already sent.\n   */\n  private response: RenderResultResponse\n\n  /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */\n  public static fromStatic(value: string | Buffer) {\n    return new RenderResult<StaticRenderResultMetadata>(value, { metadata: {} })\n  }\n\n  private readonly waitUntil?: Promise<unknown>\n\n  constructor(\n    response: RenderResultResponse,\n    { contentType, waitUntil, metadata }: RenderResultOptions<Metadata>\n  ) {\n    this.response = response\n    this.contentType = contentType\n    this.metadata = metadata\n    this.waitUntil = waitUntil\n  }\n\n  public assignMetadata(metadata: Metadata) {\n    Object.assign(this.metadata, metadata)\n  }\n\n  /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */\n  public get isNull(): boolean {\n    return this.response === null\n  }\n\n  /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */\n  public get isDynamic(): boolean {\n    return typeof this.response !== 'string'\n  }\n\n  public toUnchunkedBuffer(stream?: false): Buffer\n  public toUnchunkedBuffer(stream: true): Promise<Buffer>\n  public toUnchunkedBuffer(stream = false): Promise<Buffer> | Buffer {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be unchunked')\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new Error(\n          'Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToBuffer(this.readable)\n    }\n\n    return Buffer.from(this.response)\n  }\n\n  /**\n   * Returns the response if it is a string. If the page was dynamic, this will\n   * return a promise if the `stream` option is true, or it will throw an error.\n   *\n   * @param stream Whether or not to return a promise if the response is dynamic\n   * @returns The response as a string\n   */\n  public toUnchunkedString(stream?: false): string\n  public toUnchunkedString(stream: true): Promise<string>\n  public toUnchunkedString(stream = false): Promise<string> | string {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be unchunked')\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new Error(\n          'Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToString(this.readable)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */\n  private get readable(): ReadableStream<Uint8Array> {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be streamed')\n    }\n    if (typeof this.response === 'string') {\n      throw new Error('Invariant: static responses cannot be streamed')\n    }\n\n    if (Buffer.isBuffer(this.response)) {\n      return streamFromBuffer(this.response)\n    }\n\n    // If the response is an array of streams, then chain them together.\n    if (Array.isArray(this.response)) {\n      return chainStreams(...this.response)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */\n  public chain(readable: ReadableStream<Uint8Array>) {\n    if (this.response === null) {\n      throw new Error('Invariant: response is null. This is a bug in Next.js')\n    }\n\n    // If the response is not an array of streams already, make it one.\n    let responses: ReadableStream<Uint8Array>[]\n    if (typeof this.response === 'string') {\n      responses = [streamFromString(this.response)]\n    } else if (Array.isArray(this.response)) {\n      responses = this.response\n    } else if (Buffer.isBuffer(this.response)) {\n      responses = [streamFromBuffer(this.response)]\n    } else {\n      responses = [this.response]\n    }\n\n    // Add the new stream to the array.\n    responses.push(readable)\n\n    // Update the response.\n    this.response = responses\n  }\n\n  /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */\n  public async pipeTo(writable: WritableStream<Uint8Array>): Promise<void> {\n    try {\n      await this.readable.pipeTo(writable, {\n        // We want to close the writable stream ourselves so that we can wait\n        // for the waitUntil promise to resolve before closing it. If an error\n        // is encountered, we'll abort the writable stream if we swallowed the\n        // error.\n        preventClose: true,\n      })\n\n      // If there is a waitUntil promise, wait for it to resolve before\n      // closing the writable stream.\n      if (this.waitUntil) await this.waitUntil\n\n      // Close the writable stream.\n      await writable.close()\n    } catch (err) {\n      // If this is an abort error, we should abort the writable stream (as we\n      // took ownership of it when we started piping). We don't need to re-throw\n      // because we handled the error.\n      if (isAbortError(err)) {\n        // Abort the writable stream if an error is encountered.\n        await writable.abort(err)\n\n        return\n      }\n\n      // We're not aborting the writer here as when this method throws it's not\n      // clear as to how so the caller should assume it's their responsibility\n      // to clean up the writer.\n      throw err\n    }\n  }\n\n  /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */\n  public async pipeToNodeResponse(res: ServerResponse) {\n    await pipeToNodeResponse(this.readable, res, this.waitUntil)\n  }\n}\n","import { isDynamicRoute } from '../router/utils'\nimport { normalizePathSep } from './normalize-path-sep'\n\n/**\n * Performs the opposite transformation of `normalizePagePath`. Note that\n * this function is not idempotent either in cases where there are multiple\n * leading `/index` for the page. Examples:\n *  - `/index` -> `/`\n *  - `/index/foo` -> `/foo`\n *  - `/index/index` -> `/index`\n */\nexport function denormalizePagePath(page: string) {\n  let _page = normalizePathSep(page)\n  return _page.startsWith('/index/') && !isDynamicRoute(_page)\n    ? _page.slice(6)\n    : _page !== '/index'\n      ? _page\n      : '/'\n}\n","/**\n * For a given page path, this function ensures that there is no backslash\n * escaping slashes in the path. Example:\n *  - `foo\\/bar\\/baz` -> `foo/bar/baz`\n */\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname?: string | null,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../../server/lib/interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nconst PARAMETER_PATTERN = /\\[((?:\\[.*\\])|.+)\\]/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[1])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nfunction parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n\nfunction getParametrizedRoute(route: string) {\n  const segments = removeTrailingSlash(route).slice(1).split('/')\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n  return {\n    parameterizedRoute: segments\n      .map((segment) => {\n        const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n          segment.startsWith(m)\n        )\n        const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n        if (markerMatch && paramMatches) {\n          const { key, optional, repeat } = parseMatchedParameter(\n            paramMatches[1]\n          )\n          groups[key] = { pos: groupIndex++, repeat, optional }\n          return `/${escapeStringRegexp(markerMatch)}([^/]+?)`\n        } else if (paramMatches) {\n          const { key, repeat, optional } = parseMatchedParameter(\n            paramMatches[1]\n          )\n          groups[key] = { pos: groupIndex++, repeat, optional }\n          return repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n        } else {\n          return `/${escapeStringRegexp(segment)}`\n        }\n      })\n      .join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(normalizedRoute: string): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(normalizedRoute)\n  return {\n    re: new RegExp(`^${parameterizedRoute}(?:/)?$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  return repeat\n    ? optional\n      ? `(?:/${interceptionPrefix}(?<${cleanedKey}>.+?))?`\n      : `/${interceptionPrefix}(?<${cleanedKey}>.+?)`\n    : `/${interceptionPrefix}(?<${cleanedKey}>[^/]+?)`\n}\n\nfunction getNamedParametrizedRoute(route: string, prefixRouteKeys: boolean) {\n  const segments = removeTrailingSlash(route).slice(1).split('/')\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n  return {\n    namedParameterizedRoute: segments\n      .map((segment) => {\n        const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n          segment.startsWith(m)\n        )\n        const paramMatches = segment.match(/\\[((?:\\[.*\\])|.+)\\]/) // Check for parameters\n\n        if (hasInterceptionMarker && paramMatches) {\n          const [usedMarker] = segment.split(paramMatches[0])\n\n          return getSafeKeyFromSegment({\n            getSafeRouteKey,\n            interceptionMarker: usedMarker,\n            segment: paramMatches[1],\n            routeKeys,\n            keyPrefix: prefixRouteKeys\n              ? NEXT_INTERCEPTION_MARKER_PREFIX\n              : undefined,\n          })\n        } else if (paramMatches) {\n          return getSafeKeyFromSegment({\n            getSafeRouteKey,\n            segment: paramMatches[1],\n            routeKeys,\n            keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n          })\n        } else {\n          return `/${escapeStringRegexp(segment)}`\n        }\n      })\n      .join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  prefixRouteKey: boolean\n) {\n  const result = getNamedParametrizedRoute(normalizedRoute, prefixRouteKey)\n  return {\n    ...getRouteRegex(normalizedRoute),\n    namedRegex: `^${result.namedParameterizedRoute}(?:/)?$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(normalizedRoute)\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { Params } from './route-matcher'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { compile, pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from '../../../../server/lib/interception-routes'\nimport { NEXT_RSC_UNION_QUERY } from '../../../../client/components/app-router-headers'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value: undefined | string\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return compile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const query = Object.assign({}, args.query)\n  delete query.__nextLocale\n  delete query.__nextDefaultLocale\n  delete query.__nextDataReq\n  delete query.__nextInferredLocaleFromDefault\n  delete query[NEXT_RSC_UNION_QUERY]\n\n  let escapedDestination = args.destination\n\n  for (const param of Object.keys({ ...args.params, ...query })) {\n    escapedDestination = escapeSegment(escapedDestination, param)\n  }\n\n  const parsedDestination = parseUrl(escapedDestination)\n  const destQuery = parsedDestination.query\n  const destPath = unescapeSegments(\n    `${parsedDestination.pathname!}${parsedDestination.hash || ''}`\n  )\n  const destHostname = unescapeSegments(parsedDestination.hostname || '')\n  const destPathParamKeys: Key[] = []\n  const destHostnameParamKeys: Key[] = []\n  pathToRegexp(destPath, destPathParamKeys)\n  pathToRegexp(destHostname, destHostnameParamKeys)\n\n  const destParams: (string | number)[] = []\n\n  destPathParamKeys.forEach((key) => destParams.push(key.name))\n  destHostnameParamKeys.forEach((key) => destParams.push(key.name))\n\n  const destPathCompiler = compile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  const destHostnameCompiler = compile(destHostname, { validate: false })\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        args.params['0'] = marker\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    parsedDestination.hostname = destHostnameCompiler(args.params)\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    delete (parsedDestination as any).search\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","import { isPlainObject } from '../shared/lib/is-plain-object'\n\n// We allow some additional attached properties for Errors\nexport interface NextError extends Error {\n  type?: string\n  page?: string\n  code?: string | number\n  cancelled?: boolean\n  digest?: number\n}\n\nexport default function isError(err: unknown): err is NextError {\n  return (\n    typeof err === 'object' && err !== null && 'name' in err && 'message' in err\n  )\n}\n\nexport function getProperError(err: unknown): Error {\n  if (isError(err)) {\n    return err\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // provide better error for case where `throw undefined`\n    // is called in development\n    if (typeof err === 'undefined') {\n      return new Error(\n        'An undefined error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n\n    if (err === null) {\n      return new Error(\n        'A null error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n  }\n\n  return new Error(isPlainObject(err) ? JSON.stringify(err) : err + '')\n}\n","export function getObjectClassLabel(value: any): string {\n  return Object.prototype.toString.call(value)\n}\n\nexport function isPlainObject(value: any): boolean {\n  if (getObjectClassLabel(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n\n  /**\n   * this used to be previously:\n   *\n   * `return prototype === null || prototype === Object.prototype`\n   *\n   * but Edge Runtime expose Object from vm, being that kind of type-checking wrongly fail.\n   *\n   * It was changed to the current implementation since it's resilient to serialization.\n   */\n  return prototype === null || prototype.hasOwnProperty('isPrototypeOf')\n}\n","import type { I18NProvider } from '../lib/i18n-provider'\nimport type { Normalizer } from './normalizer'\n\n/**\n * Normalizes the pathname by removing the locale prefix if any.\n */\nexport class LocaleRouteNormalizer implements Normalizer {\n  constructor(private readonly provider: I18NProvider) {}\n\n  /**\n   * Normalizes the pathname by removing the locale prefix if any.\n   *\n   * @param pathname The pathname to normalize.\n   * @returns The pathname without the locale prefix (if any).\n   */\n  public normalize(pathname: string): string {\n    const match = this.provider.analyze(pathname)\n    return match.pathname\n  }\n}\n","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n","import type { RouteMatch } from '../route-matches/route-match'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\n\nimport { isDynamicRoute } from '../../shared/lib/router/utils'\nimport {\n  getRouteMatcher,\n  type RouteMatchFn,\n} from '../../shared/lib/router/utils/route-matcher'\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex'\n\ntype RouteMatchResult = {\n  params?: Record<string, string | string[]>\n}\n\nexport class RouteMatcher<D extends RouteDefinition = RouteDefinition> {\n  private readonly dynamic?: RouteMatchFn\n\n  /**\n   * When set, this is an array of all the other matchers that are duplicates of\n   * this one. This is used by the managers to warn the users about possible\n   * duplicate matches on routes.\n   */\n  public duplicated?: Array<RouteMatcher>\n\n  constructor(public readonly definition: D) {\n    if (isDynamicRoute(definition.pathname)) {\n      this.dynamic = getRouteMatcher(getRouteRegex(definition.pathname))\n    }\n  }\n\n  /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part.\n   */\n  public get identity(): string {\n    return this.definition.pathname\n  }\n\n  public get isDynamic() {\n    return this.dynamic !== undefined\n  }\n\n  public match(pathname: string): RouteMatch<D> | null {\n    const result = this.test(pathname)\n    if (!result) return null\n\n    return { definition: this.definition, params: result.params }\n  }\n\n  public test(pathname: string): RouteMatchResult | null {\n    if (this.dynamic) {\n      const params = this.dynamic(pathname)\n      if (!params) return null\n\n      return { params }\n    }\n\n    if (pathname === this.definition.pathname) {\n      return {}\n    }\n\n    return null\n  }\n}\n","import type { LocaleAnalysisResult } from '../lib/i18n-provider'\nimport type { LocaleRouteDefinition } from '../route-definitions/locale-route-definition'\nimport type { LocaleRouteMatch } from '../route-matches/locale-route-match'\nimport { RouteMatcher } from './route-matcher'\n\nexport type LocaleMatcherMatchOptions = {\n  /**\n   * If defined, this indicates to the matcher that the request should be\n   * treated as locale-aware. If this is undefined, it means that this\n   * application was not configured for additional locales.\n   */\n  i18n?: LocaleAnalysisResult\n}\n\nexport class LocaleRouteMatcher<\n  D extends LocaleRouteDefinition = LocaleRouteDefinition,\n> extends RouteMatcher<D> {\n  /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part as well.\n   */\n  public get identity(): string {\n    return `${this.definition.pathname}?__nextLocale=${this.definition.i18n?.locale}`\n  }\n\n  /**\n   * Match will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */\n  public match(\n    pathname: string,\n    options?: LocaleMatcherMatchOptions\n  ): LocaleRouteMatch<D> | null {\n    // This is like the parent `match` method but instead this injects the\n    // additional `options` into the\n    const result = this.test(pathname, options)\n    if (!result) return null\n\n    return {\n      definition: this.definition,\n      params: result.params,\n      detectedLocale:\n        // If the options have a detected locale, then use that, otherwise use\n        // the route's locale.\n        options?.i18n?.detectedLocale ?? this.definition.i18n?.locale,\n    }\n  }\n\n  /**\n   * Test will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */\n  public test(pathname: string, options?: LocaleMatcherMatchOptions) {\n    // If this route has locale information and we have detected a locale, then\n    // we need to compare the detected locale to the route's locale.\n    if (this.definition.i18n && options?.i18n) {\n      // If we have detected a locale and it does not match this route's locale,\n      // then this isn't a match!\n      if (\n        this.definition.i18n.locale &&\n        options.i18n.detectedLocale &&\n        this.definition.i18n.locale !== options.i18n.detectedLocale\n      ) {\n        return null\n      }\n\n      // Perform regular matching against the locale stripped pathname now, the\n      // locale information matches!\n      return super.test(options.i18n.pathname)\n    }\n\n    // If we don't have locale information, then we can just perform regular\n    // matching.\n    return super.test(pathname)\n  }\n}\n","import { isDynamicRoute } from '../../shared/lib/router/utils'\nimport type { RouteKind } from '../route-kind'\nimport type { RouteMatch } from '../route-matches/route-match'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { RouteMatcherProvider } from '../route-matcher-providers/route-matcher-provider'\nimport type { RouteMatcher } from '../route-matchers/route-matcher'\nimport type { MatchOptions, RouteMatcherManager } from './route-matcher-manager'\nimport { getSortedRoutes } from '../../shared/lib/router/utils'\nimport { LocaleRouteMatcher } from '../route-matchers/locale-route-matcher'\nimport { ensureLeadingSlash } from '../../shared/lib/page-path/ensure-leading-slash'\nimport { DetachedPromise } from '../../lib/detached-promise'\n\ninterface RouteMatchers {\n  static: ReadonlyArray<RouteMatcher>\n  dynamic: ReadonlyArray<RouteMatcher>\n  duplicates: Record<string, ReadonlyArray<RouteMatcher>>\n}\n\nexport class DefaultRouteMatcherManager implements RouteMatcherManager {\n  private readonly providers: Array<RouteMatcherProvider> = []\n  protected readonly matchers: RouteMatchers = {\n    static: [],\n    dynamic: [],\n    duplicates: {},\n  }\n  private lastCompilationID = this.compilationID\n\n  /**\n   * When this value changes, it indicates that a change has been introduced\n   * that requires recompilation.\n   */\n  private get compilationID() {\n    return this.providers.length\n  }\n\n  private waitTillReadyPromise?: Promise<void>\n  public async waitTillReady(): Promise<void> {\n    if (this.waitTillReadyPromise) {\n      await this.waitTillReadyPromise\n      delete this.waitTillReadyPromise\n    }\n  }\n\n  private previousMatchers: ReadonlyArray<RouteMatcher> = []\n  public async reload() {\n    const { promise, resolve, reject } = new DetachedPromise<void>()\n    this.waitTillReadyPromise = promise\n\n    // Grab the compilation ID for this run, we'll verify it at the end to\n    // ensure that if any routes were added before reloading is finished that\n    // we error out.\n    const compilationID = this.compilationID\n\n    try {\n      // Collect all the matchers from each provider.\n      const matchers: Array<RouteMatcher> = []\n\n      // Get all the providers matchers.\n      const providersMatchers: ReadonlyArray<ReadonlyArray<RouteMatcher>> =\n        await Promise.all(this.providers.map((provider) => provider.matchers()))\n\n      // Use this to detect duplicate pathnames.\n      const all = new Map<string, RouteMatcher>()\n      const duplicates: Record<string, RouteMatcher[]> = {}\n      for (const providerMatchers of providersMatchers) {\n        for (const matcher of providerMatchers) {\n          // Reset duplicated matches when reloading from pages conflicting state.\n          if (matcher.duplicated) delete matcher.duplicated\n          // Test to see if the matcher being added is a duplicate.\n          const duplicate = all.get(matcher.definition.pathname)\n          if (duplicate) {\n            // This looks a little weird, but essentially if the pathname\n            // already exists in the duplicates map, then we got that array\n            // reference. Otherwise, we create a new array with the original\n            // duplicate first. Then we push the new matcher into the duplicate\n            // array, and reset it to the duplicates object (which may be a\n            // no-op if the pathname already existed in the duplicates object).\n            // Then we set the array of duplicates on both the original\n            // duplicate object and the new one, so we can keep them in sync.\n            // If a new duplicate is found, and it matches an existing pathname,\n            // the retrieval of the `other` will actually return the array\n            // reference used by all other duplicates. This is why ReadonlyArray\n            // is so important! Array's are always references!\n            const others = duplicates[matcher.definition.pathname] ?? [\n              duplicate,\n            ]\n            others.push(matcher)\n            duplicates[matcher.definition.pathname] = others\n\n            // Add duplicated details to each route.\n            duplicate.duplicated = others\n            matcher.duplicated = others\n\n            // TODO: see if we should error for duplicates in production?\n          }\n\n          matchers.push(matcher)\n\n          // Add the matcher's pathname to the set.\n          all.set(matcher.definition.pathname, matcher)\n        }\n      }\n\n      // Update the duplicate matchers. This is used in the development manager\n      // to warn about duplicates.\n      this.matchers.duplicates = duplicates\n\n      // If the cache is the same as what we just parsed, we can exit now. We\n      // can tell by using the `===` which compares object identity, which for\n      // the manifest matchers, will return the same matcher each time.\n      if (\n        this.previousMatchers.length === matchers.length &&\n        this.previousMatchers.every(\n          (cachedMatcher, index) => cachedMatcher === matchers[index]\n        )\n      ) {\n        return\n      }\n      this.previousMatchers = matchers\n\n      // For matchers that are for static routes, filter them now.\n      this.matchers.static = matchers.filter((matcher) => !matcher.isDynamic)\n\n      // For matchers that are for dynamic routes, filter them and sort them now.\n      const dynamic = matchers.filter((matcher) => matcher.isDynamic)\n\n      // As `getSortedRoutes` only takes an array of strings, we need to create\n      // a map of the pathnames (used for sorting) and the matchers. When we\n      // have locales, there may be multiple matches for the same pathname. To\n      // handle this, we keep a map of all the indexes (in `reference`) and\n      // merge them in later.\n\n      const reference = new Map<string, number[]>()\n      const pathnames = new Array<string>()\n      for (let index = 0; index < dynamic.length; index++) {\n        // Grab the pathname from the definition.\n        const pathname = dynamic[index].definition.pathname\n\n        // Grab the index in the dynamic array, push it into the reference.\n        const indexes = reference.get(pathname) ?? []\n        indexes.push(index)\n\n        // If this is the first one set it. If it isn't, we don't need to\n        // because pushing above on the array will mutate the array already\n        // stored there because array's are always a reference!\n        if (indexes.length === 1) reference.set(pathname, indexes)\n        // Otherwise, continue, we've already added this pathname before.\n        else continue\n\n        pathnames.push(pathname)\n      }\n\n      // Sort the array of pathnames.\n      const sorted = getSortedRoutes(pathnames)\n\n      // For each of the sorted pathnames, iterate over them, grabbing the list\n      // of indexes and merging them back into the new `sortedDynamicMatchers`\n      // array. The order of the same matching pathname doesn't matter because\n      // they will have other matching characteristics (like the locale) that\n      // is considered.\n      const sortedDynamicMatchers: Array<RouteMatcher> = []\n      for (const pathname of sorted) {\n        const indexes = reference.get(pathname)\n        if (!Array.isArray(indexes)) {\n          throw new Error('Invariant: expected to find identity in indexes map')\n        }\n\n        const dynamicMatches = indexes.map((index) => dynamic[index])\n\n        sortedDynamicMatchers.push(...dynamicMatches)\n      }\n\n      this.matchers.dynamic = sortedDynamicMatchers\n\n      // This means that there was a new matcher pushed while we were waiting\n      if (this.compilationID !== compilationID) {\n        throw new Error(\n          'Invariant: expected compilation to finish before new matchers were added, possible missing await'\n        )\n      }\n    } catch (err) {\n      reject(err)\n    } finally {\n      // The compilation ID matched, so mark the complication as finished.\n      this.lastCompilationID = compilationID\n      resolve()\n    }\n  }\n\n  public push(provider: RouteMatcherProvider): void {\n    this.providers.push(provider)\n  }\n\n  public async test(pathname: string, options: MatchOptions): Promise<boolean> {\n    // See if there's a match for the pathname...\n    const match = await this.match(pathname, options)\n\n    // This default implementation only needs to check to see if there _was_ a\n    // match. The development matcher actually changes it's behavior by not\n    // recompiling the routes.\n    return match !== null\n  }\n\n  public async match(\n    pathname: string,\n    options: MatchOptions\n  ): Promise<RouteMatch<RouteDefinition<RouteKind>> | null> {\n    // \"Iterate\" over the match options. Once we found a single match, exit with\n    // it, otherwise return null below. If no match is found, the inner block\n    // won't be called.\n    for await (const match of this.matchAll(pathname, options)) {\n      return match\n    }\n\n    return null\n  }\n\n  /**\n   * This is a point for other managers to override to inject other checking\n   * behavior like duplicate route checking on a per-request basis.\n   *\n   * @param pathname the pathname to validate against\n   * @param matcher the matcher to validate/test with\n   * @returns the match if found\n   */\n  protected validate(\n    pathname: string,\n    matcher: RouteMatcher,\n    options: MatchOptions\n  ): RouteMatch | null {\n    if (matcher instanceof LocaleRouteMatcher) {\n      return matcher.match(pathname, options)\n    }\n\n    // If the locale was inferred from the default locale, then it will have\n    // already added a locale to the pathname. We need to remove it before\n    // matching because this matcher is not locale aware.\n    if (options.i18n?.inferredFromDefault) {\n      return matcher.match(options.i18n.pathname)\n    }\n\n    return matcher.match(pathname)\n  }\n\n  public async *matchAll(\n    pathname: string,\n    options: MatchOptions\n  ): AsyncGenerator<RouteMatch<RouteDefinition<RouteKind>>, null, undefined> {\n    // Guard against the matcher manager from being run before it needs to be\n    // recompiled. This was preferred to re-running the compilation here because\n    // it should be re-ran only when it changes. If a match is attempted before\n    // this is done, it indicates that there is a case where a provider is added\n    // before it was recompiled (an error). We also don't want to affect request\n    // times.\n    if (this.lastCompilationID !== this.compilationID) {\n      throw new Error(\n        'Invariant: expected routes to have been loaded before match'\n      )\n    }\n\n    // Ensure that path matching is done with a leading slash.\n    pathname = ensureLeadingSlash(pathname)\n\n    // If this pathname doesn't look like a dynamic route, and this pathname is\n    // listed in the normalized list of routes, then return it. This ensures\n    // that when a route like `/user/[id]` is encountered, it doesn't just match\n    // with the list of normalized routes.\n    if (!isDynamicRoute(pathname)) {\n      for (const matcher of this.matchers.static) {\n        const match = this.validate(pathname, matcher, options)\n        if (!match) continue\n\n        yield match\n      }\n    }\n\n    // If we should skip handling dynamic routes, exit now.\n    if (options?.skipDynamic) return null\n\n    // Loop over the dynamic matchers, yielding each match.\n    for (const matcher of this.matchers.dynamic) {\n      const match = this.validate(pathname, matcher, options)\n      if (!match) continue\n\n      yield match\n    }\n\n    // We tried direct matching against the pathname and against all the dynamic\n    // paths, so there was no match.\n    return null\n  }\n}\n","import type { Normalizer } from './normalizer'\n\n/**\n * Normalizers combines many normalizers into a single normalizer interface that\n * will normalize the inputted pathname with each normalizer in order.\n */\nexport class Normalizers implements Normalizer {\n  constructor(private readonly normalizers: Array<Normalizer> = []) {}\n\n  public push(normalizer: Normalizer) {\n    this.normalizers.push(normalizer)\n  }\n\n  public normalize(pathname: string): string {\n    return this.normalizers.reduce<string>(\n      (normalized, normalizer) => normalizer.normalize(normalized),\n      pathname\n    )\n  }\n}\n","import path from '../../shared/lib/isomorphic/path'\nimport type { Normalizer } from './normalizer'\n\nexport class PrefixingNormalizer implements Normalizer {\n  private readonly prefix: string\n\n  constructor(...prefixes: ReadonlyArray<string>) {\n    this.prefix = path.posix.join(...prefixes)\n  }\n\n  public normalize(pathname: string): string {\n    return path.posix.join(this.prefix, pathname)\n  }\n}\n","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","import { Normalizers } from '../../normalizers'\nimport type { Normalizer } from '../../normalizer'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\nimport { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path'\n\nexport class AppBundlePathNormalizer extends PrefixingNormalizer {\n  constructor() {\n    super('app')\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(normalizePagePath(page))\n  }\n}\n\nexport class DevAppBundlePathNormalizer extends Normalizers {\n  constructor(pageNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pageNormalizer,\n      // Normalize the app page to a pathname.\n      new AppBundlePathNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\n\nexport class AppFilenameNormalizer extends PrefixingNormalizer {\n  constructor(distDir: string) {\n    super(distDir, SERVER_DIRECTORY)\n  }\n\n  public normalize(manifestFilename: string): string {\n    return super.normalize(manifestFilename)\n  }\n}\n","import type { Normalizer } from './normalizer'\n\nexport function wrapNormalizerFn(fn: (pathname: string) => string): Normalizer {\n  return { normalize: fn }\n}\n","export const enum PAGE_TYPES {\n  PAGES = 'pages',\n  ROOT = 'root',\n  APP = 'app',\n}\n","import type { Normalizer } from './normalizer'\n\n/**\n * UnderscoreNormalizer replaces all instances of %5F with _.\n */\nexport class UnderscoreNormalizer implements Normalizer {\n  public normalize(pathname: string): string {\n    return pathname.replace(/%5F/g, '_')\n  }\n}\n","import { normalizeAppPath } from '../../../../shared/lib/router/utils/app-paths'\nimport { Normalizers } from '../../normalizers'\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn'\nimport { UnderscoreNormalizer } from '../../underscore-normalizer'\nimport type { Normalizer } from '../../normalizer'\n\nexport class AppPathnameNormalizer extends Normalizers {\n  constructor() {\n    super([\n      // The pathname to match should have the trailing `/page` and other route\n      // group information stripped from it.\n      wrapNormalizerFn(normalizeAppPath),\n      // The page should have the `%5F` characters replaced with `_` characters.\n      new UnderscoreNormalizer(),\n    ])\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(page)\n  }\n}\n\nexport class DevAppPathnameNormalizer extends Normalizers {\n  constructor(pageNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pageNormalizer,\n      // Normalize the app page to a pathname.\n      new AppPathnameNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import {\n  AppBundlePathNormalizer,\n  DevAppBundlePathNormalizer,\n} from './app-bundle-path-normalizer'\nimport { AppFilenameNormalizer } from './app-filename-normalizer'\nimport { DevAppPageNormalizer } from './app-page-normalizer'\nimport {\n  AppPathnameNormalizer,\n  DevAppPathnameNormalizer,\n} from './app-pathname-normalizer'\n\nexport class AppNormalizers {\n  public readonly filename: AppFilenameNormalizer\n  public readonly pathname: AppPathnameNormalizer\n  public readonly bundlePath: AppBundlePathNormalizer\n\n  constructor(distDir: string) {\n    this.filename = new AppFilenameNormalizer(distDir)\n    this.pathname = new AppPathnameNormalizer()\n    this.bundlePath = new AppBundlePathNormalizer()\n  }\n}\n\nexport class DevAppNormalizers {\n  public readonly page: DevAppPageNormalizer\n  public readonly pathname: DevAppPathnameNormalizer\n  public readonly bundlePath: DevAppBundlePathNormalizer\n\n  constructor(appDir: string, extensions: ReadonlyArray<string>) {\n    this.page = new DevAppPageNormalizer(appDir, extensions)\n    this.pathname = new DevAppPathnameNormalizer(this.page)\n    this.bundlePath = new DevAppBundlePathNormalizer(this.page)\n  }\n}\n","export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n}\n","import { RouteMatcher } from './route-matcher'\nimport type { AppPageRouteDefinition } from '../route-definitions/app-page-route-definition'\n\nexport class AppPageRouteMatcher extends RouteMatcher<AppPageRouteDefinition> {\n  public get identity(): string {\n    return `${this.definition.pathname}?__nextPage=${this.definition.page}`\n  }\n}\n","import type { RouteMatcherProvider } from '../route-matcher-provider'\nimport type { RouteMatcher } from '../../route-matchers/route-matcher'\n\ninterface LoaderComparable<D> {\n  load(): Promise<D>\n  compare(left: D, right: D): boolean\n}\n\n/**\n * This will memoize the matchers if the loaded data is comparable.\n */\nexport abstract class CachedRouteMatcherProvider<\n  M extends RouteMatcher = RouteMatcher,\n  D = any,\n> implements RouteMatcherProvider<M>\n{\n  private data?: D\n  private cached: ReadonlyArray<M> = []\n\n  constructor(private readonly loader: LoaderComparable<D>) {}\n\n  protected abstract transform(data: D): Promise<ReadonlyArray<M>>\n\n  public async matchers(): Promise<readonly M[]> {\n    const data = await this.loader.load()\n    if (!data) return []\n\n    // Return the cached matchers if the data has not changed.\n    if (this.data && this.loader.compare(this.data, data)) return this.cached\n    this.data = data\n\n    // Transform the manifest into matchers.\n    const matchers = await this.transform(data)\n\n    // Cache the matchers.\n    this.cached = matchers\n\n    return matchers\n  }\n}\n","import type { RouteMatcher } from '../route-matchers/route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { CachedRouteMatcherProvider } from './helpers/cached-route-matcher-provider'\n\nexport abstract class ManifestRouteMatcherProvider<\n  M extends RouteMatcher = RouteMatcher,\n> extends CachedRouteMatcherProvider<M, Manifest | null> {\n  constructor(manifestName: string, manifestLoader: ManifestLoader) {\n    super({\n      load: async () => manifestLoader.load(manifestName),\n      compare: (left, right) => left === right,\n    })\n  }\n}\n","import { isAppPageRoute } from '../../lib/is-app-page-route'\n\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants'\nimport { AppNormalizers } from '../normalizers/built/app'\nimport { RouteKind } from '../route-kind'\nimport { AppPageRouteMatcher } from '../route-matchers/app-page-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\n\nexport class AppPageRouteMatcherProvider extends ManifestRouteMatcherProvider<AppPageRouteMatcher> {\n  private readonly normalizers: AppNormalizers\n\n  constructor(distDir: string, manifestLoader: ManifestLoader) {\n    super(APP_PATHS_MANIFEST, manifestLoader)\n\n    this.normalizers = new AppNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<AppPageRouteMatcher>> {\n    // This matcher only matches app pages.\n    const pages = Object.keys(manifest).filter((page) => isAppPageRoute(page))\n\n    // Collect all the app paths for each page. This could include any parallel\n    // routes.\n    const allAppPaths: Record<string, string[]> = {}\n    for (const page of pages) {\n      const pathname = this.normalizers.pathname.normalize(page)\n      if (pathname in allAppPaths) allAppPaths[pathname].push(page)\n      else allAppPaths[pathname] = [page]\n    }\n\n    // Format the routes.\n    const matchers: Array<AppPageRouteMatcher> = []\n    for (const [pathname, appPaths] of Object.entries(allAppPaths)) {\n      // TODO-APP: (wyattjoh) this is a hack right now, should be more deterministic\n      const page = appPaths[0]\n\n      const filename = this.normalizers.filename.normalize(manifest[page])\n      const bundlePath = this.normalizers.bundlePath.normalize(page)\n\n      matchers.push(\n        new AppPageRouteMatcher({\n          kind: RouteKind.APP_PAGE,\n          pathname,\n          page,\n          bundlePath,\n          filename,\n          appPaths,\n        })\n      )\n    }\n\n    return matchers\n  }\n}\n","export function isAppPageRoute(route: string): boolean {\n  return route.endsWith('/page')\n}\n","import { RouteMatcher } from './route-matcher'\nimport type { AppRouteRouteDefinition } from '../route-definitions/app-route-route-definition'\n\nexport class AppRouteRouteMatcher extends RouteMatcher<AppRouteRouteDefinition> {}\n","import { isAppRouteRoute } from '../../lib/is-app-route-route'\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport { AppRouteRouteMatcher } from '../route-matchers/app-route-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport { AppNormalizers } from '../normalizers/built/app'\n\nexport class AppRouteRouteMatcherProvider extends ManifestRouteMatcherProvider<AppRouteRouteMatcher> {\n  private readonly normalizers: AppNormalizers\n\n  constructor(distDir: string, manifestLoader: ManifestLoader) {\n    super(APP_PATHS_MANIFEST, manifestLoader)\n\n    this.normalizers = new AppNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<AppRouteRouteMatcher>> {\n    // This matcher only matches app routes.\n    const pages = Object.keys(manifest).filter((page) => isAppRouteRoute(page))\n\n    // Format the routes.\n    const matchers: Array<AppRouteRouteMatcher> = []\n    for (const page of pages) {\n      const filename = this.normalizers.filename.normalize(manifest[page])\n      const pathname = this.normalizers.pathname.normalize(page)\n      const bundlePath = this.normalizers.bundlePath.normalize(page)\n\n      matchers.push(\n        new AppRouteRouteMatcher({\n          kind: RouteKind.APP_ROUTE,\n          pathname,\n          page,\n          bundlePath,\n          filename,\n        })\n      )\n    }\n\n    return matchers\n  }\n}\n","export function isAppRouteRoute(route: string): boolean {\n  return route.endsWith('/route')\n}\n","export function isAPIRoute(value?: string) {\n  return value === '/api' || Boolean(value?.startsWith('/api/'))\n}\n","import type { PagesAPIRouteDefinition } from '../route-definitions/pages-api-route-definition'\nimport { LocaleRouteMatcher } from './locale-route-matcher'\nimport { RouteMatcher } from './route-matcher'\n\nexport class PagesAPIRouteMatcher extends RouteMatcher<PagesAPIRouteDefinition> {}\n\nexport class PagesAPILocaleRouteMatcher extends LocaleRouteMatcher<PagesAPIRouteDefinition> {}\n","import { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path'\nimport type { Normalizer } from '../../normalizer'\nimport { Normalizers } from '../../normalizers'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn'\n\nexport class PagesBundlePathNormalizer extends Normalizers {\n  constructor() {\n    super([\n      // The bundle path should have the trailing `/index` stripped from\n      // it.\n      wrapNormalizerFn(normalizePagePath),\n      // The page should prefixed with `pages/`.\n      new PrefixingNormalizer('pages'),\n    ])\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(page)\n  }\n}\n\nexport class DevPagesBundlePathNormalizer extends Normalizers {\n  constructor(pagesNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pagesNormalizer,\n      // Normalize the app page to a pathname.\n      new PagesBundlePathNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\n\nexport class PagesFilenameNormalizer extends PrefixingNormalizer {\n  constructor(distDir: string) {\n    super(distDir, SERVER_DIRECTORY)\n  }\n\n  public normalize(manifestFilename: string): string {\n    return super.normalize(manifestFilename)\n  }\n}\n","import {\n  DevPagesBundlePathNormalizer,\n  PagesBundlePathNormalizer,\n} from './pages-bundle-path-normalizer'\nimport { PagesFilenameNormalizer } from './pages-filename-normalizer'\nimport { DevPagesPageNormalizer } from './pages-page-normalizer'\nimport { DevPagesPathnameNormalizer } from './pages-pathname-normalizer'\n\nexport class PagesNormalizers {\n  public readonly filename: PagesFilenameNormalizer\n  public readonly bundlePath: PagesBundlePathNormalizer\n\n  constructor(distDir: string) {\n    this.filename = new PagesFilenameNormalizer(distDir)\n    this.bundlePath = new PagesBundlePathNormalizer()\n\n    // You'd think that we'd require a `pathname` normalizer here, but for\n    // `/pages` we have to handle i18n routes, which means that we need to\n    // analyze the page path to determine the locale prefix and it's locale.\n  }\n}\n\nexport class DevPagesNormalizers {\n  public readonly page: DevPagesPageNormalizer\n  public readonly pathname: DevPagesPathnameNormalizer\n  public readonly bundlePath: DevPagesBundlePathNormalizer\n\n  constructor(pagesDir: string, extensions: ReadonlyArray<string>) {\n    this.page = new DevPagesPageNormalizer(pagesDir, extensions)\n    this.pathname = new DevPagesPathnameNormalizer(pagesDir, extensions)\n    this.bundlePath = new DevPagesBundlePathNormalizer(this.page)\n  }\n}\n","import { isAPIRoute } from '../../lib/is-api-route'\nimport { PAGES_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport {\n  PagesAPILocaleRouteMatcher,\n  PagesAPIRouteMatcher,\n} from '../route-matchers/pages-api-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport type { I18NProvider } from '../lib/i18n-provider'\nimport { PagesNormalizers } from '../normalizers/built/pages'\n\nexport class PagesAPIRouteMatcherProvider extends ManifestRouteMatcherProvider<PagesAPIRouteMatcher> {\n  private readonly normalizers: PagesNormalizers\n\n  constructor(\n    distDir: string,\n    manifestLoader: ManifestLoader,\n    private readonly i18nProvider?: I18NProvider\n  ) {\n    super(PAGES_MANIFEST, manifestLoader)\n\n    this.normalizers = new PagesNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<PagesAPIRouteMatcher>> {\n    // This matcher is only for Pages API routes.\n    const pathnames = Object.keys(manifest).filter((pathname) =>\n      isAPIRoute(pathname)\n    )\n\n    const matchers: Array<PagesAPIRouteMatcher> = []\n\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const { detectedLocale, pathname } = this.i18nProvider.analyze(page)\n\n        matchers.push(\n          new PagesAPILocaleRouteMatcher({\n            kind: RouteKind.PAGES_API,\n            pathname,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n            i18n: {\n              locale: detectedLocale,\n            },\n          })\n        )\n      } else {\n        matchers.push(\n          new PagesAPIRouteMatcher({\n            kind: RouteKind.PAGES_API,\n            // In `pages/`, the page is the same as the pathname.\n            pathname: page,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n          })\n        )\n      }\n    }\n\n    return matchers\n  }\n}\n","import type { PagesRouteDefinition } from '../route-definitions/pages-route-definition'\nimport { LocaleRouteMatcher } from './locale-route-matcher'\nimport { RouteMatcher } from './route-matcher'\n\nexport class PagesRouteMatcher extends RouteMatcher<PagesRouteDefinition> {}\n\nexport class PagesLocaleRouteMatcher extends LocaleRouteMatcher<PagesRouteDefinition> {}\n","import { isAPIRoute } from '../../lib/is-api-route'\nimport { BLOCKED_PAGES, PAGES_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport {\n  PagesLocaleRouteMatcher,\n  PagesRouteMatcher,\n} from '../route-matchers/pages-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport type { I18NProvider } from '../lib/i18n-provider'\nimport { PagesNormalizers } from '../normalizers/built/pages'\n\nexport class PagesRouteMatcherProvider extends ManifestRouteMatcherProvider<PagesRouteMatcher> {\n  private readonly normalizers: PagesNormalizers\n\n  constructor(\n    distDir: string,\n    manifestLoader: ManifestLoader,\n    private readonly i18nProvider?: I18NProvider\n  ) {\n    super(PAGES_MANIFEST, manifestLoader)\n\n    this.normalizers = new PagesNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<PagesRouteMatcher>> {\n    // This matcher is only for Pages routes, not Pages API routes which are\n    // included in this manifest.\n    const pathnames = Object.keys(manifest)\n      .filter((pathname) => !isAPIRoute(pathname))\n      // Remove any blocked pages (page that can't be routed to, like error or\n      // internal pages).\n      .filter((pathname) => {\n        const normalized =\n          this.i18nProvider?.analyze(pathname).pathname ?? pathname\n\n        // Skip any blocked pages.\n        if (BLOCKED_PAGES.includes(normalized)) return false\n\n        return true\n      })\n\n    const matchers: Array<PagesRouteMatcher> = []\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const { detectedLocale, pathname } = this.i18nProvider.analyze(page)\n\n        matchers.push(\n          new PagesLocaleRouteMatcher({\n            kind: RouteKind.PAGES,\n            pathname,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n            i18n: {\n              locale: detectedLocale,\n            },\n          })\n        )\n      } else {\n        matchers.push(\n          new PagesRouteMatcher({\n            kind: RouteKind.PAGES,\n            // In `pages/`, the page is the same as the pathname.\n            pathname: page,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n          })\n        )\n      }\n    }\n\n    return matchers\n  }\n}\n","import type { Manifest, ManifestLoader } from './manifest-loader'\n\nexport class ServerManifestLoader implements ManifestLoader {\n  constructor(private readonly getter: (name: string) => Manifest | null) {}\n\n  public load(name: string): Manifest | null {\n    return this.getter(name)\n  }\n}\n","import type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { NextParsedUrlQuery } from '../request-meta'\n\n/**\n * The result of matching a locale aware route.\n */\nexport interface LocaleAnalysisResult {\n  /**\n   * The pathname without the locale prefix (if any).\n   */\n  pathname: string\n\n  /**\n   * The detected locale. If no locale was detected, this will be `undefined`.\n   */\n  detectedLocale?: string\n\n  /**\n   * True if the locale was inferred from the default locale.\n   */\n  inferredFromDefault: boolean\n}\n\ntype LocaleAnalysisOptions = {\n  /**\n   * When provided, it will be used as the default locale if the locale\n   * cannot be inferred from the pathname.\n   */\n  defaultLocale?: string\n}\n\n/**\n * The I18NProvider is used to match locale aware routes, detect the locale from\n * the pathname and hostname and normalize the pathname by removing the locale\n * prefix.\n */\nexport class I18NProvider {\n  private readonly lowerCaseLocales: ReadonlyArray<string>\n  private readonly lowerCaseDomains?: ReadonlyArray<\n    DomainLocale & {\n      // The configuration references a domain with an optional port, but the\n      // hostname is always the domain without the port and is used for\n      // matching.\n      hostname: string\n    }\n  >\n\n  constructor(public readonly config: Readonly<I18NConfig>) {\n    if (!config.locales.length) {\n      throw new Error('Invariant: No locales provided')\n    }\n\n    this.lowerCaseLocales = config.locales.map((locale) => locale.toLowerCase())\n    this.lowerCaseDomains = config.domains?.map((domainLocale) => {\n      const domain = domainLocale.domain.toLowerCase()\n      return {\n        defaultLocale: domainLocale.defaultLocale.toLowerCase(),\n        hostname: domain.split(':', 1)[0],\n        domain,\n        locales: domainLocale.locales?.map((locale) => locale.toLowerCase()),\n        http: domainLocale.http,\n      }\n    })\n  }\n\n  /**\n   * Detects the domain locale from the hostname and the detected locale if\n   * provided.\n   *\n   * @param hostname The hostname to detect the domain locale from, this must be lowercased.\n   * @param detectedLocale The detected locale to use if the hostname does not match.\n   * @returns The domain locale if found, `undefined` otherwise.\n   */\n  public detectDomainLocale(\n    hostname?: string,\n    detectedLocale?: string\n  ): DomainLocale | undefined {\n    if (!hostname || !this.lowerCaseDomains || !this.config.domains) return\n\n    if (detectedLocale) detectedLocale = detectedLocale.toLowerCase()\n\n    for (let i = 0; i < this.lowerCaseDomains.length; i++) {\n      const domainLocale = this.lowerCaseDomains[i]\n      if (\n        // We assume that the hostname is already lowercased.\n        domainLocale.hostname === hostname ||\n        // Configuration validation ensures that the locale is not repeated in\n        // other domains locales.\n        domainLocale.locales?.some((locale) => locale === detectedLocale)\n      ) {\n        return this.config.domains[i]\n      }\n    }\n\n    return\n  }\n\n  /**\n   * Pulls the pre-computed locale and inference results from the query\n   * object.\n   *\n   * @param pathname the pathname that could contain a locale prefix\n   * @param query the query object\n   * @returns the locale analysis result\n   */\n  public fromQuery(\n    pathname: string,\n    query: NextParsedUrlQuery\n  ): LocaleAnalysisResult {\n    const detectedLocale = query.__nextLocale\n\n    // If a locale was detected on the query, analyze the pathname to ensure\n    // that the locale matches.\n    if (detectedLocale) {\n      const analysis = this.analyze(pathname)\n\n      // If the analysis contained a locale we should validate it against the\n      // query and strip it from the pathname.\n      if (analysis.detectedLocale) {\n        if (analysis.detectedLocale !== detectedLocale) {\n          throw new Error(\n            `Invariant: The detected locale does not match the locale in the query. Expected to find '${detectedLocale}' in '${pathname}' but found '${analysis.detectedLocale}'}`\n          )\n        }\n\n        pathname = analysis.pathname\n      }\n    }\n\n    return {\n      pathname,\n      detectedLocale,\n      inferredFromDefault: query.__nextInferredLocaleFromDefault === '1',\n    }\n  }\n\n  /**\n   * Analyzes the pathname for a locale and returns the pathname without it.\n   *\n   * @param pathname The pathname that could contain a locale prefix.\n   * @param options The options to use when matching the locale.\n   * @returns The matched locale and the pathname without the locale prefix\n   *          (if any).\n   */\n  public analyze(\n    pathname: string,\n    options: LocaleAnalysisOptions = {}\n  ): LocaleAnalysisResult {\n    let detectedLocale: string | undefined = options.defaultLocale\n\n    // By default, we assume that the default locale was inferred if there was\n    // no detected locale.\n    let inferredFromDefault = typeof detectedLocale === 'string'\n\n    // The first segment will be empty, because it has a leading `/`. If\n    // there is no further segment, there is no locale (or it's the default).\n    const segments = pathname.split('/', 2)\n    if (!segments[1])\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // The second segment will contain the locale part if any.\n    const segment = segments[1].toLowerCase()\n\n    // See if the segment matches one of the locales. If it doesn't, there is\n    // no locale (or it's the default).\n    const index = this.lowerCaseLocales.indexOf(segment)\n    if (index < 0)\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // Return the case-sensitive locale.\n    detectedLocale = this.config.locales[index]\n    inferredFromDefault = false\n\n    // Remove the `/${locale}` part of the pathname.\n    pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n    return {\n      detectedLocale,\n      pathname,\n      inferredFromDefault,\n    }\n  }\n}\n","import type { BaseNextRequest, BaseNextResponse } from './base-http'\nimport { isNodeNextResponse } from './base-http/helpers'\n\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { splitCookiesString } from './web/utils'\n\n/**\n * Sends the response on the underlying next response object.\n *\n * @param req the underlying request object\n * @param res the underlying response object\n * @param response the response to send\n */\nexport async function sendResponse(\n  req: BaseNextRequest,\n  res: BaseNextResponse,\n  response: Response,\n  waitUntil?: Promise<unknown>\n): Promise<void> {\n  if (\n    // The type check here ensures that `req` is correctly typed, and the\n    // environment variable check provides dead code elimination.\n    process.env.NEXT_RUNTIME !== 'edge' &&\n    isNodeNextResponse(res)\n  ) {\n    // Copy over the response status.\n    res.statusCode = response.status\n    res.statusMessage = response.statusText\n\n    // Copy over the response headers.\n    response.headers?.forEach((value, name) => {\n      // The append handling is special cased for `set-cookie`.\n      if (name.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          res.appendHeader(name, cookie)\n        }\n      } else {\n        res.appendHeader(name, value)\n      }\n    })\n\n    /**\n     * The response can't be directly piped to the underlying response. The\n     * following is duplicated from the edge runtime handler.\n     *\n     * See packages/next/server/next-server.ts\n     */\n\n    const { originalResponse } = res\n\n    // A response body must not be sent for HEAD requests. See https://httpwg.org/specs/rfc9110.html#HEAD\n    if (response.body && req.method !== 'HEAD') {\n      await pipeToNodeResponse(response.body, originalResponse, waitUntil)\n    } else {\n      originalResponse.end()\n    }\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/client/components/static-generation-async-storage.external.js\");","import type { RequestCookies } from '../cookies'\n\nimport { ResponseCookies } from '../cookies'\nimport { ReflectAdapter } from './reflect'\nimport { staticGenerationAsyncStorage } from '../../../../client/components/static-generation-async-storage.external'\n\n/**\n * @internal\n */\nexport class ReadonlyRequestCookiesError extends Error {\n  constructor() {\n    super(\n      'Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\n// The `cookies()` API is a mix of request and response cookies. For `.get()` methods,\n// we want to return the request cookie if it exists. For mutative methods like `.set()`,\n// we want to return the response cookie.\nexport type ReadonlyRequestCookies = Omit<\n  RequestCookies,\n  'set' | 'clear' | 'delete'\n> &\n  Pick<ResponseCookies, 'set' | 'delete'>\n\nexport class RequestCookiesAdapter {\n  public static seal(cookies: RequestCookies): ReadonlyRequestCookies {\n    return new Proxy(cookies as any, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'clear':\n          case 'delete':\n          case 'set':\n            return ReadonlyRequestCookiesError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n}\n\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies')\n\nexport function getModifiedCookieValues(\n  cookies: ResponseCookies\n): ResponseCookie[] {\n  const modified: ResponseCookie[] | undefined = (cookies as unknown as any)[\n    SYMBOL_MODIFY_COOKIE_VALUES\n  ]\n  if (!modified || !Array.isArray(modified) || modified.length === 0) {\n    return []\n  }\n\n  return modified\n}\n\nexport function appendMutableCookies(\n  headers: Headers,\n  mutableCookies: ResponseCookies\n): boolean {\n  const modifiedCookieValues = getModifiedCookieValues(mutableCookies)\n  if (modifiedCookieValues.length === 0) {\n    return false\n  }\n\n  // Return a new response that extends the response with\n  // the modified cookies as fallbacks. `res` cookies\n  // will still take precedence.\n  const resCookies = new ResponseCookies(headers)\n  const returnedCookies = resCookies.getAll()\n\n  // Set the modified cookies as fallbacks.\n  for (const cookie of modifiedCookieValues) {\n    resCookies.set(cookie)\n  }\n\n  // Set the original cookies as the final values.\n  for (const cookie of returnedCookies) {\n    resCookies.set(cookie)\n  }\n\n  return true\n}\n\ntype ResponseCookie = NonNullable<\n  ReturnType<InstanceType<typeof ResponseCookies>['get']>\n>\n\nexport class MutableRequestCookiesAdapter {\n  public static wrap(\n    cookies: RequestCookies,\n    onUpdateCookies?: (cookies: string[]) => void\n  ): ResponseCookies {\n    const responseCookies = new ResponseCookies(new Headers())\n    for (const cookie of cookies.getAll()) {\n      responseCookies.set(cookie)\n    }\n\n    let modifiedValues: ResponseCookie[] = []\n    const modifiedCookies = new Set<string>()\n    const updateResponseCookies = () => {\n      // TODO-APP: change method of getting staticGenerationAsyncStore\n      const staticGenerationAsyncStore = staticGenerationAsyncStorage.getStore()\n      if (staticGenerationAsyncStore) {\n        staticGenerationAsyncStore.pathWasRevalidated = true\n      }\n\n      const allCookies = responseCookies.getAll()\n      modifiedValues = allCookies.filter((c) => modifiedCookies.has(c.name))\n      if (onUpdateCookies) {\n        const serializedCookies: string[] = []\n        for (const cookie of modifiedValues) {\n          const tempCookies = new ResponseCookies(new Headers())\n          tempCookies.set(cookie)\n          serializedCookies.push(tempCookies.toString())\n        }\n\n        onUpdateCookies(serializedCookies)\n      }\n    }\n\n    return new Proxy(responseCookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          // A special symbol to get the modified cookie values\n          case SYMBOL_MODIFY_COOKIE_VALUES:\n            return modifiedValues\n\n          // TODO: Throw error if trying to set a cookie after the response\n          // headers have been set.\n          case 'delete':\n            return function (...args: [string] | [ResponseCookie]) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.delete(...args)\n              } finally {\n                updateResponseCookies()\n              }\n            }\n          case 'set':\n            return function (\n              ...args:\n                | [key: string, value: string, cookie?: Partial<ResponseCookie>]\n                | [options: ResponseCookie]\n            ) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                return target.set(...args)\n              } finally {\n                updateResponseCookies()\n              }\n            }\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n}\n","import { getPathMatch } from '../../shared/lib/router/utils/path-match'\n\nconst matcher = getPathMatch('/_next/data/:path*')\n\nexport function matchNextDataPathname(pathname: string | null | undefined) {\n  if (typeof pathname !== 'string') return false\n\n  return matcher(pathname)\n}\n","import type { Normalizer } from '../normalizer'\n\nexport class SuffixPathnameNormalizer implements Normalizer {\n  constructor(private readonly suffix: string) {}\n\n  public match(pathname: string) {\n    // If the pathname doesn't end in the suffix, we don't match.\n    if (!pathname.endsWith(this.suffix)) return false\n\n    return true\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    return pathname.substring(0, pathname.length - this.suffix.length)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { RSC_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class RSCPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(RSC_SUFFIX)\n  }\n}\n","import type { Normalizer } from '../normalizer'\n\nexport class PrefixPathnameNormalizer implements Normalizer {\n  constructor(private readonly prefix: string) {\n    if (prefix.endsWith('/')) {\n      throw new Error(\n        `PrefixPathnameNormalizer: prefix \"${prefix}\" should not end with a slash`\n      )\n    }\n  }\n\n  public match(pathname: string) {\n    // If the pathname doesn't start with the prefix, we don't match.\n    if (pathname !== this.prefix && !pathname.startsWith(this.prefix + '/')) {\n      return false\n    }\n\n    return true\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    if (pathname.length === this.prefix.length) {\n      return '/'\n    }\n\n    return pathname.substring(this.prefix.length)\n  }\n}\n","import { denormalizePagePath } from '../../../shared/lib/page-path/denormalize-page-path'\nimport type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { PrefixPathnameNormalizer } from './prefix'\n\nconst prefix = '/_next/postponed/resume'\n\nexport class PostponedPathnameNormalizer\n  extends PrefixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(prefix)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    // Remove the prefix.\n    pathname = super.normalize(pathname, true)\n\n    return denormalizePagePath(pathname)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { ACTION_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class ActionPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(ACTION_SUFFIX)\n  }\n}\n","import type { IncomingHttpHeaders } from 'node:http'\n\nimport { FLIGHT_HEADERS } from '../../client/components/app-router-headers'\n\n/**\n * Removes the flight headers from the request.\n *\n * @param req the request to strip the headers from\n */\nexport function stripFlightHeaders(headers: IncomingHttpHeaders) {\n  for (const header of FLIGHT_HEADERS) {\n    delete headers[header.toLowerCase()]\n  }\n}\n","import type { AppRouteRouteModule } from './app-route/module'\nimport type { AppPageRouteModule } from './app-page/module'\nimport type { PagesRouteModule } from './pages/module'\nimport type { PagesAPIRouteModule } from './pages-api/module'\n\nimport type { RouteModule } from './route-module'\n\nimport { RouteKind } from '../route-kind'\n\nexport function isAppRouteRouteModule(\n  routeModule: RouteModule\n): routeModule is AppRouteRouteModule {\n  return routeModule.definition.kind === RouteKind.APP_ROUTE\n}\n\nexport function isAppPageRouteModule(\n  routeModule: RouteModule\n): routeModule is AppPageRouteModule {\n  return routeModule.definition.kind === RouteKind.APP_PAGE\n}\n\nexport function isPagesRouteModule(\n  routeModule: RouteModule\n): routeModule is PagesRouteModule {\n  return routeModule.definition.kind === RouteKind.PAGES\n}\n\nexport function isPagesAPIRouteModule(\n  routeModule: RouteModule\n): routeModule is PagesAPIRouteModule {\n  return routeModule.definition.kind === RouteKind.PAGES_API\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { RSC_PREFETCH_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class PrefetchRSCPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(RSC_PREFETCH_SUFFIX)\n  }\n\n  public match(pathname: string): boolean {\n    if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n      return true\n    }\n\n    return super.match(pathname)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n      return '/'\n    }\n\n    return super.normalize(pathname, matched)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { denormalizePagePath } from '../../../shared/lib/page-path/denormalize-page-path'\nimport { PrefixPathnameNormalizer } from './prefix'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class NextDataPathnameNormalizer implements PathnameNormalizer {\n  private readonly prefix: PrefixPathnameNormalizer\n  private readonly suffix = new SuffixPathnameNormalizer('.json')\n  constructor(buildID: string) {\n    if (!buildID) {\n      throw new Error('Invariant: buildID is required')\n    }\n\n    this.prefix = new PrefixPathnameNormalizer(`/_next/data/${buildID}`)\n  }\n\n  public match(pathname: string) {\n    return this.prefix.match(pathname) && this.suffix.match(pathname)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    pathname = this.prefix.normalize(pathname, true)\n    pathname = this.suffix.normalize(pathname, true)\n\n    return denormalizePagePath(pathname)\n  }\n}\n","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param {string} pathname - The URL path that needs to be optimized.\n * @returns {string} - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */\nexport function toRoute(pathname: string): string {\n  return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/'\n}\n","export function getBuiltinRequestContext():\n  | BuiltinRequestContextValue\n  | undefined {\n  const _globalThis = globalThis as GlobalThisWithRequestContext\n  const ctx =\n    _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL] ??\n    _globalThis[VERCEL_REQUEST_CONTEXT_SYMBOL]\n  return ctx?.get()\n}\n\n/** This should be considered unstable until `unstable_after` is stablized. */\nconst NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context')\n\n// TODO(after): this is a temporary workaround.\n// Remove this when vercel builder is updated to provide '@next/request-context'.\nconst VERCEL_REQUEST_CONTEXT_SYMBOL = Symbol.for('@vercel/request-context')\n\ntype GlobalThisWithRequestContext = typeof globalThis & {\n  [NEXT_REQUEST_CONTEXT_SYMBOL]?: BuiltinRequestContext\n  /** @deprecated */\n  [VERCEL_REQUEST_CONTEXT_SYMBOL]?: BuiltinRequestContext\n}\n\n/** A request context provided by the platform.\n * It should be considered unstable until `unstable_after` is stablized. */\nexport type BuiltinRequestContext = {\n  get(): BuiltinRequestContextValue | undefined\n}\n\nexport type BuiltinRequestContextValue = { waitUntil?: WaitUntil }\nexport type WaitUntil = (promise: Promise<any>) => void\n","import { PageSignatureError } from '../error'\nimport type { NextRequest } from './request'\n\nconst responseSymbol = Symbol('response')\nconst passThroughSymbol = Symbol('passThrough')\nexport const waitUntilSymbol = Symbol('waitUntil')\n\nclass FetchEvent {\n  readonly [waitUntilSymbol]: Promise<any>[] = [];\n  [responseSymbol]?: Promise<Response>;\n  [passThroughSymbol] = false\n\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(_request: Request) {}\n\n  respondWith(response: Response | Promise<Response>): void {\n    if (!this[responseSymbol]) {\n      this[responseSymbol] = Promise.resolve(response)\n    }\n  }\n\n  passThroughOnException(): void {\n    this[passThroughSymbol] = true\n  }\n\n  waitUntil(promise: Promise<any>): void {\n    this[waitUntilSymbol].push(promise)\n  }\n}\n\nexport class NextFetchEvent extends FetchEvent {\n  sourcePage: string\n\n  constructor(params: { request: NextRequest; page: string }) {\n    super(params.request)\n    this.sourcePage = params.page\n  }\n\n  /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */\n  get request() {\n    throw new PageSignatureError({\n      page: this.sourcePage,\n    })\n  }\n\n  /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */\n  respondWith() {\n    throw new PageSignatureError({\n      page: this.sourcePage,\n    })\n  }\n}\n","import { stringifyCookie } from '../../web/spec-extension/cookies'\nimport type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { ReflectAdapter } from './adapters/reflect'\n\nimport { ResponseCookies } from './cookies'\n\nconst INTERNALS = Symbol('internal response')\nconst REDIRECTS = new Set([301, 302, 303, 307, 308])\n\nfunction handleMiddlewareField(\n  init: MiddlewareResponseInit | undefined,\n  headers: Headers\n) {\n  if (init?.request?.headers) {\n    if (!(init.request.headers instanceof Headers)) {\n      throw new Error('request.headers must be an instance of Headers')\n    }\n\n    const keys = []\n    for (const [key, value] of init.request.headers) {\n      headers.set('x-middleware-request-' + key, value)\n      keys.push(key)\n    }\n\n    headers.set('x-middleware-override-headers', keys.join(','))\n  }\n}\n\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */\nexport class NextResponse<Body = unknown> extends Response {\n  [INTERNALS]: {\n    cookies: ResponseCookies\n    url?: NextURL\n    body?: Body\n  }\n\n  constructor(body?: BodyInit | null, init: ResponseInit = {}) {\n    super(body, init)\n\n    const headers = this.headers\n    const cookies = new ResponseCookies(headers)\n\n    const cookiesProxy = new Proxy(cookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'delete':\n          case 'set': {\n            return (...args: [string, string]) => {\n              const result = Reflect.apply(target[prop], target, args)\n              const newHeaders = new Headers(headers)\n\n              if (result instanceof ResponseCookies) {\n                headers.set(\n                  'x-middleware-set-cookie',\n                  result\n                    .getAll()\n                    .map((cookie) => stringifyCookie(cookie))\n                    .join(',')\n                )\n              }\n\n              handleMiddlewareField(init, newHeaders)\n              return result\n            }\n          }\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n\n    this[INTERNALS] = {\n      cookies: cookiesProxy,\n      url: init.url\n        ? new NextURL(init.url, {\n            headers: toNodeOutgoingHttpHeaders(headers),\n            nextConfig: init.nextConfig,\n          })\n        : undefined,\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      url: this.url,\n      // rest of props come from Response\n      body: this.body,\n      bodyUsed: this.bodyUsed,\n      headers: Object.fromEntries(this.headers),\n      ok: this.ok,\n      redirected: this.redirected,\n      status: this.status,\n      statusText: this.statusText,\n      type: this.type,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  static json<JsonBody>(\n    body: JsonBody,\n    init?: ResponseInit\n  ): NextResponse<JsonBody> {\n    const response: Response = Response.json(body, init)\n    return new NextResponse(response.body, response)\n  }\n\n  static redirect(url: string | NextURL | URL, init?: number | ResponseInit) {\n    const status = typeof init === 'number' ? init : init?.status ?? 307\n    if (!REDIRECTS.has(status)) {\n      throw new RangeError(\n        'Failed to execute \"redirect\" on \"response\": Invalid status code'\n      )\n    }\n    const initObj = typeof init === 'object' ? init : {}\n    const headers = new Headers(initObj?.headers)\n    headers.set('Location', validateURL(url))\n\n    return new NextResponse(null, {\n      ...initObj,\n      headers,\n      status,\n    })\n  }\n\n  static rewrite(\n    destination: string | NextURL | URL,\n    init?: MiddlewareResponseInit\n  ) {\n    const headers = new Headers(init?.headers)\n    headers.set('x-middleware-rewrite', validateURL(destination))\n\n    handleMiddlewareField(init, headers)\n    return new NextResponse(null, { ...init, headers })\n  }\n\n  static next(init?: MiddlewareResponseInit) {\n    const headers = new Headers(init?.headers)\n    headers.set('x-middleware-next', '1')\n\n    handleMiddlewareField(init, headers)\n    return new NextResponse(null, { ...init, headers })\n  }\n}\n\ninterface ResponseInit extends globalThis.ResponseInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig\n    trailingSlash?: boolean\n  }\n  url?: string\n}\n\ninterface ModifiedRequest {\n  /**\n   * If this is set, the request headers will be overridden with this value.\n   */\n  headers?: Headers\n}\n\ninterface MiddlewareResponseInit extends globalThis.ResponseInit {\n  /**\n   * These fields will override the request from clients.\n   */\n  request?: ModifiedRequest\n}\n","import type {\n  InstrumentationModule,\n  InstrumentationOnRequestError,\n} from '../instrumentation/types'\n\ndeclare const _ENTRIES: any\n\nexport async function getEdgeInstrumentationModule(): Promise<\n  InstrumentationModule | undefined\n> {\n  const instrumentation =\n    '_ENTRIES' in globalThis &&\n    _ENTRIES.middleware_instrumentation &&\n    (await _ENTRIES.middleware_instrumentation)\n\n  return instrumentation\n}\n\nlet instrumentationModulePromise: Promise<any> | null = null\nasync function registerInstrumentation() {\n  if (!instrumentationModulePromise) {\n    instrumentationModulePromise = getEdgeInstrumentationModule()\n  }\n  const instrumentation = await instrumentationModulePromise\n  if (instrumentation?.register) {\n    try {\n      await instrumentation.register()\n    } catch (err: any) {\n      err.message = `An error occurred while loading instrumentation hook: ${err.message}`\n      throw err\n    }\n  }\n}\n\nexport async function edgeInstrumentationOnRequestError(\n  ...args: Parameters<InstrumentationOnRequestError>\n) {\n  const instrumentation = await getEdgeInstrumentationModule()\n  try {\n    await instrumentation?.onRequestError?.(...args)\n  } catch (err) {\n    // Log the soft error and continue, since the original error has already been thrown\n    console.error('Error in instrumentation.onRequestError:', err)\n  }\n}\n\nlet registerInstrumentationPromise: Promise<void> | null = null\nexport function ensureInstrumentationRegistered() {\n  if (!registerInstrumentationPromise) {\n    registerInstrumentationPromise = registerInstrumentation()\n  }\n  return registerInstrumentationPromise\n}\n\nfunction getUnsupportedModuleErrorMessage(module: string) {\n  // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n  return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`\n}\n\nfunction __import_unsupported(moduleName: string) {\n  const proxy: any = new Proxy(function () {}, {\n    get(_obj, prop) {\n      if (prop === 'then') {\n        return {}\n      }\n      throw new Error(getUnsupportedModuleErrorMessage(moduleName))\n    },\n    construct() {\n      throw new Error(getUnsupportedModuleErrorMessage(moduleName))\n    },\n    apply(_target, _this, args) {\n      if (typeof args[0] === 'function') {\n        return args[0](proxy)\n      }\n      throw new Error(getUnsupportedModuleErrorMessage(moduleName))\n    },\n  })\n  return new Proxy({}, { get: () => proxy })\n}\n\nfunction enhanceGlobals() {\n  // The condition is true when the \"process\" module is provided\n  if (process !== global.process) {\n    // prefer local process but global.process has correct \"env\"\n    process.env = global.process.env\n    global.process = process\n  }\n\n  // to allow building code that import but does not use node.js modules,\n  // webpack will expect this function to exist in global scope\n  Object.defineProperty(globalThis, '__import_unsupported', {\n    value: __import_unsupported,\n    enumerable: false,\n    configurable: false,\n  })\n\n  // Eagerly fire instrumentation hook to make the startup faster.\n  void ensureInstrumentationRegistered()\n}\n\nenhanceGlobals()\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/client/components/request-async-storage.external.js\");","import type { RequestData, FetchEventResult } from './types'\nimport type { RequestInit } from './spec-extension/request'\nimport { PageSignatureError } from './error'\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam } from './utils'\nimport { NextFetchEvent } from './spec-extension/fetch-event'\nimport { NextRequest } from './spec-extension/request'\nimport { NextResponse } from './spec-extension/response'\nimport { relativizeURL } from '../../shared/lib/router/utils/relativize-url'\nimport { waitUntilSymbol } from './spec-extension/fetch-event'\nimport { NextURL } from './next-url'\nimport { stripInternalSearchParams } from '../internal-utils'\nimport { normalizeRscURL } from '../../shared/lib/router/utils/app-paths'\nimport { FLIGHT_HEADERS } from '../../client/components/app-router-headers'\nimport { ensureInstrumentationRegistered } from './globals'\nimport {\n  withRequestStore,\n  type WrapperRenderOpts,\n} from '../async-storage/with-request-store'\nimport { requestAsyncStorage } from '../../client/components/request-async-storage.external'\nimport { getTracer } from '../lib/trace/tracer'\nimport type { TextMapGetter } from 'next/dist/compiled/@opentelemetry/api'\nimport { MiddlewareSpan } from '../lib/trace/constants'\nimport { CloseController } from './web-on-close'\nimport { getEdgePreviewProps } from './get-edge-preview-props'\n\nexport class NextRequestHint extends NextRequest {\n  sourcePage: string\n  fetchMetrics?: FetchEventResult['fetchMetrics']\n\n  constructor(params: {\n    init: RequestInit\n    input: Request | string\n    page: string\n  }) {\n    super(params.input, params.init)\n    this.sourcePage = params.page\n  }\n\n  get request() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n\n  respondWith() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n\n  waitUntil() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n}\n\nconst headersGetter: TextMapGetter<Headers> = {\n  keys: (headers) => Array.from(headers.keys()),\n  get: (headers, key) => headers.get(key) ?? undefined,\n}\n\nexport type AdapterOptions = {\n  handler: (req: NextRequestHint, event: NextFetchEvent) => Promise<Response>\n  page: string\n  request: RequestData\n  IncrementalCache?: typeof import('../lib/incremental-cache').IncrementalCache\n}\n\nlet propagator: <T>(request: NextRequestHint, fn: () => T) => T = (\n  request,\n  fn\n) => {\n  const tracer = getTracer()\n  return tracer.withPropagatedContext(request.headers, fn, headersGetter)\n}\n\nlet testApisIntercepted = false\n\nfunction ensureTestApisIntercepted() {\n  if (!testApisIntercepted) {\n    testApisIntercepted = true\n    if (process.env.NEXT_PRIVATE_TEST_PROXY === 'true') {\n      const {\n        interceptTestApis,\n        wrapRequestHandler,\n      } = require('next/dist/experimental/testmode/server-edge')\n      interceptTestApis()\n      propagator = wrapRequestHandler(propagator)\n    }\n  }\n}\n\nexport async function adapter(\n  params: AdapterOptions\n): Promise<FetchEventResult> {\n  ensureTestApisIntercepted()\n  await ensureInstrumentationRegistered()\n\n  // TODO-APP: use explicit marker for this\n  const isEdgeRendering = typeof self.__BUILD_MANIFEST !== 'undefined'\n\n  params.request.url = normalizeRscURL(params.request.url)\n\n  const requestUrl = new NextURL(params.request.url, {\n    headers: params.request.headers,\n    nextConfig: params.request.nextConfig,\n  })\n\n  // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n  // Instead we use the keys before iteration.\n  const keys = [...requestUrl.searchParams.keys()]\n  for (const key of keys) {\n    const value = requestUrl.searchParams.getAll(key)\n\n    normalizeNextQueryParam(key, (normalizedKey) => {\n      requestUrl.searchParams.delete(normalizedKey)\n\n      for (const val of value) {\n        requestUrl.searchParams.append(normalizedKey, val)\n      }\n      requestUrl.searchParams.delete(key)\n    })\n  }\n\n  // Ensure users only see page requests, never data requests.\n  const buildId = requestUrl.buildId\n  requestUrl.buildId = ''\n\n  const isNextDataRequest = params.request.headers['x-nextjs-data']\n\n  if (isNextDataRequest && requestUrl.pathname === '/index') {\n    requestUrl.pathname = '/'\n  }\n\n  const requestHeaders = fromNodeOutgoingHttpHeaders(params.request.headers)\n  const flightHeaders = new Map()\n  // Headers should only be stripped for middleware\n  if (!isEdgeRendering) {\n    for (const header of FLIGHT_HEADERS) {\n      const key = header.toLowerCase()\n      const value = requestHeaders.get(key)\n      if (value) {\n        flightHeaders.set(key, value)\n        requestHeaders.delete(key)\n      }\n    }\n  }\n\n  const normalizeUrl = process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n    ? new URL(params.request.url)\n    : requestUrl\n\n  const request = new NextRequestHint({\n    page: params.page,\n    // Strip internal query parameters off the request.\n    input: stripInternalSearchParams(normalizeUrl, true).toString(),\n    init: {\n      body: params.request.body,\n      geo: params.request.geo,\n      headers: requestHeaders,\n      ip: params.request.ip,\n      method: params.request.method,\n      nextConfig: params.request.nextConfig,\n      signal: params.request.signal,\n    },\n  })\n\n  /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */\n  if (isNextDataRequest) {\n    Object.defineProperty(request, '__isData', {\n      enumerable: false,\n      value: true,\n    })\n  }\n\n  if (\n    !(globalThis as any).__incrementalCache &&\n    (params as any).IncrementalCache\n  ) {\n    ;(globalThis as any).__incrementalCache = new (\n      params as any\n    ).IncrementalCache({\n      appDir: true,\n      fetchCache: true,\n      minimalMode: process.env.NODE_ENV !== 'development',\n      fetchCacheKeyPrefix: process.env.__NEXT_FETCH_CACHE_KEY_PREFIX,\n      dev: process.env.NODE_ENV === 'development',\n      requestHeaders: params.request.headers as any,\n      requestProtocol: 'https',\n      getPrerenderManifest: () => {\n        return {\n          version: -1 as any, // letting us know this doesn't conform to spec\n          routes: {},\n          dynamicRoutes: {},\n          notFoundRoutes: [],\n          preview: getEdgePreviewProps(),\n        }\n      },\n    })\n  }\n\n  const event = new NextFetchEvent({ request, page: params.page })\n  let response\n  let cookiesFromResponse\n\n  response = await propagator(request, () => {\n    // we only care to make async storage available for middleware\n    const isMiddleware =\n      params.page === '/middleware' || params.page === '/src/middleware'\n\n    if (isMiddleware) {\n      // if we're in an edge function, we only get a subset of `nextConfig` (no `experimental`),\n      // so we have to inject it via DefinePlugin.\n      // in `next start` this will be passed normally (see `NextNodeServer.runMiddleware`).\n      const isAfterEnabled =\n        params.request.nextConfig?.experimental?.after ??\n        !!process.env.__NEXT_AFTER\n\n      let waitUntil: WrapperRenderOpts['waitUntil'] = undefined\n      let closeController: CloseController | undefined = undefined\n\n      if (isAfterEnabled) {\n        waitUntil = event.waitUntil.bind(event)\n        closeController = new CloseController()\n      }\n\n      return getTracer().trace(\n        MiddlewareSpan.execute,\n        {\n          spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n          attributes: {\n            'http.target': request.nextUrl.pathname,\n            'http.method': request.method,\n          },\n        },\n        async () => {\n          try {\n            const previewProps = getEdgePreviewProps()\n\n            return await withRequestStore(\n              requestAsyncStorage,\n              {\n                req: request,\n                url: request.nextUrl,\n                renderOpts: {\n                  onUpdateCookies: (cookies) => {\n                    cookiesFromResponse = cookies\n                  },\n                  previewProps,\n                  waitUntil,\n                  onClose: closeController\n                    ? closeController.onClose.bind(closeController)\n                    : undefined,\n                  experimental: {\n                    after: isAfterEnabled,\n                  },\n                },\n              },\n              () => params.handler(request, event)\n            )\n          } finally {\n            // middleware cannot stream, so we can consider the response closed\n            // as soon as the handler returns.\n            if (closeController) {\n              // we can delay running it until a bit later --\n              // if it's needed, we'll have a `waitUntil` lock anyway.\n              setTimeout(() => {\n                closeController!.dispatchClose()\n              }, 0)\n            }\n          }\n        }\n      )\n    }\n    return params.handler(request, event)\n  })\n\n  // check if response is a Response object\n  if (response && !(response instanceof Response)) {\n    throw new TypeError('Expected an instance of Response to be returned')\n  }\n\n  if (response && cookiesFromResponse) {\n    response.headers.set('set-cookie', cookiesFromResponse)\n  }\n\n  /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */\n  const rewrite = response?.headers.get('x-middleware-rewrite')\n  if (response && rewrite && !isEdgeRendering) {\n    const rewriteUrl = new NextURL(rewrite, {\n      forceLocale: true,\n      headers: params.request.headers,\n      nextConfig: params.request.nextConfig,\n    })\n\n    if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n      if (rewriteUrl.host === request.nextUrl.host) {\n        rewriteUrl.buildId = buildId || rewriteUrl.buildId\n        response.headers.set('x-middleware-rewrite', String(rewriteUrl))\n      }\n    }\n\n    /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */\n    const relativizedRewrite = relativizeURL(\n      String(rewriteUrl),\n      String(requestUrl)\n    )\n\n    if (\n      isNextDataRequest &&\n      // if the rewrite is external and external rewrite\n      // resolving config is enabled don't add this header\n      // so the upstream app can set it instead\n      !(\n        process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE &&\n        relativizedRewrite.match(/http(s)?:\\/\\//)\n      )\n    ) {\n      response.headers.set('x-nextjs-rewrite', relativizedRewrite)\n    }\n  }\n\n  /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */\n  const redirect = response?.headers.get('Location')\n  if (response && redirect && !isEdgeRendering) {\n    const redirectURL = new NextURL(redirect, {\n      forceLocale: false,\n      headers: params.request.headers,\n      nextConfig: params.request.nextConfig,\n    })\n\n    /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */\n    response = new Response(response.body, response)\n\n    if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n      if (redirectURL.host === request.nextUrl.host) {\n        redirectURL.buildId = buildId || redirectURL.buildId\n        response.headers.set('Location', String(redirectURL))\n      }\n    }\n\n    /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */\n    if (isNextDataRequest) {\n      response.headers.delete('Location')\n      response.headers.set(\n        'x-nextjs-redirect',\n        relativizeURL(String(redirectURL), String(requestUrl))\n      )\n    }\n  }\n\n  const finalResponse = response ? response : NextResponse.next()\n\n  // Flight headers are not overridable / removable so they are applied at the end.\n  const middlewareOverrideHeaders = finalResponse.headers.get(\n    'x-middleware-override-headers'\n  )\n  const overwrittenHeaders: string[] = []\n  if (middlewareOverrideHeaders) {\n    for (const [key, value] of flightHeaders) {\n      finalResponse.headers.set(`x-middleware-request-${key}`, value)\n      overwrittenHeaders.push(key)\n    }\n\n    if (overwrittenHeaders.length > 0) {\n      finalResponse.headers.set(\n        'x-middleware-override-headers',\n        middlewareOverrideHeaders + ',' + overwrittenHeaders.join(',')\n      )\n    }\n  }\n\n  return {\n    response: finalResponse,\n    waitUntil: Promise.all(event[waitUntilSymbol]),\n    fetchMetrics: request.fetchMetrics,\n  }\n}\n","import type { __ApiPreviewProps } from './api-utils'\nimport type { FontManifest, FontConfig } from './font-utils'\nimport type { LoadComponentsReturnType } from './load-components'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { Params } from '../shared/lib/router/utils/route-matcher'\nimport type { NextConfig, NextConfigComplete } from './config-shared'\nimport type {\n  NextParsedUrlQuery,\n  NextUrlWithParsedQuery,\n  RequestMeta,\n} from './request-meta'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { RenderOptsPartial as PagesRenderOptsPartial } from './render'\nimport type {\n  RenderOptsPartial as AppRenderOptsPartial,\n  ServerOnInstrumentationRequestError,\n} from './app-render/types'\nimport type {\n  CachedAppPageValue,\n  CachedPageValue,\n  ServerComponentsHmrCache,\n  ResponseCacheBase,\n  ResponseCacheEntry,\n  ResponseGenerator,\n} from './response-cache'\nimport type { UrlWithParsedQuery } from 'url'\nimport {\n  NormalizeError,\n  DecodeError,\n  normalizeRepeatedSlashes,\n  MissingStaticPage,\n} from '../shared/lib/utils'\nimport type { PreviewData } from '../types'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { BaseNextRequest, BaseNextResponse } from './base-http'\nimport type {\n  ManifestRewriteRoute,\n  ManifestRoute,\n  PrerenderManifest,\n} from '../build'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport type { AppPageRouteModule } from './route-modules/app-page/module'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { AppRouteRouteHandlerContext } from './route-modules/app-route/module'\nimport type {\n  Server as HTTPServer,\n  IncomingMessage,\n  ServerResponse as HTTPServerResponse,\n} from 'http'\nimport type { MiddlewareMatcher } from '../build/analysis/get-page-static-info'\nimport type { TLSSocket } from 'tls'\nimport type { PathnameNormalizer } from './normalizers/request/pathname-normalizer'\nimport type { InstrumentationModule } from './instrumentation/types'\n\nimport { format as formatUrl, parse as parseUrl } from 'url'\nimport { formatHostname } from './lib/format-hostname'\nimport { getRedirectStatus } from '../lib/redirect-status'\nimport { isEdgeRuntime } from '../lib/is-edge-runtime'\nimport {\n  APP_PATHS_MANIFEST,\n  NEXT_BUILTIN_DOCUMENT,\n  PAGES_MANIFEST,\n  STATIC_STATUS_PAGES,\n  UNDERSCORE_NOT_FOUND_ROUTE,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport { isDynamicRoute } from '../shared/lib/router/utils'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport { setConfig } from '../shared/lib/runtime-config.external'\nimport {\n  formatRevalidate,\n  type Revalidate,\n  type SwrDelta,\n} from './lib/revalidate'\nimport { execOnce } from '../shared/lib/utils'\nimport { isBlockedPage } from './utils'\nimport { isBot } from '../shared/lib/router/utils/is-bot'\nimport RenderResult from './render-result'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport * as Log from '../build/output/log'\nimport escapePathDelimiters from '../shared/lib/router/utils/escape-path-delimiters'\nimport { getUtils } from './server-utils'\nimport isError, { getProperError } from '../lib/is-error'\nimport {\n  addRequestMeta,\n  getRequestMeta,\n  removeRequestMeta,\n  setRequestMeta,\n} from './request-meta'\nimport { removePathPrefix } from '../shared/lib/router/utils/remove-path-prefix'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\nimport { getHostname } from '../shared/lib/get-hostname'\nimport { parseUrl as parseUrlUtil } from '../shared/lib/router/utils/parse-url'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport {\n  RSC_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_DID_POSTPONE_HEADER,\n  NEXT_URL,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_IS_PRERENDER_HEADER,\n} from '../client/components/app-router-headers'\nimport type {\n  MatchOptions,\n  RouteMatcherManager,\n} from './route-matcher-managers/route-matcher-manager'\nimport { LocaleRouteNormalizer } from './normalizers/locale-route-normalizer'\nimport { DefaultRouteMatcherManager } from './route-matcher-managers/default-route-matcher-manager'\nimport { AppPageRouteMatcherProvider } from './route-matcher-providers/app-page-route-matcher-provider'\nimport { AppRouteRouteMatcherProvider } from './route-matcher-providers/app-route-route-matcher-provider'\nimport { PagesAPIRouteMatcherProvider } from './route-matcher-providers/pages-api-route-matcher-provider'\nimport { PagesRouteMatcherProvider } from './route-matcher-providers/pages-route-matcher-provider'\nimport { ServerManifestLoader } from './route-matcher-providers/helpers/manifest-loaders/server-manifest-loader'\nimport { getTracer, isBubbledError, SpanKind } from './lib/trace/tracer'\nimport { BaseServerSpan } from './lib/trace/constants'\nimport { I18NProvider } from './lib/i18n-provider'\nimport { sendResponse } from './send-response'\nimport {\n  handleBadRequestResponse,\n  handleInternalServerErrorResponse,\n} from './route-modules/helpers/response-handlers'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  normalizeNextQueryParam,\n  toNodeOutgoingHttpHeaders,\n} from './web/utils'\nimport { CACHE_ONE_YEAR, NEXT_CACHE_TAGS_HEADER } from '../lib/constants'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport {\n  NextRequestAdapter,\n  signalFromNodeResponse,\n} from './web/spec-extension/adapters/next-request'\nimport { matchNextDataPathname } from './lib/match-next-data-pathname'\nimport getRouteFromAssetPath from '../shared/lib/router/utils/get-route-from-asset-path'\nimport { RSCPathnameNormalizer } from './normalizers/request/rsc'\nimport { PostponedPathnameNormalizer } from './normalizers/request/postponed'\nimport { ActionPathnameNormalizer } from './normalizers/request/action'\nimport { stripFlightHeaders } from './app-render/strip-flight-headers'\nimport {\n  isAppPageRouteModule,\n  isAppRouteRouteModule,\n  isPagesRouteModule,\n} from './route-modules/checks'\nimport { PrefetchRSCPathnameNormalizer } from './normalizers/request/prefetch-rsc'\nimport { NextDataPathnameNormalizer } from './normalizers/request/next-data'\nimport { getIsServerAction } from './lib/server-action-request-meta'\nimport { isInterceptionRouteAppPath } from './lib/interception-routes'\nimport { toRoute } from './lib/to-route'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { isNodeNextRequest, isNodeNextResponse } from './base-http/helpers'\nimport { patchSetHeaderWithCookieSupport } from './lib/patch-set-header'\nimport { checkIsAppPPREnabled } from './lib/experimental/ppr'\nimport {\n  getBuiltinRequestContext,\n  type WaitUntil,\n} from './after/builtin-request-context'\nimport { ENCODED_TAGS } from './stream-utils/encodedTags'\nimport { NextRequestHint } from './web/adapter'\n\nexport type FindComponentsResult = {\n  components: LoadComponentsReturnType\n  query: NextParsedUrlQuery\n}\n\nexport interface MiddlewareRoutingItem {\n  page: string\n  match: MiddlewareRouteMatch\n  matchers?: MiddlewareMatcher[]\n}\n\nexport type RouteHandler<\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> = (\n  req: ServerRequest,\n  res: ServerResponse,\n  parsedUrl: NextUrlWithParsedQuery\n) => PromiseLike<boolean> | boolean\n\n/**\n * The normalized route manifest is the same as the route manifest, but with\n * the rewrites normalized to the object shape that the router expects.\n */\nexport type NormalizedRouteManifest = {\n  readonly dynamicRoutes: ReadonlyArray<ManifestRoute>\n  readonly rewrites: {\n    readonly beforeFiles: ReadonlyArray<ManifestRewriteRoute>\n    readonly afterFiles: ReadonlyArray<ManifestRewriteRoute>\n    readonly fallback: ReadonlyArray<ManifestRewriteRoute>\n  }\n}\n\nexport interface Options {\n  /**\n   * Object containing the configuration next.config.js\n   */\n  conf: NextConfig\n  /**\n   * Set to false when the server was created by Next.js\n   */\n  customServer?: boolean\n  /**\n   * Tells if Next.js is running in dev mode\n   */\n  dev?: boolean\n  /**\n   * Enables the experimental testing mode.\n   */\n  experimentalTestProxy?: boolean\n\n  /**\n   * Whether or not the dev server is running in experimental HTTPS mode\n   */\n  experimentalHttpsServer?: boolean\n  /**\n   * Where the Next project is located\n   */\n  dir?: string\n  /**\n   * Tells if Next.js is at the platform-level\n   */\n  minimalMode?: boolean\n  /**\n   * Hide error messages containing server information\n   */\n  quiet?: boolean\n  /**\n   * The hostname the server is running behind\n   */\n  hostname?: string\n  /**\n   * The port the server is running behind\n   */\n  port?: number\n  /**\n   * The HTTP Server that Next.js is running behind\n   */\n  httpServer?: HTTPServer\n}\n\nexport type RenderOpts = PagesRenderOptsPartial & AppRenderOptsPartial\n\nexport type LoadedRenderOpts = RenderOpts &\n  LoadComponentsReturnType &\n  RequestLifecycleOpts\n\nexport type RequestLifecycleOpts = {\n  waitUntil: ((promise: Promise<any>) => void) | undefined\n  onClose: ((callback: () => void) => void) | undefined\n}\n\ntype BaseRenderOpts = RenderOpts & {\n  poweredByHeader: boolean\n  generateEtags: boolean\n  previewProps: __ApiPreviewProps\n}\n\n/**\n * The public interface for rendering with the server programmatically. This\n * would typically only allow the base request or response to extend it, but\n * because this can be programmatically accessed, we assume that it could also\n * be the base Node.js request and response types.\n */\nexport interface BaseRequestHandler<\n  ServerRequest extends BaseNextRequest | IncomingMessage = BaseNextRequest,\n  ServerResponse extends\n    | BaseNextResponse\n    | HTTPServerResponse = BaseNextResponse,\n> {\n  (\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery | undefined\n  ): Promise<void> | void\n}\n\nexport type RequestContext<\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> = {\n  req: ServerRequest\n  res: ServerResponse\n  pathname: string\n  query: NextParsedUrlQuery\n  renderOpts: RenderOpts\n}\n\nexport type FallbackMode = false | undefined | 'blocking' | 'static'\n\nexport class NoFallbackError extends Error {}\n\n// Internal wrapper around build errors at development\n// time, to prevent us from propagating or logging them\nexport class WrappedBuildError extends Error {\n  innerError: Error\n\n  constructor(innerError: Error) {\n    super()\n    this.innerError = innerError\n  }\n}\n\ntype ResponsePayload = {\n  type: 'html' | 'json' | 'rsc'\n  body: RenderResult\n  revalidate?: Revalidate\n}\n\nexport type NextEnabledDirectories = {\n  readonly pages: boolean\n  readonly app: boolean\n}\n\nexport default abstract class Server<\n  ServerOptions extends Options = Options,\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> {\n  public readonly hostname?: string\n  public readonly fetchHostname?: string\n  public readonly port?: number\n  protected readonly dir: string\n  protected readonly quiet: boolean\n  protected readonly nextConfig: NextConfigComplete\n  protected readonly distDir: string\n  protected readonly publicDir: string\n  protected readonly hasStaticDir: boolean\n  protected readonly pagesManifest?: PagesManifest\n  protected readonly appPathsManifest?: PagesManifest\n  protected readonly buildId: string\n  protected readonly minimalMode: boolean\n  protected readonly renderOpts: BaseRenderOpts\n  protected readonly serverOptions: Readonly<ServerOptions>\n  protected readonly appPathRoutes?: Record<string, string[]>\n  protected readonly clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  protected interceptionRoutePatterns: RegExp[]\n  protected nextFontManifest?: DeepReadonly<NextFontManifest>\n  protected instrumentation: InstrumentationModule | undefined\n  private readonly responseCache: ResponseCacheBase\n\n  protected abstract getPublicDir(): string\n  protected abstract getHasStaticDir(): boolean\n  protected abstract getPagesManifest(): PagesManifest | undefined\n  protected abstract getAppPathsManifest(): PagesManifest | undefined\n  protected abstract getBuildId(): string\n  protected abstract getinterceptionRoutePatterns(): RegExp[]\n\n  protected readonly enabledDirectories: NextEnabledDirectories\n  protected abstract getEnabledDirectories(dev: boolean): NextEnabledDirectories\n\n  protected readonly experimentalTestProxy?: boolean\n\n  protected abstract findPageComponents(params: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure?: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null>\n  protected abstract getFontManifest(): DeepReadonly<FontManifest> | undefined\n  protected abstract getPrerenderManifest(): DeepReadonly<PrerenderManifest>\n  protected abstract getNextFontManifest():\n    | DeepReadonly<NextFontManifest>\n    | undefined\n  protected abstract attachRequestMeta(\n    req: ServerRequest,\n    parsedUrl: NextUrlWithParsedQuery\n  ): void\n  protected abstract getFallback(page: string): Promise<string>\n  protected abstract hasPage(pathname: string): Promise<boolean>\n\n  protected abstract sendRenderResult(\n    req: ServerRequest,\n    res: ServerResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json' | 'rsc'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      revalidate?: Revalidate\n      swrDelta?: SwrDelta\n    }\n  ): Promise<void>\n\n  protected abstract runApi(\n    req: ServerRequest,\n    res: ServerResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean>\n\n  protected abstract renderHTML(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult>\n\n  protected abstract getIncrementalCache(options: {\n    requestHeaders: Record<string, undefined | string | string[]>\n    requestProtocol: 'http' | 'https'\n  }): Promise<import('./lib/incremental-cache').IncrementalCache>\n\n  protected abstract getResponseCache(options: {\n    dev: boolean\n  }): ResponseCacheBase\n\n  protected getServerComponentsHmrCache():\n    | ServerComponentsHmrCache\n    | undefined {\n    return this.nextConfig.experimental.serverComponentsHmrCache\n      ? (globalThis as any).__serverComponentsHmrCache\n      : undefined\n  }\n\n  protected abstract loadEnvConfig(params: {\n    dev: boolean\n    forceReload?: boolean\n  }): void\n\n  // TODO-APP: (wyattjoh): Make protected again. Used for turbopack in route-resolver.ts right now.\n  public readonly matchers: RouteMatcherManager\n  protected readonly i18nProvider?: I18NProvider\n  protected readonly localeNormalizer?: LocaleRouteNormalizer\n\n  protected readonly normalizers: {\n    readonly action: ActionPathnameNormalizer | undefined\n    readonly postponed: PostponedPathnameNormalizer | undefined\n    readonly rsc: RSCPathnameNormalizer | undefined\n    readonly prefetchRSC: PrefetchRSCPathnameNormalizer | undefined\n    readonly data: NextDataPathnameNormalizer | undefined\n  }\n\n  private readonly isAppPPREnabled: boolean\n\n  public constructor(options: ServerOptions) {\n    const {\n      dir = '.',\n      quiet = false,\n      conf,\n      dev = false,\n      minimalMode = false,\n      customServer = true,\n      hostname,\n      port,\n      experimentalTestProxy,\n    } = options\n\n    this.experimentalTestProxy = experimentalTestProxy\n    this.serverOptions = options\n\n    this.dir =\n      process.env.NEXT_RUNTIME === 'edge' ? dir : require('path').resolve(dir)\n\n    this.quiet = quiet\n    this.loadEnvConfig({ dev })\n\n    // TODO: should conf be normalized to prevent missing\n    // values from causing issues as this can be user provided\n    this.nextConfig = conf as NextConfigComplete\n    this.hostname = hostname\n    if (this.hostname) {\n      // we format the hostname so that it can be fetched\n      this.fetchHostname = formatHostname(this.hostname)\n    }\n    this.port = port\n    this.distDir =\n      process.env.NEXT_RUNTIME === 'edge'\n        ? this.nextConfig.distDir\n        : require('path').join(this.dir, this.nextConfig.distDir)\n    this.publicDir = this.getPublicDir()\n    this.hasStaticDir = !minimalMode && this.getHasStaticDir()\n\n    this.i18nProvider = this.nextConfig.i18n?.locales\n      ? new I18NProvider(this.nextConfig.i18n)\n      : undefined\n\n    // Configure the locale normalizer, it's used for routes inside `pages/`.\n    this.localeNormalizer = this.i18nProvider\n      ? new LocaleRouteNormalizer(this.i18nProvider)\n      : undefined\n\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags,\n    } = this.nextConfig\n\n    this.buildId = this.getBuildId()\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] =\n      minimalMode || !!process.env.NEXT_PRIVATE_MINIMAL_MODE\n\n    this.enabledDirectories = this.getEnabledDirectories(dev)\n\n    this.isAppPPREnabled =\n      this.enabledDirectories.app &&\n      checkIsAppPPREnabled(this.nextConfig.experimental.ppr)\n\n    this.normalizers = {\n      // We should normalize the pathname from the RSC prefix only in minimal\n      // mode as otherwise that route is not exposed external to the server as\n      // we instead only rely on the headers.\n      postponed:\n        this.isAppPPREnabled && this.minimalMode\n          ? new PostponedPathnameNormalizer()\n          : undefined,\n      rsc:\n        this.enabledDirectories.app && this.minimalMode\n          ? new RSCPathnameNormalizer()\n          : undefined,\n      prefetchRSC:\n        this.isAppPPREnabled && this.minimalMode\n          ? new PrefetchRSCPathnameNormalizer()\n          : undefined,\n      data: this.enabledDirectories.pages\n        ? new NextDataPathnameNormalizer(this.buildId)\n        : undefined,\n      action:\n        this.enabledDirectories.app && this.minimalMode\n          ? new ActionPathnameNormalizer()\n          : undefined,\n    }\n\n    this.nextFontManifest = this.getNextFontManifest()\n\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n    }\n\n    this.renderOpts = {\n      supportsDynamicResponse: true,\n      trailingSlash: this.nextConfig.trailingSlash,\n      deploymentId: this.nextConfig.deploymentId,\n      strictNextHead: this.nextConfig.experimental.strictNextHead ?? true,\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase || '',\n      buildId: this.buildId,\n      generateEtags,\n      previewProps: this.getPrerenderManifest().preview,\n      customServer: customServer === true ? true : undefined,\n      ampOptimizerConfig: this.nextConfig.experimental.amp?.optimizer,\n      basePath: this.nextConfig.basePath,\n      images: this.nextConfig.images,\n      optimizeFonts: this.nextConfig.optimizeFonts as FontConfig,\n      fontManifest:\n        (this.nextConfig.optimizeFonts as FontConfig) && !dev\n          ? this.getFontManifest()\n          : undefined,\n      optimizeCss: this.nextConfig.experimental.optimizeCss,\n      nextConfigOutput: this.nextConfig.output,\n      nextScriptWorkers: this.nextConfig.experimental.nextScriptWorkers,\n      disableOptimizedLoading:\n        this.nextConfig.experimental.disableOptimizedLoading,\n      domainLocales: this.nextConfig.i18n?.domains,\n      distDir: this.distDir,\n      serverComponents: this.enabledDirectories.app,\n      enableTainting: this.nextConfig.experimental.taint,\n      crossOrigin: this.nextConfig.crossOrigin\n        ? this.nextConfig.crossOrigin\n        : undefined,\n      largePageDataBytes: this.nextConfig.experimental.largePageDataBytes,\n      // Only the `publicRuntimeConfig` key is exposed to the client side\n      // It'll be rendered as part of __NEXT_DATA__ on the client side\n      runtimeConfig:\n        Object.keys(publicRuntimeConfig).length > 0\n          ? publicRuntimeConfig\n          : undefined,\n\n      // @ts-expect-error internal field not publicly exposed\n      isExperimentalCompile: this.nextConfig.experimental.isExperimentalCompile,\n      experimental: {\n        swrDelta: this.nextConfig.swrDelta,\n        clientTraceMetadata: this.nextConfig.experimental.clientTraceMetadata,\n        after: this.nextConfig.experimental.after ?? false,\n      },\n      onInstrumentationRequestError:\n        this.instrumentationOnRequestError.bind(this),\n    }\n\n    // Initialize next/config with the environment configuration\n    setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig,\n    })\n\n    this.pagesManifest = this.getPagesManifest()\n    this.appPathsManifest = this.getAppPathsManifest()\n    this.appPathRoutes = this.getAppPathRoutes()\n    this.interceptionRoutePatterns = this.getinterceptionRoutePatterns()\n\n    // Configure the routes.\n    this.matchers = this.getRouteMatchers()\n\n    // Start route compilation. We don't wait for the routes to finish loading\n    // because we use the `waitTillReady` promise below in `handleRequest` to\n    // wait. Also we can't `await` in the constructor.\n    void this.matchers.reload()\n\n    this.setAssetPrefix(assetPrefix)\n    this.responseCache = this.getResponseCache({ dev })\n  }\n\n  protected reloadMatchers() {\n    return this.matchers.reload()\n  }\n\n  private handleRSCRequest: RouteHandler<ServerRequest, ServerResponse> = (\n    req,\n    _res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname) return false\n\n    if (this.normalizers.prefetchRSC?.match(parsedUrl.pathname)) {\n      parsedUrl.pathname = this.normalizers.prefetchRSC.normalize(\n        parsedUrl.pathname,\n        true\n      )\n\n      // Mark the request as a router prefetch request.\n      req.headers[RSC_HEADER.toLowerCase()] = '1'\n      req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] = '1'\n      addRequestMeta(req, 'isRSCRequest', true)\n      addRequestMeta(req, 'isPrefetchRSCRequest', true)\n    } else if (this.normalizers.rsc?.match(parsedUrl.pathname)) {\n      parsedUrl.pathname = this.normalizers.rsc.normalize(\n        parsedUrl.pathname,\n        true\n      )\n\n      // Mark the request as a RSC request.\n      req.headers[RSC_HEADER.toLowerCase()] = '1'\n      addRequestMeta(req, 'isRSCRequest', true)\n    } else if (req.headers['x-now-route-matches']) {\n      // If we didn't match, return with the flight headers stripped. If in\n      // minimal mode we didn't match based on the path, this can't be a RSC\n      // request. This is because Vercel only sends this header during\n      // revalidation requests and we want the cache to instead depend on the\n      // request path for flight information.\n      stripFlightHeaders(req.headers)\n\n      return false\n    } else if (req.headers[RSC_HEADER.toLowerCase()] === '1') {\n      addRequestMeta(req, 'isRSCRequest', true)\n\n      if (req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] === '1') {\n        addRequestMeta(req, 'isPrefetchRSCRequest', true)\n      }\n    } else {\n      // Otherwise just return without doing anything.\n      return false\n    }\n\n    if (req.url) {\n      const parsed = parseUrl(req.url)\n      parsed.pathname = parsedUrl.pathname\n      req.url = formatUrl(parsed)\n    }\n\n    return false\n  }\n\n  private handleNextDataRequest: RouteHandler<ServerRequest, ServerResponse> =\n    async (req, res, parsedUrl) => {\n      const middleware = this.getMiddleware()\n      const params = matchNextDataPathname(parsedUrl.pathname)\n\n      // ignore for non-next data URLs\n      if (!params || !params.path) {\n        return false\n      }\n\n      if (params.path[0] !== this.buildId) {\n        // Ignore if its a middleware request when we aren't on edge.\n        if (\n          process.env.NEXT_RUNTIME !== 'edge' &&\n          getRequestMeta(req, 'middlewareInvoke')\n        ) {\n          return false\n        }\n\n        // Make sure to 404 if the buildId isn't correct\n        await this.render404(req, res, parsedUrl)\n        return true\n      }\n\n      // remove buildId from URL\n      params.path.shift()\n\n      const lastParam = params.path[params.path.length - 1]\n\n      // show 404 if it doesn't end with .json\n      if (typeof lastParam !== 'string' || !lastParam.endsWith('.json')) {\n        await this.render404(req, res, parsedUrl)\n        return true\n      }\n\n      // re-create page's pathname\n      let pathname = `/${params.path.join('/')}`\n      pathname = getRouteFromAssetPath(pathname, '.json')\n\n      // ensure trailing slash is normalized per config\n      if (middleware) {\n        if (this.nextConfig.trailingSlash && !pathname.endsWith('/')) {\n          pathname += '/'\n        }\n        if (\n          !this.nextConfig.trailingSlash &&\n          pathname.length > 1 &&\n          pathname.endsWith('/')\n        ) {\n          pathname = pathname.substring(0, pathname.length - 1)\n        }\n      }\n\n      if (this.i18nProvider) {\n        // Remove the port from the hostname if present.\n        const hostname = req?.headers.host?.split(':', 1)[0].toLowerCase()\n\n        const domainLocale = this.i18nProvider.detectDomainLocale(hostname)\n        const defaultLocale =\n          domainLocale?.defaultLocale ?? this.i18nProvider.config.defaultLocale\n\n        const localePathResult = this.i18nProvider.analyze(pathname)\n\n        // If the locale is detected from the path, we need to remove it\n        // from the pathname.\n        if (localePathResult.detectedLocale) {\n          pathname = localePathResult.pathname\n        }\n\n        // Update the query with the detected locale and default locale.\n        parsedUrl.query.__nextLocale = localePathResult.detectedLocale\n        parsedUrl.query.__nextDefaultLocale = defaultLocale\n\n        // If the locale is not detected from the path, we need to mark that\n        // it was not inferred from default.\n        if (!localePathResult.detectedLocale) {\n          delete parsedUrl.query.__nextInferredLocaleFromDefault\n        }\n\n        // If no locale was detected and we don't have middleware, we need\n        // to render a 404 page.\n        if (!localePathResult.detectedLocale && !middleware) {\n          parsedUrl.query.__nextLocale = defaultLocale\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n      }\n\n      parsedUrl.pathname = pathname\n      parsedUrl.query.__nextDataReq = '1'\n\n      return false\n    }\n\n  protected handleNextImageRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected handleCatchallRenderRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected handleCatchallMiddlewareRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected getRouteMatchers(): RouteMatcherManager {\n    // Create a new manifest loader that get's the manifests from the server.\n    const manifestLoader = new ServerManifestLoader((name) => {\n      switch (name) {\n        case PAGES_MANIFEST:\n          return this.getPagesManifest() ?? null\n        case APP_PATHS_MANIFEST:\n          return this.getAppPathsManifest() ?? null\n        default:\n          return null\n      }\n    })\n\n    // Configure the matchers and handlers.\n    const matchers: RouteMatcherManager = new DefaultRouteMatcherManager()\n\n    // Match pages under `pages/`.\n    matchers.push(\n      new PagesRouteMatcherProvider(\n        this.distDir,\n        manifestLoader,\n        this.i18nProvider\n      )\n    )\n\n    // Match api routes under `pages/api/`.\n    matchers.push(\n      new PagesAPIRouteMatcherProvider(\n        this.distDir,\n        manifestLoader,\n        this.i18nProvider\n      )\n    )\n\n    // If the app directory is enabled, then add the app matchers and handlers.\n    if (this.enabledDirectories.app) {\n      // Match app pages under `app/`.\n      matchers.push(\n        new AppPageRouteMatcherProvider(this.distDir, manifestLoader)\n      )\n      matchers.push(\n        new AppRouteRouteMatcherProvider(this.distDir, manifestLoader)\n      )\n    }\n\n    return matchers\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    const [err, req, ctx] = args\n\n    if (this.instrumentation) {\n      try {\n        await this.instrumentation.onRequestError?.(\n          err,\n          {\n            url: req.url || '',\n            method: req.method || 'GET',\n            // Normalize middleware headers and other server request headers\n            headers:\n              req instanceof NextRequestHint\n                ? Object.fromEntries(req.headers.entries())\n                : req.headers,\n          },\n          ctx\n        )\n      } catch (handlerErr) {\n        // Log the soft error and continue, since errors can thrown from react stream handler\n        console.error('Error in instrumentation.onRequestError:', handlerErr)\n      }\n    }\n  }\n\n  public logError(err: Error): void {\n    if (this.quiet) return\n    Log.error(err)\n  }\n\n  public async handleRequest(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    await this.prepare()\n    const method = req.method.toUpperCase()\n\n    const tracer = getTracer()\n    return tracer.withPropagatedContext(req.headers, () => {\n      return tracer.trace(\n        BaseServerSpan.handleRequest,\n        {\n          spanName: `${method} ${req.url}`,\n          kind: SpanKind.SERVER,\n          attributes: {\n            'http.method': method,\n            'http.target': req.url,\n          },\n        },\n        async (span) =>\n          this.handleRequestImpl(req, res, parsedUrl).finally(() => {\n            if (!span) return\n\n            const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n            span.setAttributes({\n              'http.status_code': res.statusCode,\n              'next.rsc': isRSCRequest,\n            })\n\n            const rootSpanAttributes = tracer.getRootSpanAttributes()\n            // We were unable to get attributes, probably OTEL is not enabled\n            if (!rootSpanAttributes) return\n\n            if (\n              rootSpanAttributes.get('next.span_type') !==\n              BaseServerSpan.handleRequest\n            ) {\n              console.warn(\n                `Unexpected root span type '${rootSpanAttributes.get(\n                  'next.span_type'\n                )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n              )\n              return\n            }\n\n            const route = rootSpanAttributes.get('next.route')\n            if (route) {\n              const name = isRSCRequest\n                ? `RSC ${method} ${route}`\n                : `${method} ${route}`\n\n              span.setAttributes({\n                'next.route': route,\n                'http.route': route,\n                'next.span_name': name,\n              })\n              span.updateName(name)\n            } else {\n              span.updateName(\n                isRSCRequest\n                  ? `RSC ${method} ${req.url}`\n                  : `${method} ${req.url}`\n              )\n            }\n          })\n      )\n    })\n  }\n\n  private async handleRequestImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    try {\n      // Wait for the matchers to be ready.\n      await this.matchers.waitTillReady()\n\n      // ensure cookies set in middleware are merged and\n      // not overridden by API routes/getServerSideProps\n      patchSetHeaderWithCookieSupport(\n        req,\n        isNodeNextResponse(res) ? res.originalResponse : res\n      )\n\n      const urlParts = (req.url || '').split('?', 1)\n      const urlNoQuery = urlParts[0]\n\n      // this normalizes repeated slashes in the path e.g. hello//world ->\n      // hello/world or backslashes to forward slashes, this does not\n      // handle trailing slash as that is handled the same as a next.config.js\n      // redirect\n      if (urlNoQuery?.match(/(\\\\|\\/\\/)/)) {\n        const cleanUrl = normalizeRepeatedSlashes(req.url!)\n        res.redirect(cleanUrl, 308).body(cleanUrl).send()\n        return\n      }\n\n      // Parse url if parsedUrl not provided\n      if (!parsedUrl || typeof parsedUrl !== 'object') {\n        if (!req.url) {\n          throw new Error('Invariant: url can not be undefined')\n        }\n\n        parsedUrl = parseUrl(req.url!, true)\n      }\n\n      if (!parsedUrl.pathname) {\n        throw new Error(\"Invariant: pathname can't be empty\")\n      }\n\n      // Parse the querystring ourselves if the user doesn't handle querystring parsing\n      if (typeof parsedUrl.query === 'string') {\n        parsedUrl.query = Object.fromEntries(\n          new URLSearchParams(parsedUrl.query)\n        )\n      }\n\n      // Update the `x-forwarded-*` headers.\n      const { originalRequest = null } = isNodeNextRequest(req) ? req : {}\n      const xForwardedProto = originalRequest?.headers['x-forwarded-proto']\n      const isHttps = xForwardedProto\n        ? xForwardedProto === 'https'\n        : !!(originalRequest?.socket as TLSSocket)?.encrypted\n\n      req.headers['x-forwarded-host'] ??= req.headers['host'] ?? this.hostname\n      req.headers['x-forwarded-port'] ??= this.port\n        ? this.port.toString()\n        : isHttps\n          ? '443'\n          : '80'\n      req.headers['x-forwarded-proto'] ??= isHttps ? 'https' : 'http'\n      req.headers['x-forwarded-for'] ??= originalRequest?.socket?.remoteAddress\n\n      // This should be done before any normalization of the pathname happens as\n      // it captures the initial URL.\n      this.attachRequestMeta(req, parsedUrl)\n\n      let finished = await this.handleRSCRequest(req, res, parsedUrl)\n      if (finished) return\n\n      const domainLocale = this.i18nProvider?.detectDomainLocale(\n        getHostname(parsedUrl, req.headers)\n      )\n\n      const defaultLocale =\n        domainLocale?.defaultLocale || this.nextConfig.i18n?.defaultLocale\n      parsedUrl.query.__nextDefaultLocale = defaultLocale\n\n      const url = parseUrlUtil(req.url.replace(/^\\/+/, '/'))\n      const pathnameInfo = getNextPathnameInfo(url.pathname, {\n        nextConfig: this.nextConfig,\n        i18nProvider: this.i18nProvider,\n      })\n      url.pathname = pathnameInfo.pathname\n\n      if (pathnameInfo.basePath) {\n        req.url = removePathPrefix(req.url!, this.nextConfig.basePath)\n      }\n\n      const useMatchedPathHeader =\n        this.minimalMode && typeof req.headers['x-matched-path'] === 'string'\n\n      // TODO: merge handling with invokePath\n      if (useMatchedPathHeader) {\n        try {\n          if (this.enabledDirectories.app) {\n            // ensure /index path is normalized for prerender\n            // in minimal mode\n            if (req.url.match(/^\\/index($|\\?)/)) {\n              req.url = req.url.replace(/^\\/index/, '/')\n            }\n            parsedUrl.pathname =\n              parsedUrl.pathname === '/index' ? '/' : parsedUrl.pathname\n          }\n\n          // x-matched-path is the source of truth, it tells what page\n          // should be rendered because we don't process rewrites in minimalMode\n          let { pathname: matchedPath } = new URL(\n            req.headers['x-matched-path'] as string,\n            'http://localhost'\n          )\n\n          let { pathname: urlPathname } = new URL(req.url, 'http://localhost')\n\n          // For ISR the URL is normalized to the prerenderPath so if\n          // it's a data request the URL path will be the data URL,\n          // basePath is already stripped by this point\n          if (this.normalizers.data?.match(urlPathname)) {\n            parsedUrl.query.__nextDataReq = '1'\n          }\n          // In minimal mode, if PPR is enabled, then we should check to see if\n          // the matched path is a postponed path, and if it is, handle it.\n          else if (\n            this.normalizers.postponed?.match(matchedPath) &&\n            req.method === 'POST'\n          ) {\n            // Decode the postponed state from the request body, it will come as\n            // an array of buffers, so collect them and then concat them to form\n            // the string.\n            const body: Array<Buffer> = []\n            for await (const chunk of req.body) {\n              body.push(chunk)\n            }\n            const postponed = Buffer.concat(body).toString('utf8')\n\n            addRequestMeta(req, 'postponed', postponed)\n\n            // If the request does not have the `x-now-route-matches` header,\n            // it means that the request has it's exact path specified in the\n            // `x-matched-path` header. In this case, we should update the\n            // pathname to the matched path.\n            if (!req.headers['x-now-route-matches']) {\n              urlPathname = this.normalizers.postponed.normalize(\n                matchedPath,\n                true\n              )\n            }\n          }\n\n          matchedPath = this.normalize(matchedPath)\n          const normalizedUrlPath = this.stripNextDataPath(urlPathname)\n\n          // Perform locale detection and normalization.\n          const localeAnalysisResult = this.i18nProvider?.analyze(matchedPath, {\n            defaultLocale,\n          })\n\n          // The locale result will be defined even if the locale was not\n          // detected for the request because it will be inferred from the\n          // default locale.\n          if (localeAnalysisResult) {\n            parsedUrl.query.__nextLocale = localeAnalysisResult.detectedLocale\n\n            // If the detected locale was inferred from the default locale, we\n            // need to modify the metadata on the request to indicate that.\n            if (localeAnalysisResult.inferredFromDefault) {\n              parsedUrl.query.__nextInferredLocaleFromDefault = '1'\n            } else {\n              delete parsedUrl.query.__nextInferredLocaleFromDefault\n            }\n          }\n\n          // TODO: check if this is needed any more?\n          matchedPath = denormalizePagePath(matchedPath)\n\n          let srcPathname = matchedPath\n          let pageIsDynamic = isDynamicRoute(srcPathname)\n\n          if (!pageIsDynamic) {\n            const match = await this.matchers.match(srcPathname, {\n              i18n: localeAnalysisResult,\n            })\n\n            // Update the source pathname to the matched page's pathname.\n            if (match) {\n              srcPathname = match.definition.pathname\n              // The page is dynamic if the params are defined.\n              pageIsDynamic = typeof match.params !== 'undefined'\n            }\n          }\n\n          // The rest of this function can't handle i18n properly, so ensure we\n          // restore the pathname with the locale information stripped from it\n          // now that we're done matching if we're using i18n.\n          if (localeAnalysisResult) {\n            matchedPath = localeAnalysisResult.pathname\n          }\n\n          const utils = getUtils({\n            pageIsDynamic,\n            page: srcPathname,\n            i18n: this.nextConfig.i18n,\n            basePath: this.nextConfig.basePath,\n            rewrites: this.getRoutesManifest()?.rewrites || {\n              beforeFiles: [],\n              afterFiles: [],\n              fallback: [],\n            },\n            caseSensitive: !!this.nextConfig.experimental.caseSensitiveRoutes,\n          })\n\n          // Ensure parsedUrl.pathname includes locale before processing\n          // rewrites or they won't match correctly.\n          if (defaultLocale && !pathnameInfo.locale) {\n            parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname}`\n          }\n\n          const pathnameBeforeRewrite = parsedUrl.pathname\n          const rewriteParams = utils.handleRewrites(req, parsedUrl)\n          const rewriteParamKeys = Object.keys(rewriteParams)\n          const didRewrite = pathnameBeforeRewrite !== parsedUrl.pathname\n\n          if (didRewrite && parsedUrl.pathname) {\n            addRequestMeta(req, 'rewroteURL', parsedUrl.pathname)\n          }\n          const routeParamKeys = new Set<string>()\n\n          for (const key of Object.keys(parsedUrl.query)) {\n            const value = parsedUrl.query[key]\n\n            normalizeNextQueryParam(key, (normalizedKey) => {\n              if (!parsedUrl) return // typeguard\n\n              parsedUrl.query[normalizedKey] = value\n              routeParamKeys.add(normalizedKey)\n              delete parsedUrl.query[key]\n            })\n          }\n\n          // interpolate dynamic params and normalize URL if needed\n          if (pageIsDynamic) {\n            let params: ParsedUrlQuery | false = {}\n\n            let paramsResult = utils.normalizeDynamicRouteParams(\n              parsedUrl.query\n            )\n\n            // for prerendered ISR paths we attempt parsing the route\n            // params from the URL directly as route-matches may not\n            // contain the correct values due to the filesystem path\n            // matching before the dynamic route has been matched\n            if (\n              !paramsResult.hasValidParams &&\n              !isDynamicRoute(normalizedUrlPath)\n            ) {\n              let matcherParams = utils.dynamicRouteMatcher?.(normalizedUrlPath)\n\n              if (matcherParams) {\n                utils.normalizeDynamicRouteParams(matcherParams)\n                Object.assign(paramsResult.params, matcherParams)\n                paramsResult.hasValidParams = true\n              }\n            }\n\n            // if an action request is bypassing a prerender and we\n            // don't have the params in the URL since it was prerendered\n            // and matched during handle: 'filesystem' rather than dynamic route\n            // resolving we need to parse the params from the matched-path.\n            // Note: this is similar to above case but from match-path instead\n            // of from the request URL since a rewrite could cause that to not\n            // match the src pathname\n            if (\n              // we can have a collision with /index and a top-level /[slug]\n              matchedPath !== '/index' &&\n              !paramsResult.hasValidParams &&\n              !isDynamicRoute(matchedPath)\n            ) {\n              let matcherParams = utils.dynamicRouteMatcher?.(matchedPath)\n\n              if (matcherParams) {\n                const curParamsResult =\n                  utils.normalizeDynamicRouteParams(matcherParams)\n\n                if (curParamsResult.hasValidParams) {\n                  Object.assign(params, matcherParams)\n                  paramsResult = curParamsResult\n                }\n              }\n            }\n\n            if (paramsResult.hasValidParams) {\n              params = paramsResult.params\n            }\n\n            if (\n              req.headers['x-now-route-matches'] &&\n              isDynamicRoute(matchedPath) &&\n              !paramsResult.hasValidParams\n            ) {\n              const opts: Record<string, string> = {}\n              const routeParams = utils.getParamsFromRouteMatches(\n                req,\n                opts,\n                parsedUrl.query.__nextLocale || ''\n              )\n\n              // If this returns a locale, it means that the locale was detected\n              // from the pathname.\n              if (opts.locale) {\n                parsedUrl.query.__nextLocale = opts.locale\n\n                // As the locale was parsed from the pathname, we should mark\n                // that the locale was not inferred as the default.\n                delete parsedUrl.query.__nextInferredLocaleFromDefault\n              }\n              paramsResult = utils.normalizeDynamicRouteParams(\n                routeParams,\n                true\n              )\n\n              if (paramsResult.hasValidParams) {\n                params = paramsResult.params\n              }\n            }\n\n            // handle the actual dynamic route name being requested\n            if (\n              utils.defaultRouteMatches &&\n              normalizedUrlPath === srcPathname &&\n              !paramsResult.hasValidParams &&\n              !utils.normalizeDynamicRouteParams({ ...params }, true)\n                .hasValidParams\n            ) {\n              params = utils.defaultRouteMatches\n            }\n\n            if (params) {\n              matchedPath = utils.interpolateDynamicPath(srcPathname, params)\n              req.url = utils.interpolateDynamicPath(req.url!, params)\n            }\n          }\n\n          if (pageIsDynamic || didRewrite) {\n            utils.normalizeVercelUrl(req, true, [\n              ...rewriteParamKeys,\n              ...Object.keys(utils.defaultRouteRegex?.groups || {}),\n            ])\n          }\n          for (const key of routeParamKeys) {\n            delete parsedUrl.query[key]\n          }\n          parsedUrl.pathname = matchedPath\n          url.pathname = parsedUrl.pathname\n          finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n          if (finished) return\n        } catch (err) {\n          if (err instanceof DecodeError || err instanceof NormalizeError) {\n            res.statusCode = 400\n            return this.renderError(null, req, res, '/_error', {})\n          }\n          throw err\n        }\n      }\n\n      addRequestMeta(req, 'isLocaleDomain', Boolean(domainLocale))\n\n      if (pathnameInfo.locale) {\n        req.url = formatUrl(url)\n        addRequestMeta(req, 'didStripLocale', true)\n      }\n\n      // If we aren't in minimal mode or there is no locale in the query\n      // string, add the locale to the query string.\n      if (!this.minimalMode || !parsedUrl.query.__nextLocale) {\n        // If the locale is in the pathname, add it to the query string.\n        if (pathnameInfo.locale) {\n          parsedUrl.query.__nextLocale = pathnameInfo.locale\n        }\n        // If the default locale is available, add it to the query string and\n        // mark it as inferred rather than implicit.\n        else if (defaultLocale) {\n          parsedUrl.query.__nextLocale = defaultLocale\n          parsedUrl.query.__nextInferredLocaleFromDefault = '1'\n        }\n      }\n\n      // set incremental cache to request meta so it can\n      // be passed down for edge functions and the fetch disk\n      // cache can be leveraged locally\n      if (\n        !(this.serverOptions as any).webServerConfig &&\n        !getRequestMeta(req, 'incrementalCache')\n      ) {\n        let protocol: 'http:' | 'https:' = 'https:'\n\n        try {\n          const parsedFullUrl = new URL(\n            getRequestMeta(req, 'initURL') || '/',\n            'http://n'\n          )\n          protocol = parsedFullUrl.protocol as 'https:' | 'http:'\n        } catch {}\n\n        const incrementalCache = await this.getIncrementalCache({\n          requestHeaders: Object.assign({}, req.headers),\n          requestProtocol: protocol.substring(0, protocol.length - 1) as\n            | 'http'\n            | 'https',\n        })\n        incrementalCache.resetRequestCache()\n        addRequestMeta(req, 'incrementalCache', incrementalCache)\n        ;(globalThis as any).__incrementalCache = incrementalCache\n      }\n\n      // set server components HMR cache to request meta so it can be passed\n      // down for edge functions\n      if (!getRequestMeta(req, 'serverComponentsHmrCache')) {\n        addRequestMeta(\n          req,\n          'serverComponentsHmrCache',\n          this.getServerComponentsHmrCache()\n        )\n      }\n\n      // when invokePath is specified we can short short circuit resolving\n      // we only honor this header if we are inside of a render worker to\n      // prevent external users coercing the routing path\n      const invokePath = getRequestMeta(req, 'invokePath')\n      const useInvokePath =\n        !useMatchedPathHeader &&\n        process.env.NEXT_RUNTIME !== 'edge' &&\n        invokePath\n\n      if (useInvokePath) {\n        const invokeStatus = getRequestMeta(req, 'invokeStatus')\n        if (invokeStatus) {\n          const invokeQuery = getRequestMeta(req, 'invokeQuery')\n\n          if (invokeQuery) {\n            Object.assign(parsedUrl.query, invokeQuery)\n          }\n\n          res.statusCode = invokeStatus\n          let err: Error | null = getRequestMeta(req, 'invokeError') || null\n\n          return this.renderError(err, req, res, '/_error', parsedUrl.query)\n        }\n\n        const parsedMatchedPath = new URL(invokePath || '/', 'http://n')\n        const invokePathnameInfo = getNextPathnameInfo(\n          parsedMatchedPath.pathname,\n          {\n            nextConfig: this.nextConfig,\n            parseData: false,\n          }\n        )\n\n        if (invokePathnameInfo.locale) {\n          parsedUrl.query.__nextLocale = invokePathnameInfo.locale\n        }\n\n        if (parsedUrl.pathname !== parsedMatchedPath.pathname) {\n          parsedUrl.pathname = parsedMatchedPath.pathname\n          addRequestMeta(req, 'rewroteURL', invokePathnameInfo.pathname)\n        }\n        const normalizeResult = normalizeLocalePath(\n          removePathPrefix(parsedUrl.pathname, this.nextConfig.basePath || ''),\n          this.nextConfig.i18n?.locales || []\n        )\n\n        if (normalizeResult.detectedLocale) {\n          parsedUrl.query.__nextLocale = normalizeResult.detectedLocale\n        }\n        parsedUrl.pathname = normalizeResult.pathname\n\n        for (const key of Object.keys(parsedUrl.query)) {\n          if (!key.startsWith('__next') && !key.startsWith('_next')) {\n            delete parsedUrl.query[key]\n          }\n        }\n        const invokeQuery = getRequestMeta(req, 'invokeQuery')\n\n        if (invokeQuery) {\n          Object.assign(parsedUrl.query, invokeQuery)\n        }\n\n        finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n        if (finished) return\n\n        await this.handleCatchallRenderRequest(req, res, parsedUrl)\n        return\n      }\n\n      if (\n        process.env.NEXT_RUNTIME !== 'edge' &&\n        getRequestMeta(req, 'middlewareInvoke')\n      ) {\n        finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n        if (finished) return\n\n        finished = await this.handleCatchallMiddlewareRequest(\n          req,\n          res,\n          parsedUrl\n        )\n        if (finished) return\n\n        const err = new Error()\n        ;(err as any).result = {\n          response: new Response(null, {\n            headers: {\n              'x-middleware-next': '1',\n            },\n          }),\n        }\n        ;(err as any).bubble = true\n        throw err\n      }\n\n      // This wasn't a request via the matched path or the invoke path, so\n      // prepare for a legacy run by removing the base path.\n\n      // ensure we strip the basePath when not using an invoke header\n      if (!useMatchedPathHeader && pathnameInfo.basePath) {\n        parsedUrl.pathname = removePathPrefix(\n          parsedUrl.pathname,\n          pathnameInfo.basePath\n        )\n      }\n\n      res.statusCode = 200\n      return await this.run(req, res, parsedUrl)\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      if (\n        (err && typeof err === 'object' && err.code === 'ERR_INVALID_URL') ||\n        err instanceof DecodeError ||\n        err instanceof NormalizeError\n      ) {\n        res.statusCode = 400\n        return this.renderError(null, req, res, '/_error', {})\n      }\n\n      if (\n        this.minimalMode ||\n        this.renderOpts.dev ||\n        (isBubbledError(err) && err.bubble)\n      ) {\n        throw err\n      }\n      this.logError(getProperError(err))\n      res.statusCode = 500\n      res.body('Internal Server Error').send()\n    }\n  }\n\n  /**\n   * Normalizes a pathname without attaching any metadata from any matched\n   * normalizer.\n   *\n   * @param pathname the pathname to normalize\n   * @returns the normalized pathname\n   */\n  private normalize = (pathname: string) => {\n    const normalizers: Array<PathnameNormalizer> = []\n\n    if (this.normalizers.data) {\n      normalizers.push(this.normalizers.data)\n    }\n\n    if (this.normalizers.postponed) {\n      normalizers.push(this.normalizers.postponed)\n    }\n\n    // We have to put the prefetch normalizer before the RSC normalizer\n    // because the RSC normalizer will match the prefetch RSC routes too.\n    if (this.normalizers.prefetchRSC) {\n      normalizers.push(this.normalizers.prefetchRSC)\n    }\n\n    if (this.normalizers.rsc) {\n      normalizers.push(this.normalizers.rsc)\n    }\n\n    if (this.normalizers.action) {\n      normalizers.push(this.normalizers.action)\n    }\n\n    for (const normalizer of normalizers) {\n      if (!normalizer.match(pathname)) continue\n\n      return normalizer.normalize(pathname, true)\n    }\n\n    return pathname\n  }\n\n  private normalizeAndAttachMetadata: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = async (req, res, url) => {\n    let finished = await this.handleNextImageRequest(req, res, url)\n    if (finished) return true\n\n    if (this.enabledDirectories.pages) {\n      finished = await this.handleNextDataRequest(req, res, url)\n      if (finished) return true\n    }\n\n    return false\n  }\n\n  /**\n   * @internal - this method is internal to Next.js and should not be used directly by end-users\n   */\n  public getRequestHandlerWithMetadata(\n    meta: RequestMeta\n  ): BaseRequestHandler<ServerRequest, ServerResponse> {\n    const handler = this.getRequestHandler()\n    return (req, res, parsedUrl) => {\n      setRequestMeta(req, meta)\n      return handler(req, res, parsedUrl)\n    }\n  }\n\n  public getRequestHandler(): BaseRequestHandler<\n    ServerRequest,\n    ServerResponse\n  > {\n    return this.handleRequest.bind(this)\n  }\n\n  protected abstract handleUpgrade(\n    req: ServerRequest,\n    socket: any,\n    head?: any\n  ): Promise<void>\n\n  public setAssetPrefix(prefix?: string): void {\n    this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : ''\n  }\n\n  protected prepared: boolean = false\n  protected preparedPromise: Promise<void> | null = null\n  /**\n   * Runs async initialization of server.\n   * It is idempotent, won't fire underlying initialization more than once.\n   */\n  public async prepare(): Promise<void> {\n    if (this.prepared) return\n\n    if (this.preparedPromise === null) {\n      // Get instrumentation module\n      this.instrumentation = await this.loadInstrumentationModule()\n      this.preparedPromise = this.prepareImpl().then(() => {\n        this.prepared = true\n        this.preparedPromise = null\n      })\n    }\n    return this.preparedPromise\n  }\n  protected async prepareImpl(): Promise<void> {}\n  protected async loadInstrumentationModule(): Promise<any> {}\n\n  // Backwards compatibility\n  protected async close(): Promise<void> {}\n\n  protected getAppPathRoutes(): Record<string, string[]> {\n    const appPathRoutes: Record<string, string[]> = {}\n\n    Object.keys(this.appPathsManifest || {}).forEach((entry) => {\n      const normalizedPath = normalizeAppPath(entry)\n      if (!appPathRoutes[normalizedPath]) {\n        appPathRoutes[normalizedPath] = []\n      }\n      appPathRoutes[normalizedPath].push(entry)\n    })\n    return appPathRoutes\n  }\n\n  protected async run(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.run, async () =>\n      this.runImpl(req, res, parsedUrl)\n    )\n  }\n\n  private async runImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    await this.handleCatchallRenderRequest(req, res, parsedUrl)\n  }\n\n  private async pipe(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.pipe, async () =>\n      this.pipeImpl(fn, partialContext)\n    )\n  }\n\n  private async pipeImpl(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<void> {\n    const isBotRequest = isBot(partialContext.req.headers['user-agent'] || '')\n    const ctx: RequestContext<ServerRequest, ServerResponse> = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        supportsDynamicResponse: !isBotRequest,\n        isBot: !!isBotRequest,\n      },\n    }\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return\n    }\n    const { req, res } = ctx\n    const originalStatus = res.statusCode\n    const { body, type } = payload\n    let { revalidate } = payload\n    if (!res.sent) {\n      const { generateEtags, poweredByHeader, dev } = this.renderOpts\n\n      // In dev, we should not cache pages for any reason.\n      if (dev) {\n        res.setHeader('Cache-Control', 'no-store, must-revalidate')\n        revalidate = undefined\n      }\n\n      await this.sendRenderResult(req, res, {\n        result: body,\n        type,\n        generateEtags,\n        poweredByHeader,\n        revalidate,\n        swrDelta: this.nextConfig.swrDelta,\n      })\n      res.statusCode = originalStatus\n    }\n  }\n\n  private async getStaticHTML(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<string | null> {\n    const ctx: RequestContext<ServerRequest, ServerResponse> = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        supportsDynamicResponse: false,\n      },\n    }\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return null\n    }\n    return payload.body.toUnchunkedString()\n  }\n\n  public async render(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    parsedUrl?: NextUrlWithParsedQuery,\n    internalRender = false\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.render, async () =>\n      this.renderImpl(req, res, pathname, query, parsedUrl, internalRender)\n    )\n  }\n\n  private getWaitUntil(): WaitUntil | undefined {\n    const builtinRequestContext = getBuiltinRequestContext()\n    if (builtinRequestContext) {\n      // the platform provided a request context.\n      // use the `waitUntil` from there, whether actually present or not --\n      // if not present, `unstable_after` will error.\n      return builtinRequestContext.waitUntil\n    }\n\n    if (process.env.__NEXT_TEST_MODE) {\n      // we're in a test, use a no-op.\n      return Server.noopWaitUntil\n    }\n\n    if (this.minimalMode || process.env.NEXT_RUNTIME === 'edge') {\n      // we're built for a serverless environment, and `waitUntil` is not available,\n      // but using a noop would likely lead to incorrect behavior,\n      // because we have no way of keeping the invocation alive.\n      // return nothing, and `unstable_after` will error if used.\n      return undefined\n    }\n\n    // we're in `next start` or `next dev`. noop is fine for both.\n    return Server.noopWaitUntil\n  }\n\n  private static noopWaitUntil(promise: Promise<any>) {\n    promise.catch((err: unknown) => {\n      console.error(err)\n    })\n  }\n\n  private async renderImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    parsedUrl?: NextUrlWithParsedQuery,\n    internalRender = false\n  ): Promise<void> {\n    if (!pathname.startsWith('/')) {\n      console.warn(\n        `Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://nextjs.org/docs/messages/render-no-starting-slash`\n      )\n    }\n\n    if (\n      this.renderOpts.customServer &&\n      pathname === '/index' &&\n      !(await this.hasPage('/index'))\n    ) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = '/'\n    }\n\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (\n      !internalRender &&\n      !this.minimalMode &&\n      !query.__nextDataReq &&\n      (req.url?.match(/^\\/_next\\//) ||\n        (this.hasStaticDir && req.url!.match(/^\\/static\\//)))\n    ) {\n      return this.handleRequest(req, res, parsedUrl)\n    }\n\n    if (isBlockedPage(pathname)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    return this.pipe((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  protected async getStaticPaths({\n    pathname,\n  }: {\n    pathname: string\n    requestHeaders: import('./lib/incremental-cache').IncrementalCache['requestHeaders']\n    page: string\n    isAppPath: boolean\n  }): Promise<{\n    staticPaths?: string[]\n    fallbackMode?: 'static' | 'blocking' | false\n  }> {\n    // Read whether or not fallback should exist from the manifest.\n    const fallbackField =\n      this.getPrerenderManifest().dynamicRoutes[pathname]?.fallback\n\n    return {\n      // `staticPaths` is intentionally set to `undefined` as it should've\n      // been caught when checking disk data.\n      staticPaths: undefined,\n      fallbackMode:\n        typeof fallbackField === 'string'\n          ? 'static'\n          : fallbackField === null\n            ? 'blocking'\n            : fallbackField,\n    }\n  }\n\n  private async renderToResponseWithComponents(\n    requestContext: RequestContext<ServerRequest, ServerResponse>,\n    findComponentsResult: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(\n      BaseServerSpan.renderToResponseWithComponents,\n      async () =>\n        this.renderToResponseWithComponentsImpl(\n          requestContext,\n          findComponentsResult\n        )\n    )\n  }\n\n  protected pathCouldBeIntercepted(resolvedPathname: string): boolean {\n    return (\n      isInterceptionRouteAppPath(resolvedPathname) ||\n      this.interceptionRoutePatterns.some((regexp) => {\n        return regexp.test(resolvedPathname)\n      })\n    )\n  }\n\n  protected setVaryHeader(\n    req: ServerRequest,\n    res: ServerResponse,\n    isAppPath: boolean,\n    resolvedPathname: string\n  ): void {\n    const baseVaryHeader = `${RSC_HEADER}, ${NEXT_ROUTER_STATE_TREE_HEADER}, ${NEXT_ROUTER_PREFETCH_HEADER}`\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n\n    let addedNextUrlToVary = false\n\n    if (isAppPath && this.pathCouldBeIntercepted(resolvedPathname)) {\n      // Interception route responses can vary based on the `Next-URL` header.\n      // We use the Vary header to signal this behavior to the client to properly cache the response.\n      res.setHeader('vary', `${baseVaryHeader}, ${NEXT_URL}`)\n      addedNextUrlToVary = true\n    } else if (isAppPath || isRSCRequest) {\n      // We don't need to include `Next-URL` in the Vary header for non-interception routes since it won't affect the response.\n      // We also set this header for pages to avoid caching issues when navigating between pages and app.\n      res.setHeader('vary', baseVaryHeader)\n    }\n\n    if (!addedNextUrlToVary) {\n      // Remove `Next-URL` from the request headers we determined it wasn't necessary to include in the Vary header.\n      // This is to avoid any dependency on the `Next-URL` header being present when preparing the response.\n      delete req.headers[NEXT_URL]\n    }\n  }\n\n  private async renderToResponseWithComponentsImpl(\n    {\n      req,\n      res,\n      pathname,\n      renderOpts: opts,\n    }: RequestContext<ServerRequest, ServerResponse>,\n    { components, query }: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    if (pathname === UNDERSCORE_NOT_FOUND_ROUTE) {\n      pathname = '/404'\n    }\n    const is404Page = pathname === '/404'\n\n    const is500Page = pathname === '/500'\n    const isAppPath = components.isAppPath === true\n\n    const hasServerProps = !!components.getServerSideProps\n    let hasStaticPaths = !!components.getStaticPaths\n    const isServerAction = getIsServerAction(req)\n    const hasGetInitialProps = !!components.Component?.getInitialProps\n    let isSSG = !!components.getStaticProps\n\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = parseUrl(req.url || '').pathname || '/'\n\n    let resolvedUrlPathname = getRequestMeta(req, 'rewroteURL') || urlPathname\n\n    this.setVaryHeader(req, res, isAppPath, resolvedUrlPathname)\n\n    let staticPaths: string[] | undefined\n\n    let fallbackMode: FallbackMode\n    let hasFallback = false\n    const isDynamic = isDynamicRoute(components.page)\n\n    const prerenderManifest = this.getPrerenderManifest()\n\n    if (isAppPath && isDynamic) {\n      const pathsResult = await this.getStaticPaths({\n        pathname,\n        page: components.page,\n        isAppPath,\n        requestHeaders: req.headers,\n      })\n\n      staticPaths = pathsResult.staticPaths\n      fallbackMode = pathsResult.fallbackMode\n      hasFallback = typeof fallbackMode !== 'undefined'\n\n      if (this.nextConfig.output === 'export') {\n        const page = components.page\n\n        if (fallbackMode !== 'static') {\n          throw new Error(\n            `Page \"${page}\" is missing exported function \"generateStaticParams()\", which is required with \"output: export\" config.`\n          )\n        }\n        const resolvedWithoutSlash = removeTrailingSlash(resolvedUrlPathname)\n        if (!staticPaths?.includes(resolvedWithoutSlash)) {\n          throw new Error(\n            `Page \"${page}\" is missing param \"${resolvedWithoutSlash}\" in \"generateStaticParams()\", which is required with \"output: export\" config.`\n          )\n        }\n      }\n\n      if (hasFallback) {\n        hasStaticPaths = true\n      }\n    }\n\n    if (\n      hasFallback ||\n      staticPaths?.includes(resolvedUrlPathname) ||\n      // this signals revalidation in deploy environments\n      // TODO: make this more generic\n      req.headers['x-now-route-matches']\n    ) {\n      isSSG = true\n    } else if (!this.renderOpts.dev) {\n      isSSG ||= !!prerenderManifest.routes[toRoute(pathname)]\n    }\n\n    // Toggle whether or not this is a Data request\n    const isNextDataRequest =\n      !!(\n        query.__nextDataReq ||\n        (req.headers['x-nextjs-data'] &&\n          (this.serverOptions as any).webServerConfig)\n      ) &&\n      (isSSG || hasServerProps)\n\n    /**\n     * If true, this indicates that the request being made is for an app\n     * prefetch request.\n     */\n    const isPrefetchRSCRequest =\n      getRequestMeta(req, 'isPrefetchRSCRequest') ?? false\n\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n\n    // when we are handling a middleware prefetch and it doesn't\n    // resolve to a static data route we bail early to avoid\n    // unexpected SSR invocations\n    if (\n      !isSSG &&\n      req.headers['x-middleware-prefetch'] &&\n      !(is404Page || pathname === '/_error')\n    ) {\n      res.setHeader('x-matched-path', pathname)\n      res.setHeader('x-middleware-skip', '1')\n      res.setHeader(\n        'cache-control',\n        'private, no-cache, no-store, max-age=0, must-revalidate'\n      )\n      res.body('{}').send()\n      return null\n    }\n\n    delete query.__nextDataReq\n\n    // normalize req.url for SSG paths as it is not exposed\n    // to getStaticProps and the asPath should not expose /_next/data\n    if (\n      isSSG &&\n      this.minimalMode &&\n      req.headers['x-matched-path'] &&\n      req.url.startsWith('/_next/data')\n    ) {\n      req.url = this.stripNextDataPath(req.url)\n    }\n\n    if (\n      !!req.headers['x-nextjs-data'] &&\n      (!res.statusCode || res.statusCode === 200)\n    ) {\n      res.setHeader(\n        'x-nextjs-matched-path',\n        `${query.__nextLocale ? `/${query.__nextLocale}` : ''}${pathname}`\n      )\n    }\n\n    const { routeModule } = components\n\n    /**\n     * If the route being rendered is an app page, and the ppr feature has been\n     * enabled, then the given route _could_ support PPR.\n     */\n    const couldSupportPPR: boolean =\n      this.isAppPPREnabled &&\n      typeof routeModule !== 'undefined' &&\n      isAppPageRouteModule(routeModule)\n\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =\n      process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING === '1' &&\n      typeof query.__nextppronly !== 'undefined' &&\n      couldSupportPPR\n\n    // This page supports PPR if it has `experimentalPPR` set to `true` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled: boolean =\n      couldSupportPPR &&\n      // In production, we'd expect to see the `experimentalPPR` flag set in the\n      // prerender manifest.\n      ((\n        prerenderManifest.routes[pathname] ??\n        prerenderManifest.dynamicRoutes[pathname]\n      )?.experimentalPPR === true ||\n        // Ideally we'd want to check the appConfig to see if this page has PPR\n        // enabled or not, but that would require plumbing the appConfig through\n        // to the server during development. We assume that the page supports it\n        // but only during development.\n        (hasDebugStaticShellQuery &&\n          (this.renderOpts.dev === true ||\n            this.experimentalTestProxy === true)))\n\n    const isDebugStaticShell: boolean =\n      hasDebugStaticShellQuery && isRoutePPREnabled\n\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses =\n      isDebugStaticShell && this.renderOpts.dev === true\n\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled\n      ? getRequestMeta(req, 'postponed')\n      : undefined\n\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest =\n      isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest\n\n    // we need to ensure the status code if /404 is visited directly\n    if (is404Page && !isNextDataRequest && !isRSCRequest) {\n      res.statusCode = 404\n    }\n\n    // ensure correct status is set when visiting a status page\n    // directly e.g. /500\n    if (STATIC_STATUS_PAGES.includes(pathname)) {\n      res.statusCode = parseInt(pathname.slice(1), 10)\n    }\n\n    if (\n      // Server actions can use non-GET/HEAD methods.\n      !isServerAction &&\n      // Resume can use non-GET/HEAD methods.\n      !minimalPostponed &&\n      !is404Page &&\n      !is500Page &&\n      pathname !== '/_error' &&\n      req.method !== 'HEAD' &&\n      req.method !== 'GET' &&\n      (typeof components.Component === 'string' || isSSG)\n    ) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      await this.renderError(null, req, res, pathname)\n      return null\n    }\n\n    // handle static page\n    if (typeof components.Component === 'string') {\n      return {\n        type: 'html',\n        // TODO: Static pages should be serialized as RenderResult\n        body: RenderResult.fromStatic(components.Component),\n      }\n    }\n\n    // Ensure that if the `amp` query parameter is falsy that we remove it from\n    // the query object. This ensures it won't be found by the `in` operator.\n    if ('amp' in query && !query.amp) delete query.amp\n\n    if (opts.supportsDynamicResponse === true) {\n      const isBotRequest = isBot(req.headers['user-agent'] || '')\n      const isSupportedDocument =\n        typeof components.Document?.getInitialProps !== 'function' ||\n        // The built-in `Document` component also supports dynamic HTML for concurrent mode.\n        NEXT_BUILTIN_DOCUMENT in components.Document\n\n      // Disable dynamic HTML in cases that we know it won't be generated,\n      // so that we can continue generating a cache key when possible.\n      // TODO-APP: should the first render for a dynamic app path\n      // be static so we can collect revalidate and populate the\n      // cache if there are no dynamic data requirements\n      opts.supportsDynamicResponse =\n        !isSSG && !isBotRequest && !query.amp && isSupportedDocument\n      opts.isBot = isBotRequest\n    }\n\n    // In development, we always want to generate dynamic HTML.\n    if (!isNextDataRequest && isAppPath && opts.dev) {\n      opts.supportsDynamicResponse = true\n    }\n\n    const defaultLocale = isSSG\n      ? this.nextConfig.i18n?.defaultLocale\n      : query.__nextDefaultLocale\n\n    const locale = query.__nextLocale\n    const locales = this.nextConfig.i18n?.locales\n\n    let previewData: PreviewData\n    let isPreviewMode = false\n\n    if (hasServerProps || isSSG || isAppPath) {\n      // For the edge runtime, we don't support preview mode in SSG.\n      if (process.env.NEXT_RUNTIME !== 'edge') {\n        const { tryGetPreviewData } =\n          require('./api-utils/node/try-get-preview-data') as typeof import('./api-utils/node/try-get-preview-data')\n        previewData = tryGetPreviewData(req, res, this.renderOpts.previewProps)\n        isPreviewMode = previewData !== false\n      }\n    }\n\n    // If this is a request for an app path that should be statically generated\n    // and we aren't in the edge runtime, strip the flight headers so it will\n    // generate the static response.\n    if (\n      isAppPath &&\n      !opts.dev &&\n      !isPreviewMode &&\n      isSSG &&\n      isRSCRequest &&\n      !isDynamicRSCRequest &&\n      (!isEdgeRuntime(opts.runtime) ||\n        (this.serverOptions as any).webServerConfig)\n    ) {\n      stripFlightHeaders(req.headers)\n    }\n\n    let isOnDemandRevalidate = false\n    let revalidateOnlyGenerated = false\n\n    if (isSSG) {\n      ;({ isOnDemandRevalidate, revalidateOnlyGenerated } =\n        checkIsOnDemandRevalidate(req, this.renderOpts.previewProps))\n    }\n\n    if (isSSG && this.minimalMode && req.headers['x-matched-path']) {\n      // the url value is already correct when the matched-path header is set\n      resolvedUrlPathname = urlPathname\n    }\n\n    urlPathname = removeTrailingSlash(urlPathname)\n    resolvedUrlPathname = removeTrailingSlash(resolvedUrlPathname)\n    if (this.localeNormalizer) {\n      resolvedUrlPathname = this.localeNormalizer.normalize(resolvedUrlPathname)\n    }\n\n    const handleRedirect = (pageData: any) => {\n      const redirect = {\n        destination: pageData.pageProps.__N_REDIRECT,\n        statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n        basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH,\n      }\n      const statusCode = getRedirectStatus(redirect)\n      const { basePath } = this.nextConfig\n\n      if (\n        basePath &&\n        redirect.basePath !== false &&\n        redirect.destination.startsWith('/')\n      ) {\n        redirect.destination = `${basePath}${redirect.destination}`\n      }\n\n      if (redirect.destination.startsWith('/')) {\n        redirect.destination = normalizeRepeatedSlashes(redirect.destination)\n      }\n\n      res\n        .redirect(redirect.destination, statusCode)\n        .body(redirect.destination)\n        .send()\n    }\n\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isNextDataRequest) {\n      resolvedUrlPathname = this.stripNextDataPath(resolvedUrlPathname)\n      urlPathname = this.stripNextDataPath(urlPathname)\n    }\n\n    let ssgCacheKey: string | null = null\n    if (\n      !isPreviewMode &&\n      isSSG &&\n      !opts.supportsDynamicResponse &&\n      !isServerAction &&\n      !minimalPostponed &&\n      !isDynamicRSCRequest\n    ) {\n      ssgCacheKey = `${locale ? `/${locale}` : ''}${\n        (pathname === '/' || resolvedUrlPathname === '/') && locale\n          ? ''\n          : resolvedUrlPathname\n      }${query.amp ? '.amp' : ''}`\n    }\n\n    if ((is404Page || is500Page) && isSSG) {\n      ssgCacheKey = `${locale ? `/${locale}` : ''}${pathname}${\n        query.amp ? '.amp' : ''\n      }`\n    }\n\n    if (ssgCacheKey) {\n      // we only encode path delimiters for path segments from\n      // getStaticPaths so we need to attempt decoding the URL\n      // to match against and only escape the path delimiters\n      // this allows non-ascii values to be handled e.g. Japanese characters\n\n      // TODO: investigate adding this handling for non-SSG pages so\n      // non-ascii names work there also\n      ssgCacheKey = ssgCacheKey\n        .split('/')\n        .map((seg) => {\n          try {\n            seg = escapePathDelimiters(decodeURIComponent(seg), true)\n          } catch (_) {\n            // An improperly encoded URL was provided\n            throw new DecodeError('failed to decode param')\n          }\n          return seg\n        })\n        .join('/')\n\n      // ensure /index and / is normalized to one key\n      ssgCacheKey =\n        ssgCacheKey === '/index' && pathname === '/' ? '/' : ssgCacheKey\n    }\n    let protocol: 'http:' | 'https:' = 'https:'\n\n    try {\n      const parsedFullUrl = new URL(\n        getRequestMeta(req, 'initURL') || '/',\n        'http://n'\n      )\n      protocol = parsedFullUrl.protocol as 'https:' | 'http:'\n    } catch {}\n\n    // use existing incrementalCache instance if available\n    const incrementalCache =\n      (globalThis as any).__incrementalCache ||\n      (await this.getIncrementalCache({\n        requestHeaders: Object.assign({}, req.headers),\n        requestProtocol: protocol.substring(0, protocol.length - 1) as\n          | 'http'\n          | 'https',\n      }))\n\n    // TODO: investigate, this is not safe across multiple concurrent requests\n    incrementalCache?.resetRequestCache()\n\n    type RendererContext = {\n      /**\n       * The postponed data for this render. This is only provided when resuming\n       * a render that has been postponed.\n       */\n      postponed: string | undefined\n    }\n    type Renderer = (\n      context: RendererContext\n    ) => Promise<ResponseCacheEntry | null>\n\n    const doRender: Renderer = async ({ postponed }) => {\n      // In development, we always want to generate dynamic HTML.\n      let supportsDynamicResponse: boolean =\n        // If we're in development, we always support dynamic HTML, unless it's\n        // a data request, in which case we only produce static HTML.\n        (!isNextDataRequest && opts.dev === true) ||\n        // If this is not SSG or does not have static paths, then it supports\n        // dynamic HTML.\n        (!isSSG && !hasStaticPaths) ||\n        // If this request has provided postponed data, it supports dynamic\n        // HTML.\n        typeof postponed === 'string' ||\n        // If this is a dynamic RSC request, then this render supports dynamic\n        // HTML (it's dynamic).\n        isDynamicRSCRequest\n\n      const origQuery = parseUrl(req.url || '', true).query\n\n      // clear any dynamic route params so they aren't in\n      // the resolvedUrl\n      if (opts.params) {\n        Object.keys(opts.params).forEach((key) => {\n          delete origQuery[key]\n        })\n      }\n      const hadTrailingSlash =\n        urlPathname !== '/' && this.nextConfig.trailingSlash\n\n      const resolvedUrl = formatUrl({\n        pathname: `${resolvedUrlPathname}${hadTrailingSlash ? '/' : ''}`,\n        // make sure to only add query values from original URL\n        query: origQuery,\n      })\n      const renderOpts: LoadedRenderOpts = {\n        ...components,\n        ...opts,\n        ...(isAppPath\n          ? {\n              incrementalCache,\n              // This is a revalidation request if the request is for a static\n              // page and it is not being resumed from a postponed render and\n              // it is not a dynamic RSC request then it is a revalidation\n              // request.\n              isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n              serverActions: this.nextConfig.experimental.serverActions,\n            }\n          : {}),\n        isNextDataRequest,\n        resolvedUrl,\n        locale,\n        locales,\n        defaultLocale,\n        // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n        // and not the resolved URL to prevent a hydration mismatch on\n        // asPath\n        resolvedAsPath:\n          hasServerProps || hasGetInitialProps\n            ? formatUrl({\n                // we use the original URL pathname less the _next/data prefix if\n                // present\n                pathname: `${urlPathname}${hadTrailingSlash ? '/' : ''}`,\n                query: origQuery,\n              })\n            : resolvedUrl,\n        experimental: {\n          ...opts.experimental,\n          isRoutePPREnabled,\n        },\n        supportsDynamicResponse,\n        isOnDemandRevalidate,\n        isDraftMode: isPreviewMode,\n        isServerAction,\n        postponed,\n        waitUntil: this.getWaitUntil(),\n        onClose: res.onClose.bind(res),\n        // only available in dev\n        setAppIsrStatus: (this as any).setAppIsrStatus,\n      }\n\n      if (isDebugStaticShell || isDebugDynamicAccesses) {\n        supportsDynamicResponse = false\n        renderOpts.nextExport = true\n        renderOpts.supportsDynamicResponse = false\n        renderOpts.isStaticGeneration = true\n        renderOpts.isRevalidate = true\n        renderOpts.isDebugStaticShell = isDebugStaticShell\n        renderOpts.isDebugDynamicAccesses = isDebugDynamicAccesses\n      }\n\n      // Legacy render methods will return a render result that needs to be\n      // served by the server.\n      let result: RenderResult\n\n      if (routeModule) {\n        if (isAppRouteRouteModule(routeModule)) {\n          if (\n            // The type check here ensures that `req` is correctly typed, and the\n            // environment variable check provides dead code elimination.\n            process.env.NEXT_RUNTIME === 'edge' ||\n            !isNodeNextRequest(req) ||\n            !isNodeNextResponse(res)\n          ) {\n            throw new Error(\n              'Invariant: App Route Route Modules cannot be used in the edge runtime'\n            )\n          }\n\n          const context: AppRouteRouteHandlerContext = {\n            params: opts.params,\n            prerenderManifest,\n            renderOpts: {\n              experimental: {\n                after: renderOpts.experimental.after,\n              },\n              supportsDynamicResponse,\n              incrementalCache,\n              isRevalidate: isSSG,\n              waitUntil: this.getWaitUntil(),\n              onClose: res.onClose.bind(res),\n              onInstrumentationRequestError:\n                this.renderOpts.onInstrumentationRequestError,\n            },\n          }\n\n          try {\n            const request = NextRequestAdapter.fromNodeNextRequest(\n              req,\n              signalFromNodeResponse(res.originalResponse)\n            )\n\n            const response = await routeModule.handle(request, context)\n\n            ;(req as any).fetchMetrics = (\n              context.renderOpts as any\n            ).fetchMetrics\n\n            const cacheTags = (context.renderOpts as any).fetchTags\n\n            // If the request is for a static response, we can cache it so long\n            // as it's not edge.\n            if (isSSG) {\n              const blob = await response.blob()\n\n              // Copy the headers from the response.\n              const headers = toNodeOutgoingHttpHeaders(response.headers)\n\n              if (cacheTags) {\n                headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n              }\n\n              if (!headers['content-type'] && blob.type) {\n                headers['content-type'] = blob.type\n              }\n\n              const revalidate = context.renderOpts.store?.revalidate ?? false\n\n              // Create the cache entry for the response.\n              const cacheEntry: ResponseCacheEntry = {\n                value: {\n                  kind: 'ROUTE',\n                  status: response.status,\n                  body: Buffer.from(await blob.arrayBuffer()),\n                  headers,\n                },\n                revalidate,\n              }\n\n              return cacheEntry\n            }\n\n            // Send the response now that we have copied it into the cache.\n            await sendResponse(\n              req,\n              res,\n              response,\n              context.renderOpts.pendingWaitUntil\n            )\n            return null\n          } catch (err) {\n            // If this is during static generation, throw the error again.\n            if (isSSG) throw err\n\n            Log.error(err)\n\n            await this.instrumentationOnRequestError(err, req, {\n              routerKind: 'App Router',\n              routePath: pathname,\n              routeType: 'route',\n            })\n\n            // Otherwise, send a 500 response.\n            await sendResponse(req, res, handleInternalServerErrorResponse())\n\n            return null\n          }\n        } else if (\n          isPagesRouteModule(routeModule) ||\n          isAppPageRouteModule(routeModule)\n        ) {\n          // An OPTIONS request to a page handler is invalid.\n          if (req.method === 'OPTIONS' && !is404Page) {\n            await sendResponse(req, res, handleBadRequestResponse())\n            return null\n          }\n\n          if (isPagesRouteModule(routeModule)) {\n            // Due to the way we pass data by mutating `renderOpts`, we can't extend\n            // the object here but only updating its `clientReferenceManifest` and\n            // `nextFontManifest` properties.\n            // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n            renderOpts.nextFontManifest = this.nextFontManifest\n            renderOpts.clientReferenceManifest =\n              components.clientReferenceManifest\n\n            const request = isNodeNextRequest(req) ? req.originalRequest : req\n            const response = isNodeNextResponse(res)\n              ? res.originalResponse\n              : res\n\n            // Call the built-in render method on the module.\n            try {\n              result = await routeModule.render(\n                // TODO: fix this type\n                // @ts-expect-error - preexisting accepted this\n                request,\n                response,\n                {\n                  page: pathname,\n                  params: opts.params,\n                  query,\n                  renderOpts,\n                }\n              )\n            } catch (err) {\n              await this.instrumentationOnRequestError(err, req, {\n                routerKind: 'Pages Router',\n                routePath: pathname,\n                routeType: 'render',\n              })\n              throw err\n            }\n          } else {\n            const module = components.routeModule as AppPageRouteModule\n\n            // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n            // object here but only updating its `nextFontManifest` field.\n            // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n            renderOpts.nextFontManifest = this.nextFontManifest\n\n            // Call the built-in render method on the module.\n            result = await module.render(req, res, {\n              page: is404Page ? '/404' : pathname,\n              params: opts.params,\n              query,\n              renderOpts,\n              serverComponentsHmrCache: this.getServerComponentsHmrCache(),\n            })\n          }\n        } else {\n          throw new Error('Invariant: Unknown route module type')\n        }\n      } else {\n        // If we didn't match a page, we should fallback to using the legacy\n        // render method.\n        result = await this.renderHTML(req, res, pathname, query, renderOpts)\n      }\n\n      const { metadata } = result\n\n      const {\n        headers = {},\n        // Add any fetch tags that were on the page to the response headers.\n        fetchTags: cacheTags,\n      } = metadata\n\n      if (cacheTags) {\n        headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n      }\n\n      // Pull any fetch metrics from the render onto the request.\n      ;(req as any).fetchMetrics = metadata.fetchMetrics\n\n      // we don't throw static to dynamic errors in dev as isSSG\n      // is a best guess in dev since we don't have the prerender pass\n      // to know whether the path is actually static or not\n      if (\n        isAppPath &&\n        isSSG &&\n        metadata.revalidate === 0 &&\n        !this.renderOpts.dev &&\n        !isRoutePPREnabled\n      ) {\n        const staticBailoutInfo = metadata.staticBailoutInfo\n\n        const err = new Error(\n          `Page changed from static to dynamic at runtime ${urlPathname}${\n            staticBailoutInfo?.description\n              ? `, reason: ${staticBailoutInfo.description}`\n              : ``\n          }` +\n            `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`\n        )\n\n        if (staticBailoutInfo?.stack) {\n          const stack = staticBailoutInfo.stack\n          err.stack = err.message + stack.substring(stack.indexOf('\\n'))\n        }\n\n        throw err\n      }\n\n      // Based on the metadata, we can determine what kind of cache result we\n      // should return.\n\n      // Handle `isNotFound`.\n      if ('isNotFound' in metadata && metadata.isNotFound) {\n        return { value: null, revalidate: metadata.revalidate }\n      }\n\n      // Handle `isRedirect`.\n      if (metadata.isRedirect) {\n        return {\n          value: {\n            kind: 'REDIRECT',\n            props: metadata.pageData ?? metadata.flightData,\n          },\n          revalidate: metadata.revalidate,\n        }\n      }\n\n      // Handle `isNull`.\n      if (result.isNull) {\n        return null\n      }\n\n      // We now have a valid HTML result that we can return to the user.\n      if (isAppPath) {\n        return {\n          value: {\n            kind: 'APP_PAGE',\n            html: result,\n            headers,\n            rscData: metadata.flightData,\n            postponed: metadata.postponed,\n            status: res.statusCode,\n          } satisfies CachedAppPageValue,\n          revalidate: metadata.revalidate,\n        }\n      }\n\n      return {\n        value: {\n          kind: 'PAGE',\n          html: result,\n          pageData: metadata.pageData ?? metadata.flightData,\n          headers,\n          status: isAppPath ? res.statusCode : undefined,\n        } satisfies CachedPageValue,\n        revalidate: metadata.revalidate,\n      }\n    }\n\n    const responseGenerator: ResponseGenerator = async (\n      hasResolved,\n      previousCacheEntry,\n      isRevalidating\n    ): Promise<ResponseCacheEntry | null> => {\n      const isProduction = !this.renderOpts.dev\n      const didRespond = hasResolved || res.sent\n\n      if (!staticPaths) {\n        ;({ staticPaths, fallbackMode } = hasStaticPaths\n          ? await this.getStaticPaths({\n              pathname,\n              requestHeaders: req.headers,\n              isAppPath,\n              page: components.page,\n            })\n          : { staticPaths: undefined, fallbackMode: false })\n      }\n\n      if (fallbackMode === 'static' && isBot(req.headers['user-agent'] || '')) {\n        fallbackMode = 'blocking'\n      }\n\n      // skip on-demand revalidate if cache is not present and\n      // revalidate-if-generated is set\n      if (\n        isOnDemandRevalidate &&\n        revalidateOnlyGenerated &&\n        !previousCacheEntry &&\n        !this.minimalMode\n      ) {\n        await this.render404(req, res)\n        return null\n      }\n\n      if (previousCacheEntry?.isStale === -1) {\n        isOnDemandRevalidate = true\n      }\n\n      // only allow on-demand revalidate for fallback: true/blocking\n      // or for prerendered fallback: false paths\n      if (\n        isOnDemandRevalidate &&\n        (fallbackMode !== false || previousCacheEntry)\n      ) {\n        fallbackMode = 'blocking'\n      }\n\n      // We use `ssgCacheKey` here as it is normalized to match the encoding\n      // from getStaticPaths along with including the locale.\n      //\n      // We use the `resolvedUrlPathname` for the development case when this\n      // is an app path since it doesn't include locale information.\n      let staticPathKey =\n        ssgCacheKey ?? (opts.dev && isAppPath ? resolvedUrlPathname : null)\n      if (staticPathKey && query.amp) {\n        staticPathKey = staticPathKey.replace(/\\.amp$/, '')\n      }\n\n      const isPageIncludedInStaticPaths =\n        staticPathKey && staticPaths?.includes(staticPathKey)\n\n      if ((this.nextConfig.experimental as any).isExperimentalCompile) {\n        fallbackMode = 'blocking'\n      }\n\n      // When we did not respond from cache, we need to choose to block on\n      // rendering or return a skeleton.\n      //\n      // - Data requests always block.\n      // - Blocking mode fallback always blocks.\n      // - Preview mode toggles all pages to be resolved in a blocking manner.\n      // - Non-dynamic pages should block (though this is an impossible\n      //   case in production).\n      // - Dynamic pages should return their skeleton if not defined in\n      //   getStaticPaths, then finish the data request on the client-side.\n      //\n      if (\n        process.env.NEXT_RUNTIME !== 'edge' &&\n        !this.minimalMode &&\n        fallbackMode !== 'blocking' &&\n        staticPathKey &&\n        !didRespond &&\n        !isPreviewMode &&\n        isDynamic &&\n        (isProduction || !staticPaths || !isPageIncludedInStaticPaths)\n      ) {\n        if (\n          // In development, fall through to render to handle missing\n          // getStaticPaths.\n          (isProduction || (staticPaths && staticPaths?.length > 0)) &&\n          // When fallback isn't present, abort this render so we 404\n          fallbackMode !== 'static'\n        ) {\n          throw new NoFallbackError()\n        }\n\n        if (!isNextDataRequest) {\n          // Production already emitted the fallback as static HTML.\n          if (isProduction) {\n            const html = await this.getFallback(\n              locale ? `/${locale}${pathname}` : pathname\n            )\n\n            return {\n              value: {\n                kind: 'PAGE',\n                html: RenderResult.fromStatic(html),\n                status: undefined,\n                headers: undefined,\n                pageData: {},\n              },\n            }\n          }\n          // We need to generate the fallback on-demand for development.\n          else {\n            query.__nextFallback = 'true'\n\n            // We pass `undefined` as there cannot be a postponed state in\n            // development.\n            const result = await doRender({ postponed: undefined })\n            if (!result) {\n              return null\n            }\n            // Prevent caching this result\n            delete result.revalidate\n            return result\n          }\n        }\n      }\n\n      const context: RendererContext = {\n        // Only requests that aren't revalidating can be resumed. If we have the\n        // minimal postponed data, then we should resume the render with it.\n        postponed:\n          !isOnDemandRevalidate && !isRevalidating && minimalPostponed\n            ? minimalPostponed\n            : undefined,\n      }\n\n      // When we're in minimal mode, if we're trying to debug the static shell,\n      // we should just return nothing instead of resuming the dynamic render.\n      if (\n        (isDebugStaticShell || isDebugDynamicAccesses) &&\n        typeof context.postponed !== 'undefined'\n      ) {\n        return {\n          revalidate: 1,\n          value: {\n            kind: 'PAGE',\n            html: RenderResult.fromStatic(''),\n            pageData: {},\n            headers: undefined,\n            status: undefined,\n          },\n        }\n      }\n\n      // Perform the render.\n      const result = await doRender(context)\n      if (!result) return null\n\n      return {\n        ...result,\n        revalidate:\n          result.revalidate !== undefined\n            ? result.revalidate\n            : /* default to minimum revalidate (this should be an invariant) */ 1,\n      }\n    }\n\n    const cacheEntry = await this.responseCache.get(\n      ssgCacheKey,\n      responseGenerator,\n      {\n        routeKind: routeModule?.definition.kind,\n        incrementalCache,\n        isOnDemandRevalidate,\n        isPrefetch: req.headers.purpose === 'prefetch',\n        isRoutePPREnabled,\n      }\n    )\n\n    if (!cacheEntry) {\n      if (ssgCacheKey && !(isOnDemandRevalidate && revalidateOnlyGenerated)) {\n        // A cache entry might not be generated if a response is written\n        // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n        // have a cache key. If we do have a cache key but we don't end up\n        // with a cache entry, then either Next.js or the application has a\n        // bug that needs fixing.\n        throw new Error('invariant: cache entry required but not generated')\n      }\n      return null\n    }\n\n    const didPostpone =\n      cacheEntry.value?.kind === 'APP_PAGE' &&\n      typeof cacheEntry.value.postponed === 'string'\n\n    if (\n      isSSG &&\n      !this.minimalMode &&\n      // We don't want to send a cache header for requests that contain dynamic\n      // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n      // request, then we should set the cache header.\n      !isDynamicRSCRequest &&\n      (!didPostpone || isPrefetchRSCRequest)\n    ) {\n      // set x-nextjs-cache header to match the header\n      // we set for the image-optimizer\n      res.setHeader(\n        'x-nextjs-cache',\n        isOnDemandRevalidate\n          ? 'REVALIDATED'\n          : cacheEntry.isMiss\n            ? 'MISS'\n            : cacheEntry.isStale\n              ? 'STALE'\n              : 'HIT'\n      )\n      // Set a header used by the client router to signal the response is static\n      // and should respect the `static` cache staleTime value.\n      res.setHeader(NEXT_IS_PRERENDER_HEADER, '1')\n    }\n\n    const { value: cachedData } = cacheEntry\n\n    // If the cache value is an image, we should error early.\n    if (cachedData?.kind === 'IMAGE') {\n      throw new Error('invariant SSG should not return an image cache value')\n    }\n\n    // Coerce the revalidate parameter from the render.\n    let revalidate: Revalidate | undefined\n\n    // If this is a resume request in minimal mode it is streamed with dynamic\n    // content and should not be cached.\n    if (minimalPostponed) {\n      revalidate = 0\n    }\n\n    // If this is in minimal mode and this is a flight request that isn't a\n    // prefetch request while PPR is enabled, it cannot be cached as it contains\n    // dynamic content.\n    else if (\n      this.minimalMode &&\n      isRSCRequest &&\n      !isPrefetchRSCRequest &&\n      isRoutePPREnabled\n    ) {\n      revalidate = 0\n    } else if (\n      typeof cacheEntry.revalidate !== 'undefined' &&\n      (!this.renderOpts.dev || (hasServerProps && !isNextDataRequest))\n    ) {\n      // If this is a preview mode request, we shouldn't cache it\n      if (isPreviewMode) {\n        revalidate = 0\n      }\n\n      // If this isn't SSG, then we should set change the header only if it is\n      // not set already.\n      else if (!isSSG) {\n        if (!res.getHeader('Cache-Control')) {\n          revalidate = 0\n        }\n      }\n\n      // If we are rendering the 404 page we derive the cache-control\n      // revalidate period from the value that trigged the not found\n      // to be rendered. So if `getStaticProps` returns\n      // { notFound: true, revalidate 60 } the revalidate period should\n      // be 60 but if a static asset 404s directly it should have a revalidate\n      // period of 0 so that it doesn't get cached unexpectedly by a CDN\n      else if (is404Page) {\n        const notFoundRevalidate = getRequestMeta(req, 'notFoundRevalidate')\n        revalidate =\n          typeof notFoundRevalidate === 'undefined' ? 0 : notFoundRevalidate\n      }\n\n      // If the cache entry has a revalidate value that's a number, use it.\n      else if (typeof cacheEntry.revalidate === 'number') {\n        if (cacheEntry.revalidate < 1) {\n          throw new Error(\n            `Invariant: invalid Cache-Control duration provided: ${cacheEntry.revalidate} < 1`\n          )\n        }\n\n        revalidate = cacheEntry.revalidate\n      }\n      // Otherwise if the revalidate value is false, then we should use the cache\n      // time of one year.\n      else if (cacheEntry.revalidate === false) {\n        revalidate = CACHE_ONE_YEAR\n      }\n    }\n\n    cacheEntry.revalidate = revalidate\n\n    // If there's a callback for `onCacheEntry`, call it with the cache entry\n    // and the revalidate options.\n    const onCacheEntry = getRequestMeta(req, 'onCacheEntry')\n    if (onCacheEntry) {\n      const finished = await onCacheEntry(\n        {\n          ...cacheEntry,\n          // TODO: remove this when upstream doesn't\n          // always expect this value to be \"PAGE\"\n          value: {\n            ...cacheEntry.value,\n            kind:\n              cacheEntry.value?.kind === 'APP_PAGE'\n                ? 'PAGE'\n                : cacheEntry.value?.kind,\n          },\n        },\n        {\n          url: getRequestMeta(req, 'initURL'),\n        }\n      )\n      if (finished) {\n        // TODO: maybe we have to end the request?\n        return null\n      }\n    }\n\n    if (!cachedData) {\n      // add revalidate metadata before rendering 404 page\n      // so that we can use this as source of truth for the\n      // cache-control header instead of what the 404 page returns\n      // for the revalidate value\n      addRequestMeta(req, 'notFoundRevalidate', cacheEntry.revalidate)\n\n      if (cacheEntry.revalidate) {\n        res.setHeader(\n          'Cache-Control',\n          formatRevalidate({\n            revalidate: cacheEntry.revalidate,\n            swrDelta: this.nextConfig.swrDelta,\n          })\n        )\n      }\n      if (isNextDataRequest) {\n        res.statusCode = 404\n        res.body('{\"notFound\":true}').send()\n        return null\n      }\n\n      if (this.renderOpts.dev) {\n        query.__nextNotFoundSrcPage = pathname\n      }\n      await this.render404(req, res, { pathname, query }, false)\n      return null\n    } else if (cachedData.kind === 'REDIRECT') {\n      if (cacheEntry.revalidate) {\n        res.setHeader(\n          'Cache-Control',\n          formatRevalidate({\n            revalidate: cacheEntry.revalidate,\n            swrDelta: this.nextConfig.swrDelta,\n          })\n        )\n      }\n\n      if (isNextDataRequest) {\n        return {\n          type: 'json',\n          body: RenderResult.fromStatic(\n            // @TODO: Handle flight data.\n            JSON.stringify(cachedData.props)\n          ),\n          revalidate: cacheEntry.revalidate,\n        }\n      } else {\n        await handleRedirect(cachedData.props)\n        return null\n      }\n    } else if (cachedData.kind === 'ROUTE') {\n      const headers = { ...cachedData.headers }\n\n      if (!(this.minimalMode && isSSG)) {\n        delete headers[NEXT_CACHE_TAGS_HEADER]\n      }\n\n      await sendResponse(\n        req,\n        res,\n        new Response(cachedData.body, {\n          headers: fromNodeOutgoingHttpHeaders(headers),\n          status: cachedData.status || 200,\n        })\n      )\n      return null\n    } else if (cachedData.kind === 'APP_PAGE') {\n      // If the request has a postponed state and it's a resume request we\n      // should error.\n      if (cachedData.postponed && minimalPostponed) {\n        throw new Error(\n          'Invariant: postponed state should not be present on a resume request'\n        )\n      }\n\n      if (cachedData.headers) {\n        const headers = { ...cachedData.headers }\n\n        if (!this.minimalMode || !isSSG) {\n          delete headers[NEXT_CACHE_TAGS_HEADER]\n        }\n\n        for (let [key, value] of Object.entries(headers)) {\n          if (typeof value === 'undefined') continue\n\n          if (Array.isArray(value)) {\n            for (const v of value) {\n              res.appendHeader(key, v)\n            }\n          } else if (typeof value === 'number') {\n            value = value.toString()\n            res.appendHeader(key, value)\n          } else {\n            res.appendHeader(key, value)\n          }\n        }\n      }\n\n      if (\n        this.minimalMode &&\n        isSSG &&\n        cachedData.headers?.[NEXT_CACHE_TAGS_HEADER]\n      ) {\n        res.setHeader(\n          NEXT_CACHE_TAGS_HEADER,\n          cachedData.headers[NEXT_CACHE_TAGS_HEADER] as string\n        )\n      }\n\n      // If the request is a data request, then we shouldn't set the status code\n      // from the response because it should always be 200. This should be gated\n      // behind the experimental PPR flag.\n      if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n        res.statusCode = cachedData.status\n      }\n\n      // Mark that the request did postpone if this is a data request.\n      if (cachedData.postponed && isRSCRequest) {\n        res.setHeader(NEXT_DID_POSTPONE_HEADER, '1')\n      }\n\n      // we don't go through this block when preview mode is true\n      // as preview mode is a dynamic request (bypasses cache) and doesn't\n      // generate both HTML and payloads in the same request so continue to just\n      // return the generated payload\n      if (isRSCRequest && !isPreviewMode) {\n        // If this is a dynamic RSC request, then stream the response.\n        if (typeof cachedData.rscData === 'undefined') {\n          if (cachedData.postponed) {\n            throw new Error('Invariant: Expected postponed to be undefined')\n          }\n\n          return {\n            type: 'rsc',\n            body: cachedData.html,\n            // Dynamic RSC responses cannot be cached, even if they're\n            // configured with `force-static` because we have no way of\n            // distinguishing between `force-static` and pages that have no\n            // postponed state.\n            // TODO: distinguish `force-static` from pages with no postponed state (static)\n            revalidate: isDynamicRSCRequest ? 0 : cacheEntry.revalidate,\n          }\n        }\n\n        // As this isn't a prefetch request, we should serve the static flight\n        // data.\n        return {\n          type: 'rsc',\n          body: RenderResult.fromStatic(cachedData.rscData),\n          revalidate: cacheEntry.revalidate,\n        }\n      }\n\n      // This is a request for HTML data.\n      let body = cachedData.html\n\n      // If there's no postponed state, we should just serve the HTML. This\n      // should also be the case for a resume request because it's completed\n      // as a server render (rather than a static render).\n      if (!cachedData.postponed || this.minimalMode) {\n        return {\n          type: 'html',\n          body,\n          revalidate: cacheEntry.revalidate,\n        }\n      }\n\n      // If we're debugging the static shell or the dynamic API accesses, we\n      // should just serve the HTML without resuming the render. The returned\n      // HTML will be the static shell so all the Dynamic API's will be used\n      // during static generation.\n      if (isDebugStaticShell || isDebugDynamicAccesses) {\n        // Since we're not resuming the render, we need to at least add the\n        // closing body and html tags to create valid HTML.\n        body.chain(\n          new ReadableStream({\n            start(controller) {\n              controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n              controller.close()\n            },\n          })\n        )\n\n        return { type: 'html', body, revalidate: 0 }\n      }\n\n      // This request has postponed, so let's create a new transformer that the\n      // dynamic data can pipe to that will attach the dynamic data to the end\n      // of the response.\n      const transformer = new TransformStream<Uint8Array, Uint8Array>()\n      body.chain(transformer.readable)\n\n      // Perform the render again, but this time, provide the postponed state.\n      // We don't await because we want the result to start streaming now, and\n      // we've already chained the transformer's readable to the render result.\n      doRender({ postponed: cachedData.postponed })\n        .then(async (result) => {\n          if (!result) {\n            throw new Error('Invariant: expected a result to be returned')\n          }\n\n          if (result.value?.kind !== 'APP_PAGE') {\n            throw new Error(\n              `Invariant: expected a page response, got ${result.value?.kind}`\n            )\n          }\n\n          // Pipe the resume result to the transformer.\n          await result.value.html.pipeTo(transformer.writable)\n        })\n        .catch((err) => {\n          // An error occurred during piping or preparing the render, abort\n          // the transformers writer so we can terminate the stream.\n          transformer.writable.abort(err).catch((e) => {\n            console.error(\"couldn't abort transformer\", e)\n          })\n        })\n\n      return {\n        type: 'html',\n        body,\n        // We don't want to cache the response if it has postponed data because\n        // the response being sent to the client it's dynamic parts are streamed\n        // to the client on the same request.\n        revalidate: 0,\n      }\n    } else if (isNextDataRequest) {\n      return {\n        type: 'json',\n        body: RenderResult.fromStatic(JSON.stringify(cachedData.pageData)),\n        revalidate: cacheEntry.revalidate,\n      }\n    } else {\n      return {\n        type: 'html',\n        body: cachedData.html,\n        revalidate: cacheEntry.revalidate,\n      }\n    }\n  }\n\n  private stripNextDataPath(path: string, stripLocale = true) {\n    if (path.includes(this.buildId)) {\n      const splitPath = path.substring(\n        path.indexOf(this.buildId) + this.buildId.length\n      )\n\n      path = denormalizePagePath(splitPath.replace(/\\.json$/, ''))\n    }\n\n    if (this.localeNormalizer && stripLocale) {\n      return this.localeNormalizer.normalize(path)\n    }\n    return path\n  }\n\n  // map the route to the actual bundle name\n  protected getOriginalAppPaths(route: string) {\n    if (this.enabledDirectories.app) {\n      const originalAppPath = this.appPathRoutes?.[route]\n\n      if (!originalAppPath) {\n        return null\n      }\n\n      return originalAppPath\n    }\n    return null\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const { query, pathname } = ctx\n\n    const appPaths = this.getOriginalAppPaths(pathname)\n    const isAppPath = Array.isArray(appPaths)\n\n    let page = pathname\n    if (isAppPath) {\n      // the last item in the array is the root page, if there are parallel routes\n      page = appPaths[appPaths.length - 1]\n    }\n\n    const result = await this.findPageComponents({\n      page,\n      query,\n      params: ctx.renderOpts.params || {},\n      isAppPath,\n      sriEnabled: !!this.nextConfig.experimental.sri?.algorithm,\n      appPaths,\n      // Ensuring for loading page component routes is done via the matcher.\n      shouldEnsure: false,\n    })\n    if (result) {\n      getTracer().getRootSpanAttributes()?.set('next.route', pathname)\n      try {\n        return await this.renderToResponseWithComponents(ctx, result)\n      } catch (err) {\n        const isNoFallbackError = err instanceof NoFallbackError\n\n        if (!isNoFallbackError || (isNoFallbackError && bubbleNoFallback)) {\n          throw err\n        }\n      }\n    }\n    return false\n  }\n\n  private async renderToResponse(\n    ctx: RequestContext<ServerRequest, ServerResponse>\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(\n      BaseServerSpan.renderToResponse,\n      {\n        spanName: `rendering page`,\n        attributes: {\n          'next.route': ctx.pathname,\n        },\n      },\n      async () => {\n        return this.renderToResponseImpl(ctx)\n      }\n    )\n  }\n\n  protected abstract getMiddleware(): MiddlewareRoutingItem | undefined\n  protected abstract getFallbackErrorComponents(\n    url?: string\n  ): Promise<LoadComponentsReturnType | null>\n  protected abstract getRoutesManifest(): NormalizedRouteManifest | undefined\n\n  private async renderToResponseImpl(\n    ctx: RequestContext<ServerRequest, ServerResponse>\n  ): Promise<ResponsePayload | null> {\n    const { res, query, pathname } = ctx\n    let page = pathname\n    const bubbleNoFallback = !!query._nextBubbleNoFallback\n    delete query[NEXT_RSC_UNION_QUERY]\n    delete query._nextBubbleNoFallback\n\n    const options: MatchOptions = {\n      i18n: this.i18nProvider?.fromQuery(pathname, query),\n    }\n\n    try {\n      for await (const match of this.matchers.matchAll(pathname, options)) {\n        // when a specific invoke-output is meant to be matched\n        // ensure a prior dynamic route/page doesn't take priority\n        const invokeOutput = getRequestMeta(ctx.req, 'invokeOutput')\n        if (\n          !this.minimalMode &&\n          typeof invokeOutput === 'string' &&\n          isDynamicRoute(invokeOutput || '') &&\n          invokeOutput !== match.definition.pathname\n        ) {\n          continue\n        }\n\n        const result = await this.renderPageComponent(\n          {\n            ...ctx,\n            pathname: match.definition.pathname,\n            renderOpts: {\n              ...ctx.renderOpts,\n              params: match.params,\n            },\n          },\n          bubbleNoFallback\n        )\n        if (result !== false) return result\n      }\n\n      // currently edge functions aren't receiving the x-matched-path\n      // header so we need to fallback to matching the current page\n      // when we weren't able to match via dynamic route to handle\n      // the rewrite case\n      // @ts-expect-error extended in child class web-server\n      if (this.serverOptions.webServerConfig) {\n        // @ts-expect-error extended in child class web-server\n        ctx.pathname = this.serverOptions.webServerConfig.page\n        const result = await this.renderPageComponent(ctx, bubbleNoFallback)\n        if (result !== false) return result\n      }\n    } catch (error) {\n      const err = getProperError(error)\n\n      if (error instanceof MissingStaticPage) {\n        console.error(\n          'Invariant: failed to load static page',\n          JSON.stringify(\n            {\n              page,\n              url: ctx.req.url,\n              matchedPath: ctx.req.headers['x-matched-path'],\n              initUrl: getRequestMeta(ctx.req, 'initURL'),\n              didRewrite: !!getRequestMeta(ctx.req, 'rewroteURL'),\n              rewroteUrl: getRequestMeta(ctx.req, 'rewroteURL'),\n            },\n            null,\n            2\n          )\n        )\n        throw err\n      }\n\n      if (err instanceof NoFallbackError && bubbleNoFallback) {\n        throw err\n      }\n      if (err instanceof DecodeError || err instanceof NormalizeError) {\n        res.statusCode = 400\n        return await this.renderErrorToResponse(ctx, err)\n      }\n\n      res.statusCode = 500\n\n      // if pages/500 is present we still need to trigger\n      // /_error `getInitialProps` to allow reporting error\n      if (await this.hasPage('/500')) {\n        ctx.query.__nextCustomErrorRender = '1'\n        await this.renderErrorToResponse(ctx, err)\n        delete ctx.query.__nextCustomErrorRender\n      }\n\n      const isWrappedError = err instanceof WrappedBuildError\n\n      if (!isWrappedError) {\n        if (\n          (this.minimalMode && process.env.NEXT_RUNTIME !== 'edge') ||\n          this.renderOpts.dev\n        ) {\n          if (isError(err)) err.page = page\n          throw err\n        }\n        this.logError(getProperError(err))\n      }\n      const response = await this.renderErrorToResponse(\n        ctx,\n        isWrappedError ? (err as WrappedBuildError).innerError : err\n      )\n      return response\n    }\n\n    if (\n      this.getMiddleware() &&\n      !!ctx.req.headers['x-nextjs-data'] &&\n      (!res.statusCode || res.statusCode === 200 || res.statusCode === 404)\n    ) {\n      res.setHeader(\n        'x-nextjs-matched-path',\n        `${query.__nextLocale ? `/${query.__nextLocale}` : ''}${pathname}`\n      )\n      res.statusCode = 200\n      res.setHeader('content-type', 'application/json')\n      res.body('{}')\n      res.send()\n      return null\n    }\n\n    res.statusCode = 404\n    return this.renderErrorToResponse(ctx, null)\n  }\n\n  public async renderToHTML(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return getTracer().trace(BaseServerSpan.renderToHTML, async () => {\n      return this.renderToHTMLImpl(req, res, pathname, query)\n    })\n  }\n\n  private async renderToHTMLImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.renderError, async () => {\n      return this.renderErrorImpl(err, req, res, pathname, query, setHeaders)\n    })\n  }\n\n  private async renderErrorImpl(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    if (setHeaders) {\n      res.setHeader(\n        'Cache-Control',\n        'no-cache, no-store, max-age=0, must-revalidate'\n      )\n    }\n\n    return this.pipe(\n      async (ctx) => {\n        const response = await this.renderErrorToResponse(ctx, err)\n        if (this.minimalMode && res.statusCode === 500) {\n          throw err\n        }\n        return response\n      },\n      { req, res, pathname, query }\n    )\n  }\n\n  private customErrorNo404Warn = execOnce(() => {\n    Log.warn(\n      `You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://nextjs.org/docs/messages/custom-error-no-custom-404`\n    )\n  })\n\n  private async renderErrorToResponse(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    err: Error | null\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(BaseServerSpan.renderErrorToResponse, async () => {\n      return this.renderErrorToResponseImpl(ctx, err)\n    })\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    err: Error | null\n  ): Promise<ResponsePayload | null> {\n    // Short-circuit favicon.ico in development to avoid compiling 404 page when the app has no favicon.ico.\n    // Since favicon.ico is automatically requested by the browser.\n    if (this.renderOpts.dev && ctx.pathname === '/favicon.ico') {\n      return {\n        type: 'html',\n        body: RenderResult.fromStatic(''),\n      }\n    }\n    const { res, query } = ctx\n\n    try {\n      let result: null | FindComponentsResult = null\n\n      const is404 = res.statusCode === 404\n      let using404Page = false\n\n      if (is404) {\n        if (this.enabledDirectories.app) {\n          // Use the not-found entry in app directory\n          result = await this.findPageComponents({\n            page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n            query,\n            params: {},\n            isAppPath: true,\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n          using404Page = result !== null\n        }\n\n        if (!result && (await this.hasPage('/404'))) {\n          result = await this.findPageComponents({\n            page: '/404',\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 404 route.\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n          using404Page = result !== null\n        }\n      }\n      let statusPage = `/${res.statusCode}`\n\n      if (\n        !ctx.query.__nextCustomErrorRender &&\n        !result &&\n        STATIC_STATUS_PAGES.includes(statusPage)\n      ) {\n        // skip ensuring /500 in dev mode as it isn't used and the\n        // dev overlay is used instead\n        if (statusPage !== '/500' || !this.renderOpts.dev) {\n          result = await this.findPageComponents({\n            page: statusPage,\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 500\n            // route.\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n        }\n      }\n\n      if (!result) {\n        result = await this.findPageComponents({\n          page: '/_error',\n          query,\n          params: {},\n          isAppPath: false,\n          // Ensuring can't be done here because you never \"match\" an error\n          // route.\n          shouldEnsure: true,\n          url: ctx.req.url,\n        })\n        statusPage = '/_error'\n      }\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !using404Page &&\n        (await this.hasPage('/_error')) &&\n        !(await this.hasPage('/404'))\n      ) {\n        this.customErrorNo404Warn()\n      }\n\n      if (!result) {\n        // this can occur when a project directory has been moved/deleted\n        // which is handled in the parent process in development\n        if (this.renderOpts.dev) {\n          return {\n            type: 'html',\n            // wait for dev-server to restart before refreshing\n            body: RenderResult.fromStatic(\n              `\n              <pre>missing required error components, refreshing...</pre>\n              <script>\n                async function check() {\n                  const res = await fetch(location.href).catch(() => ({}))\n\n                  if (res.status === 200) {\n                    location.reload()\n                  } else {\n                    setTimeout(check, 1000)\n                  }\n                }\n                check()\n              </script>`\n            ),\n          }\n        }\n\n        throw new WrappedBuildError(\n          new Error('missing required error components')\n        )\n      }\n\n      // If the page has a route module, use it for the new match. If it doesn't\n      // have a route module, remove the match.\n      if (result.components.routeModule) {\n        addRequestMeta(ctx.req, 'match', {\n          definition: result.components.routeModule.definition,\n          params: undefined,\n        })\n      } else {\n        removeRequestMeta(ctx.req, 'match')\n      }\n\n      try {\n        return await this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: statusPage,\n            renderOpts: {\n              ...ctx.renderOpts,\n              err,\n            },\n          },\n          result\n        )\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error('invariant: failed to render error page')\n        }\n        throw maybeFallbackError\n      }\n    } catch (error) {\n      const renderToHtmlError = getProperError(error)\n      const isWrappedError = renderToHtmlError instanceof WrappedBuildError\n      if (!isWrappedError) {\n        this.logError(renderToHtmlError)\n      }\n      res.statusCode = 500\n      const fallbackComponents = await this.getFallbackErrorComponents(\n        ctx.req.url\n      )\n\n      if (fallbackComponents) {\n        // There was an error, so use it's definition from the route module\n        // to add the match to the request.\n        addRequestMeta(ctx.req, 'match', {\n          definition: fallbackComponents.routeModule!.definition,\n          params: undefined,\n        })\n\n        return this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: '/_error',\n            renderOpts: {\n              ...ctx.renderOpts,\n              // We render `renderToHtmlError` here because `err` is\n              // already captured in the stacktrace.\n              err: isWrappedError\n                ? renderToHtmlError.innerError\n                : renderToHtmlError,\n            },\n          },\n          {\n            query,\n            components: fallbackComponents,\n          }\n        )\n      }\n      return {\n        type: 'html',\n        body: RenderResult.fromStatic('Internal Server Error'),\n      }\n    }\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderErrorToResponse(ctx, err), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async render404(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: Pick<NextUrlWithParsedQuery, 'pathname' | 'query'>,\n    setHeaders = true\n  ): Promise<void> {\n    const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(req.url!, true)\n\n    if (this.nextConfig.i18n) {\n      query.__nextLocale ||= this.nextConfig.i18n.defaultLocale\n      query.__nextDefaultLocale ||= this.nextConfig.i18n.defaultLocale\n    }\n\n    res.statusCode = 404\n    return this.renderError(null, req, res, pathname!, query, setHeaders)\n  }\n}\n","// Translate a pages asset path (relative from a common prefix) back into its logical route\n\nimport { isDynamicRoute } from './is-dynamic'\n\n// \"asset path\" being its javascript file, data file, prerendered html,...\nexport default function getRouteFromAssetPath(\n  assetPath: string,\n  ext: string = ''\n): string {\n  assetPath = assetPath.replace(/\\\\/g, '/')\n  assetPath =\n    ext && assetPath.endsWith(ext) ? assetPath.slice(0, -ext.length) : assetPath\n  if (assetPath.startsWith('/index/') && !isDynamicRoute(assetPath)) {\n    assetPath = assetPath.slice(6)\n  } else if (assetPath === '/index') {\n    assetPath = '/'\n  }\n  return assetPath\n}\n","import { isIPv6 } from './is-ipv6'\n\n/**\n * Formats a hostname so that it is a valid host that can be fetched by wrapping\n * IPv6 hosts with brackets.\n * @param hostname\n * @returns\n */\nexport function formatHostname(hostname: string): string {\n  return isIPv6(hostname) ? `[${hostname}]` : hostname\n}\n","/**\n * If set to `incremental`, only those leaf pages that export\n * `experimental_ppr = true` will have partial prerendering enabled. If any\n * page exports this value as `false` or does not export it at all will not\n * have partial prerendering enabled. If set to a boolean, it the options for\n * `experimental_ppr` will be ignored.\n */\n\nexport type ExperimentalPPRConfig = boolean | 'incremental'\n\n/**\n * Returns true if partial prerendering is enabled for the application. It does\n * not tell you if a given route has PPR enabled, as that requires analysis of\n * the route's configuration.\n *\n * @see {@link checkIsRoutePPREnabled} - for checking if a specific route has PPR enabled.\n */\nexport function checkIsAppPPREnabled(\n  config: ExperimentalPPRConfig | undefined\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental') return true\n\n  return false\n}\n\n/**\n * Returns true if partial prerendering is supported for the current page with\n * the provided app configuration. If the application doesn't have partial\n * prerendering enabled, this function will always return false. If you want to\n * check if the application has partial prerendering enabled\n *\n * @see {@link checkIsAppPPREnabled} for checking if the application has PPR enabled.\n */\nexport function checkIsRoutePPREnabled(\n  config: ExperimentalPPRConfig | undefined,\n  appConfig: {\n    experimental_ppr?: boolean\n  }\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental' && appConfig.experimental_ppr === true) {\n    return true\n  }\n\n  return false\n}\n","import { getRequestMeta, type NextIncomingMessage } from '../request-meta'\n\ntype PatchableResponse = {\n  setHeader(key: string, value: string | string[]): PatchableResponse\n}\n\n/**\n * Ensure cookies set in middleware are merged and not overridden by API\n * routes/getServerSideProps.\n *\n * @param req Incoming request\n * @param res Outgoing response\n */\nexport function patchSetHeaderWithCookieSupport(\n  req: NextIncomingMessage,\n  res: PatchableResponse\n) {\n  const setHeader = res.setHeader.bind(res)\n  res.setHeader = (\n    name: string,\n    value: string | string[]\n  ): PatchableResponse => {\n    // When renders /_error after page is failed, it could attempt to set\n    // headers after headers.\n    if ('headersSent' in res && res.headersSent) {\n      return res\n    }\n\n    if (name.toLowerCase() === 'set-cookie') {\n      const middlewareValue = getRequestMeta(req, 'middlewareCookie')\n\n      if (\n        !middlewareValue ||\n        !Array.isArray(value) ||\n        !value.every((item, idx) => item === middlewareValue[idx])\n      ) {\n        value = [\n          // TODO: (wyattjoh) find out why this is called multiple times resulting in duplicate cookies being added\n          ...new Set([\n            ...(middlewareValue || []),\n            ...(typeof value === 'string'\n              ? [value]\n              : Array.isArray(value)\n                ? value\n                : []),\n          ]),\n        ]\n      }\n    }\n\n    return setHeader(name, value)\n  }\n}\n","import type { Rewrite } from '../lib/load-custom-routes'\nimport type { RouteMatchFn } from '../shared/lib/router/utils/route-matcher'\nimport type { NextConfig } from './config'\nimport type { BaseNextRequest } from './base-http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\n\nimport { format as formatUrl, parse as parseUrl } from 'url'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { getPathMatch } from '../shared/lib/router/utils/path-match'\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport {\n  matchHas,\n  prepareDestination,\n} from '../shared/lib/router/utils/prepare-destination'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../lib/constants'\n\nexport function normalizeVercelUrl(\n  req: BaseNextRequest,\n  trustQuery: boolean,\n  paramKeys?: string[],\n  pageIsDynamic?: boolean,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined\n) {\n  // make sure to normalize req.url on Vercel to strip dynamic params\n  // from the query which are added during routing\n  if (pageIsDynamic && trustQuery && defaultRouteRegex) {\n    const _parsedUrl = parseUrl(req.url!, true)\n    delete (_parsedUrl as any).search\n\n    for (const key of Object.keys(_parsedUrl.query)) {\n      const isNextQueryPrefix =\n        key !== NEXT_QUERY_PARAM_PREFIX &&\n        key.startsWith(NEXT_QUERY_PARAM_PREFIX)\n\n      const isNextInterceptionMarkerPrefix =\n        key !== NEXT_INTERCEPTION_MARKER_PREFIX &&\n        key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX)\n\n      if (\n        isNextQueryPrefix ||\n        isNextInterceptionMarkerPrefix ||\n        (paramKeys || Object.keys(defaultRouteRegex.groups)).includes(key)\n      ) {\n        delete _parsedUrl.query[key]\n      }\n    }\n    req.url = formatUrl(_parsedUrl)\n  }\n}\n\nexport function interpolateDynamicPath(\n  pathname: string,\n  params: ParsedUrlQuery,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined\n) {\n  if (!defaultRouteRegex) return pathname\n\n  for (const param of Object.keys(defaultRouteRegex.groups)) {\n    const { optional, repeat } = defaultRouteRegex.groups[param]\n    let builtParam = `[${repeat ? '...' : ''}${param}]`\n\n    if (optional) {\n      builtParam = `[${builtParam}]`\n    }\n\n    const paramIdx = pathname!.indexOf(builtParam)\n\n    if (paramIdx > -1) {\n      let paramValue: string\n      const value = params[param]\n\n      if (Array.isArray(value)) {\n        paramValue = value.map((v) => v && encodeURIComponent(v)).join('/')\n      } else if (value) {\n        paramValue = encodeURIComponent(value)\n      } else {\n        paramValue = ''\n      }\n\n      pathname =\n        pathname.slice(0, paramIdx) +\n        paramValue +\n        pathname.slice(paramIdx + builtParam.length)\n    }\n  }\n\n  return pathname\n}\n\nexport function normalizeDynamicRouteParams(\n  params: ParsedUrlQuery,\n  ignoreOptional?: boolean,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined,\n  defaultRouteMatches?: ParsedUrlQuery | undefined\n) {\n  let hasValidParams = true\n  if (!defaultRouteRegex) return { params, hasValidParams: false }\n\n  params = Object.keys(defaultRouteRegex.groups).reduce((prev, key) => {\n    let value: string | string[] | undefined = params[key]\n\n    if (typeof value === 'string') {\n      value = normalizeRscURL(value)\n    }\n    if (Array.isArray(value)) {\n      value = value.map((val) => {\n        if (typeof val === 'string') {\n          val = normalizeRscURL(val)\n        }\n        return val\n      })\n    }\n\n    // if the value matches the default value we can't rely\n    // on the parsed params, this is used to signal if we need\n    // to parse x-now-route-matches or not\n    const defaultValue = defaultRouteMatches![key]\n    const isOptional = defaultRouteRegex!.groups[key].optional\n\n    const isDefaultValue = Array.isArray(defaultValue)\n      ? defaultValue.some((defaultVal) => {\n          return Array.isArray(value)\n            ? value.some((val) => val.includes(defaultVal))\n            : value?.includes(defaultVal)\n        })\n      : value?.includes(defaultValue as string)\n\n    if (\n      isDefaultValue ||\n      (typeof value === 'undefined' && !(isOptional && ignoreOptional))\n    ) {\n      hasValidParams = false\n    }\n\n    // non-provided optional values should be undefined so normalize\n    // them to undefined\n    if (\n      isOptional &&\n      (!value ||\n        (Array.isArray(value) &&\n          value.length === 1 &&\n          // fallback optional catch-all SSG pages have\n          // [[...paramName]] for the root path on Vercel\n          (value[0] === 'index' || value[0] === `[[...${key}]]`)))\n    ) {\n      value = undefined\n      delete params[key]\n    }\n\n    // query values from the proxy aren't already split into arrays\n    // so make sure to normalize catch-all values\n    if (\n      value &&\n      typeof value === 'string' &&\n      defaultRouteRegex!.groups[key].repeat\n    ) {\n      value = value.split('/')\n    }\n\n    if (value) {\n      prev[key] = value\n    }\n    return prev\n  }, {} as ParsedUrlQuery)\n\n  return {\n    params,\n    hasValidParams,\n  }\n}\n\nexport function getUtils({\n  page,\n  i18n,\n  basePath,\n  rewrites,\n  pageIsDynamic,\n  trailingSlash,\n  caseSensitive,\n}: {\n  page: string\n  i18n?: NextConfig['i18n']\n  basePath: string\n  rewrites: {\n    fallback?: ReadonlyArray<Rewrite>\n    afterFiles?: ReadonlyArray<Rewrite>\n    beforeFiles?: ReadonlyArray<Rewrite>\n  }\n  pageIsDynamic: boolean\n  trailingSlash?: boolean\n  caseSensitive: boolean\n}) {\n  let defaultRouteRegex: ReturnType<typeof getNamedRouteRegex> | undefined\n  let dynamicRouteMatcher: RouteMatchFn | undefined\n  let defaultRouteMatches: ParsedUrlQuery | undefined\n\n  if (pageIsDynamic) {\n    defaultRouteRegex = getNamedRouteRegex(page, false)\n    dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex)\n    defaultRouteMatches = dynamicRouteMatcher(page) as ParsedUrlQuery\n  }\n\n  function handleRewrites(req: BaseNextRequest, parsedUrl: UrlWithParsedQuery) {\n    const rewriteParams = {}\n    let fsPathname = parsedUrl.pathname\n\n    const matchesPage = () => {\n      const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '')\n      return (\n        fsPathnameNoSlash === removeTrailingSlash(page) ||\n        dynamicRouteMatcher?.(fsPathnameNoSlash)\n      )\n    }\n\n    const checkRewrite = (rewrite: Rewrite): boolean => {\n      const matcher = getPathMatch(\n        rewrite.source + (trailingSlash ? '(/)?' : ''),\n        {\n          removeUnnamedParams: true,\n          strict: true,\n          sensitive: !!caseSensitive,\n        }\n      )\n      let params = matcher(parsedUrl.pathname)\n\n      if ((rewrite.has || rewrite.missing) && params) {\n        const hasParams = matchHas(\n          req,\n          parsedUrl.query,\n          rewrite.has,\n          rewrite.missing\n        )\n\n        if (hasParams) {\n          Object.assign(params, hasParams)\n        } else {\n          params = false\n        }\n      }\n\n      if (params) {\n        const { parsedDestination, destQuery } = prepareDestination({\n          appendParamsToQuery: true,\n          destination: rewrite.destination,\n          params: params,\n          query: parsedUrl.query,\n        })\n\n        // if the rewrite destination is external break rewrite chain\n        if (parsedDestination.protocol) {\n          return true\n        }\n\n        Object.assign(rewriteParams, destQuery, params)\n        Object.assign(parsedUrl.query, parsedDestination.query)\n        delete (parsedDestination as any).query\n\n        Object.assign(parsedUrl, parsedDestination)\n\n        fsPathname = parsedUrl.pathname\n\n        if (basePath) {\n          fsPathname =\n            fsPathname!.replace(new RegExp(`^${basePath}`), '') || '/'\n        }\n\n        if (i18n) {\n          const destLocalePathResult = normalizeLocalePath(\n            fsPathname!,\n            i18n.locales\n          )\n          fsPathname = destLocalePathResult.pathname\n          parsedUrl.query.nextInternalLocale =\n            destLocalePathResult.detectedLocale || params.nextInternalLocale\n        }\n\n        if (fsPathname === page) {\n          return true\n        }\n\n        if (pageIsDynamic && dynamicRouteMatcher) {\n          const dynamicParams = dynamicRouteMatcher(fsPathname)\n          if (dynamicParams) {\n            parsedUrl.query = {\n              ...parsedUrl.query,\n              ...dynamicParams,\n            }\n            return true\n          }\n        }\n      }\n      return false\n    }\n\n    for (const rewrite of rewrites.beforeFiles || []) {\n      checkRewrite(rewrite)\n    }\n\n    if (fsPathname !== page) {\n      let finished = false\n\n      for (const rewrite of rewrites.afterFiles || []) {\n        finished = checkRewrite(rewrite)\n        if (finished) break\n      }\n\n      if (!finished && !matchesPage()) {\n        for (const rewrite of rewrites.fallback || []) {\n          finished = checkRewrite(rewrite)\n          if (finished) break\n        }\n      }\n    }\n    return rewriteParams\n  }\n\n  function getParamsFromRouteMatches(\n    req: BaseNextRequest,\n    renderOpts?: any,\n    detectedLocale?: string\n  ) {\n    return getRouteMatcher(\n      (function () {\n        const { groups, routeKeys } = defaultRouteRegex!\n\n        return {\n          re: {\n            // Simulate a RegExp match from the \\`req.url\\` input\n            exec: (str: string) => {\n              const obj = Object.fromEntries(new URLSearchParams(str))\n              const matchesHasLocale =\n                i18n && detectedLocale && obj['1'] === detectedLocale\n\n              for (const key of Object.keys(obj)) {\n                const value = obj[key]\n\n                if (\n                  key !== NEXT_QUERY_PARAM_PREFIX &&\n                  key.startsWith(NEXT_QUERY_PARAM_PREFIX)\n                ) {\n                  const normalizedKey = key.substring(\n                    NEXT_QUERY_PARAM_PREFIX.length\n                  )\n                  obj[normalizedKey] = value\n                  delete obj[key]\n                }\n              }\n\n              // favor named matches if available\n              const routeKeyNames = Object.keys(routeKeys || {})\n              const filterLocaleItem = (val: string | string[] | undefined) => {\n                if (i18n) {\n                  // locale items can be included in route-matches\n                  // for fallback SSG pages so ensure they are\n                  // filtered\n                  const isCatchAll = Array.isArray(val)\n                  const _val = isCatchAll ? val[0] : val\n\n                  if (\n                    typeof _val === 'string' &&\n                    i18n.locales.some((item) => {\n                      if (item.toLowerCase() === _val.toLowerCase()) {\n                        detectedLocale = item\n                        renderOpts.locale = detectedLocale\n                        return true\n                      }\n                      return false\n                    })\n                  ) {\n                    // remove the locale item from the match\n                    if (isCatchAll) {\n                      ;(val as string[]).splice(0, 1)\n                    }\n\n                    // the value is only a locale item and\n                    // shouldn't be added\n                    return isCatchAll ? val.length === 0 : true\n                  }\n                }\n                return false\n              }\n\n              if (routeKeyNames.every((name) => obj[name])) {\n                return routeKeyNames.reduce((prev, keyName) => {\n                  const paramName = routeKeys?.[keyName]\n\n                  if (paramName && !filterLocaleItem(obj[keyName])) {\n                    prev[groups[paramName].pos] = obj[keyName]\n                  }\n                  return prev\n                }, {} as any)\n              }\n\n              return Object.keys(obj).reduce((prev, key) => {\n                if (!filterLocaleItem(obj[key])) {\n                  let normalizedKey = key\n\n                  if (matchesHasLocale) {\n                    normalizedKey = parseInt(key, 10) - 1 + ''\n                  }\n                  return Object.assign(prev, {\n                    [normalizedKey]: obj[key],\n                  })\n                }\n                return prev\n              }, {})\n            },\n          },\n          groups,\n        }\n      })() as any\n    )(req.headers['x-now-route-matches'] as string) as ParsedUrlQuery\n  }\n\n  return {\n    handleRewrites,\n    defaultRouteRegex,\n    dynamicRouteMatcher,\n    defaultRouteMatches,\n    getParamsFromRouteMatches,\n    normalizeDynamicRouteParams: (\n      params: ParsedUrlQuery,\n      ignoreOptional?: boolean\n    ) =>\n      normalizeDynamicRouteParams(\n        params,\n        ignoreOptional,\n        defaultRouteRegex,\n        defaultRouteMatches\n      ),\n    normalizeVercelUrl: (\n      req: BaseNextRequest,\n      trustQuery: boolean,\n      paramKeys?: string[]\n    ) =>\n      normalizeVercelUrl(\n        req,\n        trustQuery,\n        paramKeys,\n        pageIsDynamic,\n        defaultRouteRegex\n      ),\n    interpolateDynamicPath: (\n      pathname: string,\n      params: Record<string, undefined | string | string[]>\n    ) => interpolateDynamicPath(pathname, params, defaultRouteRegex),\n  }\n}\n","import { BLOCKED_PAGES } from '../shared/lib/constants'\n\nexport function isBlockedPage(page: string): boolean {\n  return BLOCKED_PAGES.includes(page)\n}\n\nexport function cleanAmpPath(pathname: string): string {\n  if (pathname.match(/\\?amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/\\?amp=(y|yes|true|1)&?/, '?')\n  }\n  if (pathname.match(/&amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/&amp=(y|yes|true|1)/, '')\n  }\n  pathname = pathname.replace(/\\?$/, '')\n  return pathname\n}\n\ntype AnyFunc<T> = (this: T, ...args: any) => any\nexport function debounce<T, F extends AnyFunc<T>>(\n  fn: F,\n  ms: number,\n  maxWait = Infinity\n) {\n  let timeoutId: undefined | NodeJS.Timeout\n\n  // The time the debouncing function was first called during this debounce queue.\n  let startTime = 0\n  // The time the debouncing function was last called.\n  let lastCall = 0\n\n  // The arguments and this context of the last call to the debouncing function.\n  let args: Parameters<F>, context: T\n\n  // A helper used to that either invokes the debounced function, or\n  // reschedules the timer if a more recent call was made.\n  function run() {\n    const now = Date.now()\n    const diff = lastCall + ms - now\n\n    // If the diff is non-positive, then we've waited at least `ms`\n    // milliseconds since the last call. Or if we've waited for longer than the\n    // max wait time, we must call the debounced function.\n    if (diff <= 0 || startTime + maxWait >= now) {\n      // It's important to clear the timeout id before invoking the debounced\n      // function, in case the function calls the debouncing function again.\n      timeoutId = undefined\n      fn.apply(context, args)\n    } else {\n      // Else, a new call was made after the original timer was scheduled. We\n      // didn't clear the timeout (doing so is very slow), so now we need to\n      // reschedule the timer for the time difference.\n      timeoutId = setTimeout(run, diff)\n    }\n  }\n\n  return function (this: T, ...passedArgs: Parameters<F>) {\n    // The arguments and this context of the most recent call are saved so the\n    // debounced function can be invoked with them later.\n    args = passedArgs\n    context = this\n\n    // Instead of constantly clearing and scheduling a timer, we record the\n    // time of the last call. If a second call comes in before the timer fires,\n    // then we'll reschedule in the run function. Doing this is considerably\n    // faster.\n    lastCall = Date.now()\n\n    // Only schedule a new timer if we're not currently waiting.\n    if (timeoutId === undefined) {\n      startTime = lastCall\n      timeoutId = setTimeout(run, ms)\n    }\n  }\n}\n","import type { ServerRuntime } from '../types'\nimport { SERVER_RUNTIME } from './constants'\n\nexport function isEdgeRuntime(value?: string): value is ServerRuntime {\n  return (\n    value === SERVER_RUNTIME.experimentalEdge || value === SERVER_RUNTIME.edge\n  )\n}\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { NextRequest } from '../web/exports'\nimport { ACTION_HEADER } from '../../client/components/app-router-headers'\n\nexport function getServerActionRequestMetadata(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): {\n  actionId: string | null\n  isURLEncodedAction: boolean\n  isMultipartAction: boolean\n  isFetchAction: boolean\n  isServerAction: boolean\n} {\n  let actionId: string | null\n  let contentType: string | null\n\n  if (req.headers instanceof Headers) {\n    actionId = req.headers.get(ACTION_HEADER.toLowerCase()) ?? null\n    contentType = req.headers.get('content-type')\n  } else {\n    actionId = (req.headers[ACTION_HEADER.toLowerCase()] as string) ?? null\n    contentType = req.headers['content-type'] ?? null\n  }\n\n  const isURLEncodedAction = Boolean(\n    req.method === 'POST' && contentType === 'application/x-www-form-urlencoded'\n  )\n  const isMultipartAction = Boolean(\n    req.method === 'POST' && contentType?.startsWith('multipart/form-data')\n  )\n  const isFetchAction = Boolean(\n    actionId !== undefined &&\n      typeof actionId === 'string' &&\n      req.method === 'POST'\n  )\n\n  const isServerAction = Boolean(\n    isFetchAction || isURLEncodedAction || isMultipartAction\n  )\n\n  return {\n    actionId,\n    isURLEncodedAction,\n    isMultipartAction,\n    isFetchAction,\n    isServerAction,\n  }\n}\n\nexport function getIsServerAction(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): boolean {\n  return getServerActionRequestMetadata(req).isServerAction\n}\n","// escape delimiters used by path-to-regexp\nexport default function escapePathDelimiters(\n  segment: string,\n  escapeEncoded?: boolean\n): string {\n  return segment.replace(\n    new RegExp(`([/#?]${escapeEncoded ? '|%(2f|23|3f)' : ''})`, 'gi'),\n    (char: string) => encodeURIComponent(char)\n  )\n}\n","import { appendMutableCookies } from '../../web/spec-extension/adapters/request-cookies'\nimport type { ResponseCookies } from '../../web/spec-extension/cookies'\n\nexport function handleRedirectResponse(\n  url: string,\n  mutableCookies: ResponseCookies,\n  status: number\n): Response {\n  const headers = new Headers({ location: url })\n\n  appendMutableCookies(headers, mutableCookies)\n\n  return new Response(null, { status, headers })\n}\n\nexport function handleBadRequestResponse(): Response {\n  return new Response(null, { status: 400 })\n}\n\nexport function handleNotFoundResponse(): Response {\n  return new Response(null, { status: 404 })\n}\n\nexport function handleMethodNotAllowedResponse(): Response {\n  return new Response(null, { status: 405 })\n}\n\nexport function handleInternalServerErrorResponse(): Response {\n  return new Response(null, { status: 500 })\n}\n","import { RedirectStatusCode } from '../client/components/redirect-status-code'\n\nexport const allowedStatusCodes = new Set([301, 302, 303, 307, 308])\n\nexport function getRedirectStatus(route: {\n  statusCode?: number\n  permanent?: boolean\n}): number {\n  return (\n    route.statusCode ||\n    (route.permanent\n      ? RedirectStatusCode.PermanentRedirect\n      : RedirectStatusCode.TemporaryRedirect)\n  )\n}\n\n// for redirects we restrict matching /_next and for all routes\n// we add an optional trailing slash at the end for easier\n// configuring between trailingSlash: true/false\nexport function modifyRouteRegex(regex: string, restrictedPaths?: string[]) {\n  if (restrictedPaths) {\n    regex = regex.replace(\n      /\\^/,\n      `^(?!${restrictedPaths\n        .map((path) => path.replace(/\\//g, '\\\\/'))\n        .join('|')})`\n    )\n  }\n  regex = regex.replace(/\\$$/, '(?:\\\\/)?$')\n  return regex\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"vm\");","import type { DeepReadonly } from './deep-readonly'\n\n/**\n * Recursively freezes an object and all of its properties. This prevents the\n * object from being modified at runtime. When the JS runtime is running in\n * strict mode, any attempts to modify a frozen object will throw an error.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n * @param obj The object to freeze.\n */\nexport function deepFreeze<T extends object>(obj: T): DeepReadonly<T> {\n  // If the object is already frozen, there's no need to freeze it again.\n  if (Object.isFrozen(obj)) return obj as DeepReadonly<T>\n\n  // An array is an object, but we also want to freeze each element in the array\n  // as well.\n  if (Array.isArray(obj)) {\n    for (const item of obj) {\n      if (!item || typeof item !== 'object') continue\n      deepFreeze(item)\n    }\n\n    return Object.freeze(obj) as DeepReadonly<T>\n  }\n\n  for (const value of Object.values(obj)) {\n    if (!value || typeof value !== 'object') continue\n    deepFreeze(value)\n  }\n\n  return Object.freeze(obj) as DeepReadonly<T>\n}\n","import type { DeepReadonly } from '../shared/lib/deep-readonly'\n\nimport { readFileSync } from 'fs'\nimport { runInNewContext } from 'vm'\nimport { deepFreeze } from '../shared/lib/deep-freeze'\n\nconst sharedCache = new Map<string, unknown>()\n\n/**\n * Load a manifest file from the file system. Optionally cache the manifest in\n * memory to avoid reading the file multiple times using the provided cache or\n * defaulting to a shared module cache. The manifest is frozen to prevent\n * modifications if it is cached.\n *\n * @param path the path to the manifest file\n * @param shouldCache whether to cache the manifest in memory\n * @param cache the cache to use for storing the manifest\n * @returns the manifest object\n */\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache: false\n): T\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache?: boolean,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache?: true,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache: boolean = true,\n  cache = sharedCache\n): T {\n  const cached = shouldCache && cache.get(path)\n  if (cached) {\n    return cached as T\n  }\n\n  let manifest = JSON.parse(readFileSync(path, 'utf8'))\n\n  // Freeze the manifest so it cannot be modified if we're caching it.\n  if (shouldCache) {\n    manifest = deepFreeze(manifest)\n  }\n\n  if (shouldCache) {\n    cache.set(path, manifest)\n  }\n\n  return manifest\n}\n\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache: false\n): T\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache?: boolean,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache?: true,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache: boolean = true,\n  cache = sharedCache\n): T {\n  const cached = shouldCache && cache.get(path)\n  if (cached) {\n    return cached as T\n  }\n\n  const content = readFileSync(path, 'utf8')\n  if (content.length === 0) {\n    throw new Error('Manifest file is empty')\n  }\n\n  let contextObject = {}\n  runInNewContext(content, contextObject)\n\n  // Freeze the context object so it cannot be modified if we're caching it.\n  if (shouldCache) {\n    contextObject = deepFreeze(contextObject)\n  }\n\n  if (shouldCache) {\n    cache.set(path, contextObject)\n  }\n\n  return contextObject as T\n}\n\nexport function clearManifestCache(path: string, cache = sharedCache): boolean {\n  return cache.delete(path)\n}\n","import path from 'path'\nimport {\n  AUTOMATIC_FONT_OPTIMIZATION_MANIFEST,\n  PAGES_MANIFEST,\n  SERVER_DIRECTORY,\n  APP_PATHS_MANIFEST,\n} from '../shared/lib/constants'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport { PageNotFoundError, MissingStaticPage } from '../shared/lib/utils'\nimport LRUCache from 'next/dist/compiled/lru-cache'\nimport { loadManifest } from './load-manifest'\nimport { promises } from 'fs'\nimport type { FontManifest } from './font-utils'\n\nconst isDev = process.env.NODE_ENV === 'development'\nconst pagePathCache = !isDev\n  ? new LRUCache<string, string | null>({\n      max: 1000,\n    })\n  : null\n\nexport function getMaybePagePath(\n  page: string,\n  distDir: string,\n  locales: string[] | undefined,\n  isAppPath: boolean\n): string | null {\n  const cacheKey = `${page}:${distDir}:${locales}:${isAppPath}`\n\n  let pagePath = pagePathCache?.get(cacheKey)\n\n  // If we have a cached path, we can return it directly.\n  if (pagePath) return pagePath\n\n  const serverBuildPath = path.join(distDir, SERVER_DIRECTORY)\n  let appPathsManifest: undefined | PagesManifest\n\n  if (isAppPath) {\n    appPathsManifest = loadManifest(\n      path.join(serverBuildPath, APP_PATHS_MANIFEST),\n      !isDev\n    ) as PagesManifest\n  }\n  const pagesManifest = loadManifest(\n    path.join(serverBuildPath, PAGES_MANIFEST),\n    !isDev\n  ) as PagesManifest\n\n  try {\n    page = denormalizePagePath(normalizePagePath(page))\n  } catch (err) {\n    console.error(err)\n    throw new PageNotFoundError(page)\n  }\n\n  const checkManifest = (manifest: PagesManifest) => {\n    let curPath = manifest[page]\n\n    if (!manifest[curPath] && locales) {\n      const manifestNoLocales: typeof pagesManifest = {}\n\n      for (const key of Object.keys(manifest)) {\n        manifestNoLocales[normalizeLocalePath(key, locales).pathname] =\n          pagesManifest[key]\n      }\n      curPath = manifestNoLocales[page]\n    }\n    return curPath\n  }\n\n  if (appPathsManifest) {\n    pagePath = checkManifest(appPathsManifest)\n  }\n\n  if (!pagePath) {\n    pagePath = checkManifest(pagesManifest)\n  }\n\n  if (!pagePath) {\n    pagePathCache?.set(cacheKey, null)\n    return null\n  }\n\n  pagePath = path.join(serverBuildPath, pagePath)\n\n  pagePathCache?.set(cacheKey, pagePath)\n  return pagePath\n}\n\nexport function getPagePath(\n  page: string,\n  distDir: string,\n  locales: string[] | undefined,\n  isAppPath: boolean\n): string {\n  const pagePath = getMaybePagePath(page, distDir, locales, isAppPath)\n\n  if (!pagePath) {\n    throw new PageNotFoundError(page)\n  }\n\n  return pagePath\n}\n\nexport async function requirePage(\n  page: string,\n  distDir: string,\n  isAppPath: boolean\n): Promise<any> {\n  const pagePath = getPagePath(page, distDir, undefined, isAppPath)\n  if (pagePath.endsWith('.html')) {\n    return promises.readFile(pagePath, 'utf8').catch((err) => {\n      throw new MissingStaticPage(page, err.message)\n    })\n  }\n\n  // since require is synchronous we can set the specific runtime\n  // we are requiring for the require-hook and then clear after\n  try {\n    process.env.__NEXT_PRIVATE_RUNTIME_TYPE = isAppPath ? 'app' : 'pages'\n    const mod = process.env.NEXT_MINIMAL\n      ? // @ts-ignore\n        __non_webpack_require__(pagePath)\n      : require(pagePath)\n    return mod\n  } finally {\n    process.env.__NEXT_PRIVATE_RUNTIME_TYPE = ''\n  }\n}\n\nexport function requireFontManifest(distDir: string) {\n  const serverBuildPath = path.join(distDir, SERVER_DIRECTORY)\n  const fontManifest = loadManifest(\n    path.join(serverBuildPath, AUTOMATIC_FONT_OPTIMIZATION_MANIFEST)\n  ) as FontManifest\n  return fontManifest\n}\n","export function interopDefault(mod: any) {\n  return mod.default || mod\n}\n","/**\n * Wait for a given number of milliseconds and then resolve.\n *\n * @param ms the number of milliseconds to wait\n */\nexport async function wait(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type { ClientReferenceManifest } from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\n\n// Keep the key in memory as it should never change during the lifetime of the server in\n// both development and production.\nlet __next_encryption_key_generation_promise: Promise<\n  [CryptoKey, string]\n> | null = null\nlet __next_loaded_action_key: CryptoKey\nlet __next_internal_development_raw_action_key: string\n\nexport function arrayBufferToString(buffer: ArrayBuffer) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport async function generateEncryptionKeyBase64(dev?: boolean) {\n  // For development, we just keep one key in memory for all actions.\n  // This makes things faster.\n  if (dev) {\n    if (typeof __next_internal_development_raw_action_key !== 'undefined') {\n      return __next_internal_development_raw_action_key\n    }\n  }\n\n  // This avoids it being generated multiple times in parallel.\n  if (!__next_encryption_key_generation_promise) {\n    __next_encryption_key_generation_promise = new Promise(\n      async (resolve, reject) => {\n        try {\n          const key = await crypto.subtle.generateKey(\n            {\n              name: 'AES-GCM',\n              length: 256,\n            },\n            true,\n            ['encrypt', 'decrypt']\n          )\n          const exported = await crypto.subtle.exportKey('raw', key)\n          const b64 = btoa(arrayBufferToString(exported))\n\n          resolve([key, b64])\n        } catch (error) {\n          reject(error)\n        }\n      }\n    )\n  }\n\n  const [key, b64] = await __next_encryption_key_generation_promise\n\n  __next_loaded_action_key = key\n  if (dev) {\n    __next_internal_development_raw_action_key = b64\n  }\n\n  return b64\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-ignore\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifest,\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new Error(\n      'Missing manifest for Server Actions. This is a bug in Next.js'\n    )\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestSingleton() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new Error(\n      'Missing manifest for Server Actions. This is a bug in Next.js'\n    )\n  }\n\n  return serverActionsManifestSingleton.clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new Error(\n      'Missing manifest for Server Actions. This is a bug in Next.js'\n    )\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new Error('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n","import type {\n  AppType,\n  DocumentType,\n  NextComponentType,\n} from '../shared/lib/utils'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type {\n  PageConfig,\n  GetStaticPaths,\n  GetServerSideProps,\n  GetStaticProps,\n} from '../types'\nimport type { RouteModule } from './route-modules/route-module'\nimport type { BuildManifest } from './get-page-files'\nimport type { ActionManifest } from '../build/webpack/plugins/flight-client-entry-plugin'\n\nimport {\n  BUILD_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  CLIENT_REFERENCE_MANIFEST,\n  SERVER_REFERENCE_MANIFEST,\n  UNDERSCORE_NOT_FOUND_ROUTE,\n} from '../shared/lib/constants'\nimport { join } from 'path'\nimport { requirePage } from './require'\nimport { interopDefault } from '../lib/interop-default'\nimport { getTracer } from './lib/trace/tracer'\nimport { LoadComponentsSpan } from './lib/trace/constants'\nimport { evalManifest, loadManifest } from './load-manifest'\nimport { wait } from '../lib/wait'\nimport { setReferenceManifestsSingleton } from './app-render/encryption-utils'\nimport { createServerModuleMap } from './app-render/action-utils'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\n\nexport type ManifestItem = {\n  id: number | string\n  files: string[]\n}\n\nexport type ReactLoadableManifest = { [moduleId: string]: ManifestItem }\n\n/**\n * A manifest entry type for the react-loadable-manifest.json.\n *\n * The whole manifest.json is a type of `Record<pathName, LoadableManifest>`\n * where pathName is a string-based key points to the path of the page contains\n * each dynamic imports.\n */\nexport interface LoadableManifest {\n  [k: string]: { id: string | number; files: string[] }\n}\n\nexport type LoadComponentsReturnType<NextModule = any> = {\n  Component: NextComponentType\n  pageConfig: PageConfig\n  buildManifest: DeepReadonly<BuildManifest>\n  subresourceIntegrityManifest?: DeepReadonly<Record<string, string>>\n  reactLoadableManifest: DeepReadonly<ReactLoadableManifest>\n  clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest?: any\n  Document: DocumentType\n  App: AppType\n  getStaticProps?: GetStaticProps\n  getStaticPaths?: GetStaticPaths\n  getServerSideProps?: GetServerSideProps\n  ComponentMod: NextModule\n  routeModule: RouteModule\n  isAppPath?: boolean\n  page: string\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function loadManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return loadManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function evalManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return evalManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\nasync function loadClientReferenceManifest(\n  manifestPath: string,\n  entryName: string\n) {\n  try {\n    const context = await evalManifestWithRetries<{\n      __RSC_MANIFEST: { [key: string]: ClientReferenceManifest }\n    }>(manifestPath)\n    return context.__RSC_MANIFEST[entryName]\n  } catch (err) {\n    return undefined\n  }\n}\n\nasync function loadComponentsImpl<N = any>({\n  distDir,\n  page,\n  isAppPath,\n}: {\n  distDir: string\n  page: string\n  isAppPath: boolean\n}): Promise<LoadComponentsReturnType<N>> {\n  let DocumentMod = {}\n  let AppMod = {}\n  if (!isAppPath) {\n    ;[DocumentMod, AppMod] = await Promise.all([\n      requirePage('/_document', distDir, false),\n      requirePage('/_app', distDir, false),\n    ])\n  }\n\n  // Make sure to avoid loading the manifest for Route Handlers\n  const hasClientManifest =\n    isAppPath && (page.endsWith('/page') || page === UNDERSCORE_NOT_FOUND_ROUTE)\n\n  // Load the manifest files first\n  const [\n    buildManifest,\n    reactLoadableManifest,\n    clientReferenceManifest,\n    serverActionsManifest,\n  ] = await Promise.all([\n    loadManifestWithRetries<BuildManifest>(join(distDir, BUILD_MANIFEST)),\n    loadManifestWithRetries<ReactLoadableManifest>(\n      join(distDir, REACT_LOADABLE_MANIFEST)\n    ),\n    hasClientManifest\n      ? loadClientReferenceManifest(\n          join(\n            distDir,\n            'server',\n            'app',\n            page.replace(/%5F/g, '_') + '_' + CLIENT_REFERENCE_MANIFEST + '.js'\n          ),\n          page.replace(/%5F/g, '_')\n        )\n      : undefined,\n    isAppPath\n      ? loadManifestWithRetries<ActionManifest>(\n          join(distDir, 'server', SERVER_REFERENCE_MANIFEST + '.json')\n        ).catch(() => null)\n      : null,\n  ])\n\n  // Before requring the actual page module, we have to set the reference manifests\n  // to our global store so Server Action's encryption util can access to them\n  // at the top level of the page module.\n  if (serverActionsManifest && clientReferenceManifest) {\n    setReferenceManifestsSingleton({\n      clientReferenceManifest,\n      serverActionsManifest,\n      serverModuleMap: createServerModuleMap({\n        serverActionsManifest,\n        pageName: page,\n      }),\n    })\n  }\n\n  const ComponentMod = await requirePage(page, distDir, isAppPath)\n\n  const Component = interopDefault(ComponentMod)\n  const Document = interopDefault(DocumentMod)\n  const App = interopDefault(AppMod)\n\n  const { getServerSideProps, getStaticProps, getStaticPaths, routeModule } =\n    ComponentMod\n\n  return {\n    App,\n    Document,\n    Component,\n    buildManifest,\n    reactLoadableManifest,\n    pageConfig: ComponentMod.config || {},\n    ComponentMod,\n    getServerSideProps,\n    getStaticProps,\n    getStaticPaths,\n    clientReferenceManifest,\n    serverActionsManifest,\n    isAppPath,\n    page,\n    routeModule,\n  }\n}\n\nexport const loadComponents = getTracer().wrap(\n  LoadComponentsSpan.loadComponents,\n  loadComponentsImpl\n)\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\n\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({\n  serverActionsManifest,\n  pageName,\n}: {\n  serverActionsManifest: ActionManifest\n  pageName: string\n}) {\n  return new Proxy(\n    {},\n    {\n      get: (_, id: string) => {\n        return {\n          id: serverActionsManifest[\n            process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n          ][id].workers[normalizeWorkerPageName(pageName)],\n          name: id,\n          chunks: [],\n        }\n      },\n    }\n  )\n}\n\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */\nexport function selectWorkerForForwarding(\n  actionId: string,\n  pageName: string,\n  serverActionsManifest: ActionManifest\n) {\n  const workers =\n    serverActionsManifest[\n      process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n    ][actionId]?.workers\n  const workerName = normalizeWorkerPageName(pageName)\n\n  // no workers, nothing to forward to\n  if (!workers) return\n\n  // if there is a worker for this page, no need to forward it.\n  if (workers[workerName]) {\n    return\n  }\n\n  // otherwise, grab the first worker that has a handler for this action id\n  return denormalizeWorkerPageName(Object.keys(workers)[0])\n}\n\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */\nfunction normalizeWorkerPageName(pageName: string) {\n  if (pathHasPrefix(pageName, 'app')) {\n    return pageName\n  }\n\n  return 'app' + pageName\n}\n\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */\nfunction denormalizeWorkerPageName(bundlePath: string) {\n  return normalizeAppPath(removePathPrefix(bundlePath, 'app'))\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"stream\");","import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = <T = void>(cb: ScheduledFn<T>): void => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    process.nextTick(cb)\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = <T = void>(cb: ScheduledFn<T>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n","import type { IncrementalCacheItem, ResponseCacheEntry } from './types'\n\nimport RenderResult from '../render-result'\n\nexport async function fromResponseCacheEntry(\n  cacheEntry: ResponseCacheEntry\n): Promise<IncrementalCacheItem> {\n  return {\n    ...cacheEntry,\n    value:\n      cacheEntry.value?.kind === 'PAGE'\n        ? {\n            kind: 'PAGE',\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n          }\n        : cacheEntry.value?.kind === 'APP_PAGE'\n          ? {\n              kind: 'APP_PAGE',\n              html: await cacheEntry.value.html.toUnchunkedString(true),\n              postponed: cacheEntry.value.postponed,\n              rscData: cacheEntry.value.rscData,\n              headers: cacheEntry.value.headers,\n              status: cacheEntry.value.status,\n            }\n          : cacheEntry.value,\n  }\n}\n\nexport async function toResponseCacheEntry(\n  response: IncrementalCacheItem\n): Promise<ResponseCacheEntry | null> {\n  if (!response) return null\n\n  if (response.value?.kind === 'FETCH') {\n    throw new Error(\n      'Invariant: unexpected cachedResponse of kind fetch in response cache'\n    )\n  }\n\n  return {\n    isMiss: response.isMiss,\n    isStale: response.isStale,\n    revalidate: response.revalidate,\n    value:\n      response.value?.kind === 'PAGE'\n        ? {\n            kind: 'PAGE',\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status,\n          }\n        : response.value?.kind === 'APP_PAGE'\n          ? {\n              kind: 'APP_PAGE',\n              html: RenderResult.fromStatic(response.value.html),\n              rscData: response.value.rscData,\n              headers: response.value.headers,\n              status: response.value.status,\n              postponed: response.value.postponed,\n            }\n          : response.value,\n  }\n}\n","import type {\n  IncrementalCache,\n  ResponseCacheEntry,\n  ResponseGenerator,\n  IncrementalCacheItem,\n  ResponseCacheBase,\n  IncrementalCacheKindHint,\n} from './types'\nimport { RouteKind } from '../route-kind'\n\nimport { Batcher } from '../../lib/batcher'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { fromResponseCacheEntry, toResponseCacheEntry } from './utils'\n\nexport * from './types'\n\nexport default class ResponseCache implements ResponseCacheBase {\n  private readonly batcher = Batcher.create<\n    { key: string; isOnDemandRevalidate: boolean },\n    IncrementalCacheItem | null,\n    string\n  >({\n    // Ensure on-demand revalidate doesn't block normal requests, it should be\n    // safe to run an on-demand revalidate for the same key as a normal request.\n    cacheKeyFn: ({ key, isOnDemandRevalidate }) =>\n      `${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n    // We wait to do any async work until after we've added our promise to\n    // `pendingResponses` to ensure that any any other calls will reuse the\n    // same promise until we've fully finished our work.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  private previousCacheItem?: {\n    key: string\n    entry: IncrementalCacheItem | null\n    expiresAt: number\n  }\n\n  private minimalMode?: boolean\n\n  constructor(minimalMode: boolean) {\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] = minimalMode\n  }\n\n  public async get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      routeKind?: RouteKind\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalCache\n      isRoutePPREnabled?: boolean\n    }\n  ): Promise<ResponseCacheEntry | null> {\n    // If there is no key for the cache, we can't possibly look this up in the\n    // cache so just return the result of the response generator.\n    if (!key) return responseGenerator(false, null)\n\n    const { incrementalCache, isOnDemandRevalidate = false } = context\n\n    const response = await this.batcher.batch(\n      { key, isOnDemandRevalidate },\n      async (cacheKey, resolve) => {\n        // We keep the previous cache entry around to leverage when the\n        // incremental cache is disabled in minimal mode.\n        if (\n          this.minimalMode &&\n          this.previousCacheItem?.key === cacheKey &&\n          this.previousCacheItem.expiresAt > Date.now()\n        ) {\n          return this.previousCacheItem.entry\n        }\n\n        // Coerce the kindHint into a given kind for the incremental cache.\n        let kindHint: IncrementalCacheKindHint | undefined\n        if (\n          context.routeKind === RouteKind.APP_PAGE ||\n          context.routeKind === RouteKind.APP_ROUTE\n        ) {\n          kindHint = 'app'\n        } else if (context.routeKind === RouteKind.PAGES) {\n          kindHint = 'pages'\n        }\n\n        let resolved = false\n        let cachedResponse: IncrementalCacheItem = null\n        try {\n          cachedResponse = !this.minimalMode\n            ? await incrementalCache.get(key, {\n                kindHint,\n                isRoutePPREnabled: context.isRoutePPREnabled,\n              })\n            : null\n\n          if (cachedResponse && !isOnDemandRevalidate) {\n            if (cachedResponse.value?.kind === 'FETCH') {\n              throw new Error(\n                `invariant: unexpected cachedResponse of kind fetch in response cache`\n              )\n            }\n\n            resolve({\n              ...cachedResponse,\n              revalidate: cachedResponse.curRevalidate,\n            })\n            resolved = true\n\n            if (!cachedResponse.isStale || context.isPrefetch) {\n              // The cached value is still valid, so we don't need\n              // to update it yet.\n              return null\n            }\n          }\n\n          const cacheEntry = await responseGenerator(\n            resolved,\n            cachedResponse,\n            true\n          )\n\n          // If the cache entry couldn't be generated, we don't want to cache\n          // the result.\n          if (!cacheEntry) {\n            // Unset the previous cache item if it was set.\n            if (this.minimalMode) this.previousCacheItem = undefined\n            return null\n          }\n\n          const resolveValue = await fromResponseCacheEntry({\n            ...cacheEntry,\n            isMiss: !cachedResponse,\n          })\n          if (!resolveValue) {\n            // Unset the previous cache item if it was set.\n            if (this.minimalMode) this.previousCacheItem = undefined\n            return null\n          }\n\n          // For on-demand revalidate wait to resolve until cache is set.\n          // Otherwise resolve now.\n          if (!isOnDemandRevalidate && !resolved) {\n            resolve(resolveValue)\n            resolved = true\n          }\n\n          if (typeof resolveValue.revalidate !== 'undefined') {\n            if (this.minimalMode) {\n              this.previousCacheItem = {\n                key: cacheKey,\n                entry: resolveValue,\n                expiresAt: Date.now() + 1000,\n              }\n            } else {\n              await incrementalCache.set(key, resolveValue.value, {\n                revalidate: resolveValue.revalidate,\n                isRoutePPREnabled: context.isRoutePPREnabled,\n              })\n            }\n          }\n\n          return resolveValue\n        } catch (err) {\n          // When a getStaticProps path is erroring we automatically re-set the\n          // existing cache under a new expiration to prevent non-stop retrying.\n          if (cachedResponse) {\n            await incrementalCache.set(key, cachedResponse.value, {\n              revalidate: Math.min(\n                Math.max(cachedResponse.revalidate || 3, 3),\n                30\n              ),\n              isRoutePPREnabled: context.isRoutePPREnabled,\n            })\n          }\n\n          // While revalidating in the background we can't reject as we already\n          // resolved the cache entry so log the error here.\n          if (resolved) {\n            console.error(err)\n            return null\n          }\n\n          // We haven't resolved yet, so let's throw to indicate an error.\n          throw err\n        }\n      }\n    )\n\n    return toResponseCacheEntry(response)\n  }\n}\n","import type { PrerenderManifest } from '../../../build'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\nimport type { Revalidate } from '../revalidate'\n\n/**\n * A shared cache of revalidate timings for routes. This cache is used so we\n * don't have to modify the prerender manifest when we want to update the\n * revalidate timings for a route.\n */\nexport class SharedRevalidateTimings {\n  /**\n   * The in-memory cache of revalidate timings for routes. This cache is\n   * populated when the cache is updated with new timings.\n   */\n  private static readonly timings = new Map<string, Revalidate>()\n\n  constructor(\n    /**\n     * The prerender manifest that contains the initial revalidate timings for\n     * routes.\n     */\n    private readonly prerenderManifest: DeepReadonly<\n      Pick<PrerenderManifest, 'routes'>\n    >\n  ) {}\n\n  /**\n   * Try to get the revalidate timings for a route. This will first try to get\n   * the timings from the in-memory cache. If the timings are not present in the\n   * in-memory cache, then the timings will be sourced from the prerender\n   * manifest.\n   *\n   * @param route the route to get the revalidate timings for\n   * @returns the revalidate timings for the route, or undefined if the timings\n   *          are not present in the in-memory cache or the prerender manifest\n   */\n  public get(route: string): Revalidate | undefined {\n    // This is a copy on write cache that is updated when the cache is updated.\n    // If the cache is never written to, then the timings will be sourced from\n    // the prerender manifest.\n    let revalidate = SharedRevalidateTimings.timings.get(route)\n    if (typeof revalidate !== 'undefined') return revalidate\n\n    revalidate = this.prerenderManifest.routes[route]?.initialRevalidateSeconds\n    if (typeof revalidate !== 'undefined') return revalidate\n\n    return undefined\n  }\n\n  /**\n   * Set the revalidate timings for a route.\n   *\n   * @param route the route to set the revalidate timings for\n   * @param revalidate the revalidate timings for the route\n   */\n  public set(route: string, revalidate: Revalidate) {\n    SharedRevalidateTimings.timings.set(route, revalidate)\n  }\n\n  /**\n   * Clear the in-memory cache of revalidate timings for routes.\n   */\n  public clear() {\n    SharedRevalidateTimings.timings.clear()\n  }\n}\n","import type { CacheFs } from '../../../shared/lib/utils'\nimport type { PrerenderManifest } from '../../../build'\nimport type {\n  IncrementalCacheValue,\n  IncrementalCacheEntry,\n  IncrementalCache as IncrementalCacheType,\n  IncrementalCacheKindHint,\n} from '../../response-cache'\nimport type { Revalidate } from '../revalidate'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\n\nimport FetchCache from './fetch-cache'\nimport FileSystemCache from './file-system-cache'\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path'\n\nimport {\n  CACHE_ONE_YEAR,\n  NEXT_CACHE_REVALIDATED_TAGS_HEADER,\n  NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER,\n  PRERENDER_REVALIDATE_HEADER,\n} from '../../../lib/constants'\nimport { toRoute } from '../to-route'\nimport { SharedRevalidateTimings } from './shared-revalidate-timings'\n\nexport interface CacheHandlerContext {\n  fs?: CacheFs\n  dev?: boolean\n  flushToDisk?: boolean\n  serverDistDir?: string\n  maxMemoryCacheSize?: number\n  fetchCacheKeyPrefix?: string\n  prerenderManifest?: PrerenderManifest\n  revalidatedTags: string[]\n  _appDir: boolean\n  _pagesDir: boolean\n  _requestHeaders: IncrementalCache['requestHeaders']\n}\n\nexport interface CacheHandlerValue {\n  lastModified?: number\n  age?: number\n  cacheState?: string\n  value: IncrementalCacheValue | null\n}\n\nexport class CacheHandler {\n  // eslint-disable-next-line\n  constructor(_ctx: CacheHandlerContext) {}\n\n  public async get(\n    ..._args: Parameters<IncrementalCache['get']>\n  ): Promise<CacheHandlerValue | null> {\n    return {} as any\n  }\n\n  public async set(\n    ..._args: Parameters<IncrementalCache['set']>\n  ): Promise<void> {}\n\n  public async revalidateTag(\n    ..._args: Parameters<IncrementalCache['revalidateTag']>\n  ): Promise<void> {}\n\n  public resetRequestCache(): void {}\n}\n\nexport class IncrementalCache implements IncrementalCacheType {\n  readonly dev?: boolean\n  readonly disableForTestmode?: boolean\n  readonly cacheHandler?: CacheHandler\n  readonly hasCustomCacheHandler: boolean\n  readonly prerenderManifest: DeepReadonly<PrerenderManifest>\n  readonly requestHeaders: Record<string, undefined | string | string[]>\n  readonly requestProtocol?: 'http' | 'https'\n  readonly allowedRevalidateHeaderKeys?: string[]\n  readonly minimalMode?: boolean\n  readonly fetchCacheKeyPrefix?: string\n  readonly revalidatedTags?: string[]\n  readonly isOnDemandRevalidate?: boolean\n\n  private readonly locks = new Map<string, Promise<void>>()\n  private readonly unlocks = new Map<string, () => Promise<void>>()\n\n  /**\n   * The revalidate timings for routes. This will source the timings from the\n   * prerender manifest until the in-memory cache is updated with new timings.\n   */\n  private readonly revalidateTimings: SharedRevalidateTimings\n\n  constructor({\n    fs,\n    dev,\n    appDir,\n    pagesDir,\n    flushToDisk,\n    fetchCache,\n    minimalMode,\n    serverDistDir,\n    requestHeaders,\n    requestProtocol,\n    maxMemoryCacheSize,\n    getPrerenderManifest,\n    fetchCacheKeyPrefix,\n    CurCacheHandler,\n    allowedRevalidateHeaderKeys,\n  }: {\n    fs?: CacheFs\n    dev: boolean\n    appDir?: boolean\n    pagesDir?: boolean\n    fetchCache?: boolean\n    minimalMode?: boolean\n    serverDistDir?: string\n    flushToDisk?: boolean\n    requestProtocol?: 'http' | 'https'\n    allowedRevalidateHeaderKeys?: string[]\n    requestHeaders: IncrementalCache['requestHeaders']\n    maxMemoryCacheSize?: number\n    getPrerenderManifest: () => DeepReadonly<PrerenderManifest>\n    fetchCacheKeyPrefix?: string\n    CurCacheHandler?: typeof CacheHandler\n  }) {\n    const debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n    this.hasCustomCacheHandler = Boolean(CurCacheHandler)\n    if (!CurCacheHandler) {\n      if (fs && serverDistDir) {\n        if (debug) {\n          console.log('using filesystem cache handler')\n        }\n        CurCacheHandler = FileSystemCache\n      }\n      if (\n        FetchCache.isAvailable({ _requestHeaders: requestHeaders }) &&\n        minimalMode &&\n        fetchCache\n      ) {\n        if (debug) {\n          console.log('using fetch cache handler')\n        }\n        CurCacheHandler = FetchCache\n      }\n    } else if (debug) {\n      console.log('using custom cache handler', CurCacheHandler.name)\n    }\n\n    if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n      // Allow cache size to be overridden for testing purposes\n      maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10)\n    }\n    this.dev = dev\n    this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true'\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] = minimalMode\n    this.requestHeaders = requestHeaders\n    this.requestProtocol = requestProtocol\n    this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys\n    this.prerenderManifest = getPrerenderManifest()\n    this.revalidateTimings = new SharedRevalidateTimings(this.prerenderManifest)\n    this.fetchCacheKeyPrefix = fetchCacheKeyPrefix\n    let revalidatedTags: string[] = []\n\n    if (\n      requestHeaders[PRERENDER_REVALIDATE_HEADER] ===\n      this.prerenderManifest?.preview?.previewModeId\n    ) {\n      this.isOnDemandRevalidate = true\n    }\n\n    if (\n      minimalMode &&\n      typeof requestHeaders[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' &&\n      requestHeaders[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] ===\n        this.prerenderManifest?.preview?.previewModeId\n    ) {\n      revalidatedTags =\n        requestHeaders[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',')\n    }\n\n    if (CurCacheHandler) {\n      this.cacheHandler = new CurCacheHandler({\n        dev,\n        fs,\n        flushToDisk,\n        serverDistDir,\n        revalidatedTags,\n        maxMemoryCacheSize,\n        _pagesDir: !!pagesDir,\n        _appDir: !!appDir,\n        _requestHeaders: requestHeaders,\n        fetchCacheKeyPrefix,\n      })\n    }\n  }\n\n  private calculateRevalidate(\n    pathname: string,\n    fromTime: number,\n    dev?: boolean\n  ): Revalidate {\n    // in development we don't have a prerender-manifest\n    // and default to always revalidating to allow easier debugging\n    if (dev) return new Date().getTime() - 1000\n\n    // if an entry isn't present in routes we fallback to a default\n    // of revalidating after 1 second.\n    const initialRevalidateSeconds =\n      this.revalidateTimings.get(toRoute(pathname)) ?? 1\n\n    const revalidateAfter =\n      typeof initialRevalidateSeconds === 'number'\n        ? initialRevalidateSeconds * 1000 + fromTime\n        : initialRevalidateSeconds\n\n    return revalidateAfter\n  }\n\n  _getPathname(pathname: string, fetchCache?: boolean) {\n    return fetchCache ? pathname : normalizePagePath(pathname)\n  }\n\n  resetRequestCache() {\n    this.cacheHandler?.resetRequestCache?.()\n  }\n\n  async unlock(cacheKey: string) {\n    const unlock = this.unlocks.get(cacheKey)\n    if (unlock) {\n      unlock()\n      this.locks.delete(cacheKey)\n      this.unlocks.delete(cacheKey)\n    }\n  }\n\n  async lock(cacheKey: string) {\n    let unlockNext: () => Promise<void> = () => Promise.resolve()\n    const existingLock = this.locks.get(cacheKey)\n\n    if (existingLock) {\n      await existingLock\n    } else {\n      const newLock = new Promise<void>((resolve) => {\n        unlockNext = async () => {\n          resolve()\n        }\n      })\n\n      this.locks.set(cacheKey, newLock)\n      this.unlocks.set(cacheKey, unlockNext)\n    }\n\n    return unlockNext\n  }\n\n  async revalidateTag(tags: string | string[]): Promise<void> {\n    return this.cacheHandler?.revalidateTag?.(tags)\n  }\n\n  // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n  async generateCacheKey(\n    url: string,\n    init: RequestInit | Request = {}\n  ): Promise<string> {\n    // this should be bumped anytime a fix is made to cache entries\n    // that should bust the cache\n    const MAIN_KEY_PREFIX = 'v3'\n\n    const bodyChunks: string[] = []\n\n    const encoder = new TextEncoder()\n    const decoder = new TextDecoder()\n\n    if (init.body) {\n      // handle ReadableStream body\n      if (typeof (init.body as any).getReader === 'function') {\n        const readableBody = init.body as ReadableStream<Uint8Array | string>\n\n        const chunks: Uint8Array[] = []\n\n        try {\n          await readableBody.pipeTo(\n            new WritableStream({\n              write(chunk) {\n                if (typeof chunk === 'string') {\n                  chunks.push(encoder.encode(chunk))\n                  bodyChunks.push(chunk)\n                } else {\n                  chunks.push(chunk)\n                  bodyChunks.push(decoder.decode(chunk, { stream: true }))\n                }\n              },\n            })\n          )\n\n          // Flush the decoder.\n          bodyChunks.push(decoder.decode())\n\n          // Create a new buffer with all the chunks.\n          const length = chunks.reduce((total, arr) => total + arr.length, 0)\n          const arrayBuffer = new Uint8Array(length)\n\n          // Push each of the chunks into the new array buffer.\n          let offset = 0\n          for (const chunk of chunks) {\n            arrayBuffer.set(chunk, offset)\n            offset += chunk.length\n          }\n\n          ;(init as any)._ogBody = arrayBuffer\n        } catch (err) {\n          console.error('Problem reading body', err)\n        }\n      } // handle FormData or URLSearchParams bodies\n      else if (typeof (init.body as any).keys === 'function') {\n        const formData = init.body as FormData\n        ;(init as any)._ogBody = init.body\n        for (const key of new Set([...formData.keys()])) {\n          const values = formData.getAll(key)\n          bodyChunks.push(\n            `${key}=${(\n              await Promise.all(\n                values.map(async (val) => {\n                  if (typeof val === 'string') {\n                    return val\n                  } else {\n                    return await val.text()\n                  }\n                })\n              )\n            ).join(',')}`\n          )\n        }\n        // handle blob body\n      } else if (typeof (init.body as any).arrayBuffer === 'function') {\n        const blob = init.body as Blob\n        const arrayBuffer = await blob.arrayBuffer()\n        bodyChunks.push(await blob.text())\n        ;(init as any)._ogBody = new Blob([arrayBuffer], { type: blob.type })\n      } else if (typeof init.body === 'string') {\n        bodyChunks.push(init.body)\n        ;(init as any)._ogBody = init.body\n      }\n    }\n\n    const headers =\n      typeof (init.headers || {}).keys === 'function'\n        ? Object.fromEntries(init.headers as Headers)\n        : Object.assign({}, init.headers)\n\n    if ('traceparent' in headers) delete headers['traceparent']\n\n    const cacheString = JSON.stringify([\n      MAIN_KEY_PREFIX,\n      this.fetchCacheKeyPrefix || '',\n      url,\n      init.method,\n      headers,\n      init.mode,\n      init.redirect,\n      init.credentials,\n      init.referrer,\n      init.referrerPolicy,\n      init.integrity,\n      init.cache,\n      bodyChunks,\n    ])\n\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      function bufferToHex(buffer: ArrayBuffer): string {\n        return Array.prototype.map\n          .call(new Uint8Array(buffer), (b) => b.toString(16).padStart(2, '0'))\n          .join('')\n      }\n      const buffer = encoder.encode(cacheString)\n      return bufferToHex(await crypto.subtle.digest('SHA-256', buffer))\n    } else {\n      const crypto = require('crypto') as typeof import('crypto')\n      return crypto.createHash('sha256').update(cacheString).digest('hex')\n    }\n  }\n\n  // get data from cache if available\n  async get(\n    cacheKey: string,\n    ctx: {\n      kindHint?: IncrementalCacheKindHint\n      revalidate?: Revalidate\n      fetchUrl?: string\n      fetchIdx?: number\n      tags?: string[]\n      softTags?: string[]\n      isRoutePPREnabled?: boolean\n    } = {}\n  ): Promise<IncrementalCacheEntry | null> {\n    // we don't leverage the prerender cache in dev mode\n    // so that getStaticProps is always called for easier debugging\n    if (\n      this.disableForTestmode ||\n      (this.dev &&\n        (ctx.kindHint !== 'fetch' ||\n          this.requestHeaders['cache-control'] === 'no-cache'))\n    ) {\n      return null\n    }\n\n    cacheKey = this._getPathname(cacheKey, ctx.kindHint === 'fetch')\n    let entry: IncrementalCacheEntry | null = null\n    let revalidate = ctx.revalidate\n\n    const cacheData = await this.cacheHandler?.get(cacheKey, ctx)\n\n    if (cacheData?.value?.kind === 'FETCH') {\n      const combinedTags = [...(ctx.tags || []), ...(ctx.softTags || [])]\n      // if a tag was revalidated we don't return stale data\n      if (\n        combinedTags.some((tag) => {\n          return this.revalidatedTags?.includes(tag)\n        })\n      ) {\n        return null\n      }\n\n      revalidate = revalidate || cacheData.value.revalidate\n      const age = (Date.now() - (cacheData.lastModified || 0)) / 1000\n\n      const isStale = age > revalidate\n      const data = cacheData.value.data\n\n      return {\n        isStale: isStale,\n        value: {\n          kind: 'FETCH',\n          data,\n          revalidate: revalidate,\n        },\n        revalidateAfter: Date.now() + revalidate * 1000,\n      }\n    }\n\n    const curRevalidate = this.revalidateTimings.get(toRoute(cacheKey))\n\n    let isStale: boolean | -1 | undefined\n    let revalidateAfter: Revalidate\n\n    if (cacheData?.lastModified === -1) {\n      isStale = -1\n      revalidateAfter = -1 * CACHE_ONE_YEAR\n    } else {\n      revalidateAfter = this.calculateRevalidate(\n        cacheKey,\n        cacheData?.lastModified || Date.now(),\n        this.dev && ctx.kindHint !== 'fetch'\n      )\n      isStale =\n        revalidateAfter !== false && revalidateAfter < Date.now()\n          ? true\n          : undefined\n    }\n\n    if (cacheData) {\n      entry = {\n        isStale,\n        curRevalidate,\n        revalidateAfter,\n        value: cacheData.value,\n      }\n    }\n\n    if (\n      !cacheData &&\n      this.prerenderManifest.notFoundRoutes.includes(cacheKey)\n    ) {\n      // for the first hit after starting the server the cache\n      // may not have a way to save notFound: true so if\n      // the prerender-manifest marks this as notFound then we\n      // return that entry and trigger a cache set to give it a\n      // chance to update in-memory entries\n      entry = {\n        isStale,\n        value: null,\n        curRevalidate,\n        revalidateAfter,\n      }\n      this.set(cacheKey, entry.value, ctx)\n    }\n    return entry\n  }\n\n  // populate the incremental cache with new data\n  async set(\n    pathname: string,\n    data: IncrementalCacheValue | null,\n    ctx: {\n      revalidate?: Revalidate\n      fetchCache?: boolean\n      fetchUrl?: string\n      fetchIdx?: number\n      tags?: string[]\n      isRoutePPREnabled?: boolean\n    }\n  ) {\n    if (this.disableForTestmode || (this.dev && !ctx.fetchCache)) return\n    // FetchCache has upper limit of 2MB per-entry currently\n    const itemSize = JSON.stringify(data).length\n    if (\n      ctx.fetchCache &&\n      // we don't show this error/warning when a custom cache handler is being used\n      // as it might not have this limit\n      !this.hasCustomCacheHandler &&\n      itemSize > 2 * 1024 * 1024\n    ) {\n      if (this.dev) {\n        throw new Error(\n          `Failed to set Next.js data cache, items over 2MB can not be cached (${itemSize} bytes)`\n        )\n      }\n      return\n    }\n\n    pathname = this._getPathname(pathname, ctx.fetchCache)\n\n    try {\n      // Set the value for the revalidate seconds so if it changes we can\n      // update the cache with the new value.\n      if (typeof ctx.revalidate !== 'undefined' && !ctx.fetchCache) {\n        this.revalidateTimings.set(toRoute(pathname), ctx.revalidate)\n      }\n\n      await this.cacheHandler?.set(pathname, data, ctx)\n    } catch (error) {\n      console.warn('Failed to update prerender cache for', pathname, error)\n    }\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"https\");","import type { CacheFs } from '../../shared/lib/utils'\n\nimport fs from 'fs'\n\nexport const nodeFs: CacheFs = {\n  existsSync: fs.existsSync,\n  readFile: fs.promises.readFile,\n  readFileSync: fs.readFileSync,\n  writeFile: (f, d) => fs.promises.writeFile(f, d),\n  mkdir: (dir) => fs.promises.mkdir(dir, { recursive: true }),\n  stat: (f) => fs.promises.stat(f),\n}\n","import type {\n  ServerResponse,\n  OutgoingHttpHeaders,\n  OutgoingHttpHeader,\n  IncomingMessage,\n  IncomingHttpHeaders,\n} from 'http'\nimport type { Socket } from 'net'\nimport type { TLSSocket } from 'tls'\n\nimport Stream from 'stream'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../web/utils'\n\ninterface MockedRequestOptions {\n  url: string\n  headers: IncomingHttpHeaders\n  method: string\n  readable?: Stream.Readable\n  socket?: Socket | null\n}\n\nexport class MockedRequest extends Stream.Readable implements IncomingMessage {\n  public url: string\n  public readonly statusCode?: number | undefined\n  public readonly statusMessage?: string | undefined\n  public readonly headers: IncomingHttpHeaders\n  public readonly method: string\n\n  // This is hardcoded for now, but can be updated to be configurable if needed.\n  public readonly httpVersion = '1.0'\n  public readonly httpVersionMajor = 1\n  public readonly httpVersionMinor = 0\n\n  private bodyReadable?: Stream.Readable\n\n  // If we don't actually have a socket, we'll just use a mock one that\n  // always returns false for the `encrypted` property and undefined for the\n  // `remoteAddress` property.\n  public socket: Socket = new Proxy<TLSSocket>({} as TLSSocket, {\n    get: (_target, prop) => {\n      if (prop !== 'encrypted' && prop !== 'remoteAddress') {\n        throw new Error('Method not implemented')\n      }\n\n      if (prop === 'remoteAddress') return undefined\n      // For this mock request, always ensure we just respond with the encrypted\n      // set to false to ensure there's no odd leakages.\n      return false\n    },\n  })\n\n  constructor({\n    url,\n    headers,\n    method,\n    socket = null,\n    readable,\n  }: MockedRequestOptions) {\n    super()\n\n    this.url = url\n    this.headers = headers\n    this.method = method\n\n    if (readable) {\n      this.bodyReadable = readable\n      this.bodyReadable.on('end', () => this.emit('end'))\n      this.bodyReadable.on('close', () => this.emit('close'))\n    }\n\n    if (socket) {\n      this.socket = socket\n    }\n  }\n\n  public get headersDistinct(): NodeJS.Dict<string[]> {\n    const headers: NodeJS.Dict<string[]> = {}\n    for (const [key, value] of Object.entries(this.headers)) {\n      if (!value) continue\n\n      headers[key] = Array.isArray(value) ? value : [value]\n    }\n\n    return headers\n  }\n\n  public _read(size: number): void {\n    if (this.bodyReadable) {\n      return this.bodyReadable._read(size)\n    } else {\n      this.emit('end')\n      this.emit('close')\n    }\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket {\n    return this.socket\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get aborted(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get complete(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailers(): NodeJS.Dict<string> {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailersDistinct(): NodeJS.Dict<string[]> {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawTrailers(): string[] {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawHeaders(): string[] {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n}\n\nexport interface MockedResponseOptions {\n  statusCode?: number\n  socket?: Socket | null\n  headers?: OutgoingHttpHeaders\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n}\n\nexport class MockedResponse extends Stream.Writable implements ServerResponse {\n  public statusCode: number\n  public statusMessage: string = ''\n  public finished = false\n  public headersSent = false\n  public readonly socket: Socket | null\n\n  /**\n   * A promise that resolves to `true` when the response has been streamed.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly hasStreamed: Promise<boolean>\n\n  /**\n   * A list of buffers that have been written to the response.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly buffers: Buffer[] = []\n\n  /**\n   * The headers object that contains the headers that were initialized on the\n   * response and any that were added subsequently.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly headers: Headers\n\n  private resWriter: MockedResponseOptions['resWriter']\n\n  public readonly headPromise: Promise<void>\n  private headPromiseResolve?: () => void\n\n  constructor(res: MockedResponseOptions = {}) {\n    super()\n\n    this.statusCode = res.statusCode ?? 200\n    this.socket = res.socket ?? null\n    this.headers = res.headers\n      ? fromNodeOutgoingHttpHeaders(res.headers)\n      : new Headers()\n\n    this.headPromise = new Promise<void>((resolve) => {\n      this.headPromiseResolve = resolve\n    })\n\n    // Attach listeners for the `finish`, `end`, and `error` events to the\n    // `MockedResponse` instance.\n    this.hasStreamed = new Promise<boolean>((resolve, reject) => {\n      this.on('finish', () => resolve(true))\n      this.on('end', () => resolve(true))\n      this.on('error', (err) => reject(err))\n    }).then((val) => {\n      this.headPromiseResolve?.()\n      return val\n    })\n\n    if (res.resWriter) {\n      this.resWriter = res.resWriter\n    }\n  }\n\n  public appendHeader(name: string, value: string | string[]): this {\n    const values = Array.isArray(value) ? value : [value]\n    for (const v of values) {\n      this.headers.append(name, v)\n    }\n\n    return this\n  }\n\n  /**\n   * Returns true if the response has been sent, false otherwise.\n   *\n   * @internal - used internally by Next.js\n   */\n  public get isSent() {\n    return this.finished || this.headersSent\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket | null {\n    return this.socket\n  }\n\n  public write(chunk: Uint8Array | Buffer | string) {\n    if (this.resWriter) {\n      return this.resWriter(chunk)\n    }\n    this.buffers.push(Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk))\n\n    return true\n  }\n\n  public end() {\n    this.finished = true\n    return super.end(...arguments)\n  }\n\n  /**\n   * This method is a no-op because the `MockedResponse` instance is not\n   * actually connected to a socket. This method is not specified on the\n   * interface type for `ServerResponse` but is called by Node.js.\n   *\n   * @see https://github.com/nodejs/node/pull/7949\n   */\n  public _implicitHeader() {}\n\n  public _write(\n    chunk: Buffer | string,\n    _encoding: string,\n    callback: () => void\n  ) {\n    this.write(chunk)\n\n    // According to Node.js documentation, the callback MUST be invoked to\n    // signal that the write completed successfully. If this callback is not\n    // invoked, the 'finish' event will not be emitted.\n    //\n    // https://nodejs.org/docs/latest-v16.x/api/stream.html#writable_writechunk-encoding-callback\n    callback()\n  }\n\n  public writeHead(\n    statusCode: number,\n    statusMessage?: string | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    statusMessage?:\n      | string\n      | OutgoingHttpHeaders\n      | OutgoingHttpHeader[]\n      | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this {\n    if (!headers && typeof statusMessage !== 'string') {\n      headers = statusMessage\n    } else if (typeof statusMessage === 'string' && statusMessage.length > 0) {\n      this.statusMessage = statusMessage\n    }\n\n    if (headers) {\n      // When headers have been set with response.setHeader(), they will be\n      // merged with any headers passed to response.writeHead(), with the\n      // headers passed to response.writeHead() given precedence.\n      //\n      // https://nodejs.org/api/http.html#responsewriteheadstatuscode-statusmessage-headers\n      //\n      // For this reason, we need to only call `set` to ensure that this will\n      // overwrite any existing headers.\n      if (Array.isArray(headers)) {\n        // headers may be an Array where the keys and values are in the same list.\n        // It is not a list of tuples. So, the even-numbered offsets are key\n        // values, and the odd-numbered offsets are the associated values. The\n        // array is in the same format as request.rawHeaders.\n        for (let i = 0; i < headers.length; i += 2) {\n          // The header key is always a string according to the spec.\n          this.setHeader(headers[i] as string, headers[i + 1])\n        }\n      } else {\n        for (const [key, value] of Object.entries(headers)) {\n          // Skip undefined values\n          if (typeof value === 'undefined') continue\n\n          this.setHeader(key, value)\n        }\n      }\n    }\n\n    this.statusCode = statusCode\n    this.headersSent = true\n    this.headPromiseResolve?.()\n\n    return this\n  }\n\n  public hasHeader(name: string): boolean {\n    return this.headers.has(name)\n  }\n\n  public getHeader(name: string): string | undefined {\n    return this.headers.get(name) ?? undefined\n  }\n\n  public getHeaders(): OutgoingHttpHeaders {\n    return toNodeOutgoingHttpHeaders(this.headers)\n  }\n\n  public getHeaderNames(): string[] {\n    return Array.from(this.headers.keys())\n  }\n\n  public setHeader(name: string, value: OutgoingHttpHeader) {\n    if (Array.isArray(value)) {\n      // Because `set` here should override any existing values, we need to\n      // delete the existing values before setting the new ones via `append`.\n      this.headers.delete(name)\n\n      for (const v of value) {\n        this.headers.append(name, v)\n      }\n    } else if (typeof value === 'number') {\n      this.headers.set(name, value.toString())\n    } else {\n      this.headers.set(name, value)\n    }\n\n    return this\n  }\n\n  public removeHeader(name: string): void {\n    this.headers.delete(name)\n  }\n\n  public flushHeaders(): void {\n    // This is a no-op because we don't actually have a socket to flush the\n    // headers to.\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get strictContentLength(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeEarlyHints() {\n    throw new Error('Method not implemented.')\n  }\n\n  public get req(): IncomingMessage {\n    throw new Error('Method not implemented.')\n  }\n\n  public assignSocket() {\n    throw new Error('Method not implemented.')\n  }\n\n  public detachSocket(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeContinue(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeProcessing(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public get upgrading(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get chunkedEncoding(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get shouldKeepAlive(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get useChunkedEncodingByDefault(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get sendDate(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n\n  public addTrailers(): void {\n    throw new Error('Method not implemented.')\n  }\n}\n\ninterface RequestResponseMockerOptions {\n  url: string\n  headers?: IncomingHttpHeaders\n  method?: string\n  bodyReadable?: Stream.Readable\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n  socket?: Socket | null\n}\n\nexport function createRequestResponseMocks({\n  url,\n  headers = {},\n  method = 'GET',\n  bodyReadable,\n  resWriter,\n  socket = null,\n}: RequestResponseMockerOptions) {\n  return {\n    req: new MockedRequest({\n      url,\n      headers,\n      method,\n      socket,\n      readable: bodyReadable,\n    }),\n    res: new MockedResponse({ socket, resWriter }),\n  }\n}\n","import type { ModuleLoader } from './module-loader'\n\n/**\n * Loads a module using `await require(id)`.\n */\nexport class NodeModuleLoader implements ModuleLoader {\n  public async load<M>(id: string): Promise<M> {\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      // Need to `await` to cover the case that route is marked ESM modules by ESM escalation.\n      return await (process.env.NEXT_MINIMAL\n        ? // @ts-ignore\n          __non_webpack_require__(id)\n        : require(id))\n    }\n\n    throw new Error('NodeModuleLoader is not supported in edge runtime.')\n  }\n}\n","import type { RouteModule } from '../../route-modules/route-module'\nimport type { ModuleLoader } from './module-loader'\n\nimport { NodeModuleLoader } from './node-module-loader'\n\nexport interface AppLoaderModule<M extends RouteModule = RouteModule> {\n  routeModule: M\n}\n\nexport class RouteModuleLoader {\n  static async load<M extends RouteModule>(\n    id: string,\n    loader: ModuleLoader = new NodeModuleLoader()\n  ): Promise<M> {\n    const module: AppLoaderModule<M> = await loader.load(id)\n    if ('routeModule' in module) {\n      return module.routeModule\n    }\n\n    throw new Error(`Module \"${id}\" does not export a routeModule.`)\n  }\n}\n","import path from 'path'\nimport { pathToFileURL } from 'url'\n\n/**\n * The path for a dynamic route must be URLs with a valid scheme.\n *\n * When an absolute Windows path is passed to it, it interprets the beginning of the path as a protocol (`C:`).\n * Therefore, it is important to always construct a complete path.\n * @param dir File directory\n * @param filePath Absolute or relative path\n */\nexport const formatDynamicImportPath = (dir: string, filePath: string) => {\n  const absoluteFilePath = path.isAbsolute(filePath)\n    ? filePath\n    : path.join(dir, filePath)\n  const formattedFilePath = pathToFileURL(absoluteFilePath).toString()\n\n  return formattedFilePath\n}\n","import { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { NEXT_URL } from '../client/components/app-router-headers'\nimport {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from '../server/lib/interception-routes'\nimport type { Rewrite } from './load-custom-routes'\n\n// a function that converts normalised paths (e.g. /foo/[bar]/[baz]) to the format expected by pathToRegexp (e.g. /foo/:bar/:baz)\nfunction toPathToRegexpPath(path: string): string {\n  return path.replace(/\\[\\[?([^\\]]+)\\]\\]?/g, (_, capture) => {\n    // path-to-regexp only supports word characters, so we replace any non-word characters with underscores\n    const paramName = capture.replace(/\\W+/g, '_')\n\n    // handle catch-all segments (e.g. /foo/bar/[...baz] or /foo/bar/[[...baz]])\n    if (paramName.startsWith('...')) {\n      return `:${paramName.slice(3)}*`\n    }\n    return ':' + paramName\n  })\n}\n\nexport function generateInterceptionRoutesRewrites(\n  appPaths: string[],\n  basePath = ''\n): Rewrite[] {\n  const rewrites: Rewrite[] = []\n\n  for (const appPath of appPaths) {\n    if (isInterceptionRouteAppPath(appPath)) {\n      const { interceptingRoute, interceptedRoute } =\n        extractInterceptionRouteInformation(appPath)\n\n      const normalizedInterceptingRoute = `${\n        interceptingRoute !== '/' ? toPathToRegexpPath(interceptingRoute) : ''\n      }/(.*)?`\n\n      const normalizedInterceptedRoute = toPathToRegexpPath(interceptedRoute)\n      const normalizedAppPath = toPathToRegexpPath(appPath)\n\n      // pathToRegexp returns a regex that matches the path, but we need to\n      // convert it to a string that can be used in a header value\n      // to the format that Next/the proxy expects\n      let interceptingRouteRegex = pathToRegexp(normalizedInterceptingRoute)\n        .toString()\n        .slice(2, -3)\n\n      rewrites.push({\n        source: `${basePath}${normalizedInterceptedRoute}`,\n        destination: `${basePath}${normalizedAppPath}`,\n        has: [\n          {\n            type: 'header',\n            key: NEXT_URL,\n            value: interceptingRouteRegex,\n          },\n        ],\n      })\n    }\n  }\n\n  return rewrites\n}\n\nexport function isInterceptionRouteRewrite(route: Rewrite) {\n  // When we generate interception rewrites in the above implementation, we always do so with only a single `has` condition.\n  return route.has?.[0]?.key === NEXT_URL\n}\n","import './node-environment'\nimport './require-hook'\nimport './node-polyfill-crypto'\n\nimport type { CacheFs } from '../shared/lib/utils'\nimport {\n  DecodeError,\n  PageNotFoundError,\n  MiddlewareNotFoundError,\n} from '../shared/lib/utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport type RenderResult from './render-result'\nimport type { FetchEventResult } from './web/types'\nimport type { PrerenderManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { NextParsedUrlQuery, NextUrlWithParsedQuery } from './request-meta'\nimport type { Params } from '../shared/lib/router/utils/route-matcher'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { PagesAPIRouteModule } from './route-modules/pages-api/module'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { ParsedUrl } from '../shared/lib/router/utils/parse-url'\nimport type { Revalidate, SwrDelta } from './lib/revalidate'\n\nimport fs from 'fs'\nimport { join, resolve } from 'path'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport { addRequestMeta, getRequestMeta } from './request-meta'\nimport {\n  PAGES_MANIFEST,\n  BUILD_ID_FILE,\n  MIDDLEWARE_MANIFEST,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  CLIENT_PUBLIC_FILES_PATH,\n  APP_PATHS_MANIFEST,\n  SERVER_DIRECTORY,\n  NEXT_FONT_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport { findDir } from '../lib/find-pages-dir'\nimport { NodeNextRequest, NodeNextResponse } from './base-http/node'\nimport { sendRenderResult } from './send-payload'\nimport { parseUrl } from '../shared/lib/router/utils/parse-url'\nimport * as Log from '../build/output/log'\n\nimport type {\n  Options,\n  FindComponentsResult,\n  MiddlewareRoutingItem,\n  RequestContext,\n  NormalizedRouteManifest,\n  LoadedRenderOpts,\n  RouteHandler,\n  NextEnabledDirectories,\n  BaseRequestHandler,\n} from './base-server'\nimport BaseServer, { NoFallbackError } from './base-server'\nimport { getMaybePagePath, getPagePath, requireFontManifest } from './require'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { loadComponents } from './load-components'\nimport type { LoadComponentsReturnType } from './load-components'\nimport isError, { getProperError } from '../lib/is-error'\nimport type { FontManifest } from './font-utils'\nimport { splitCookiesString, toNodeOutgoingHttpHeaders } from './web/utils'\nimport { getMiddlewareRouteMatcher } from '../shared/lib/router/utils/middleware-route-matcher'\nimport { loadEnvConfig } from '@next/env'\nimport { urlQueryToSearchParams } from '../shared/lib/router/utils/querystring'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport { getCloneableBody } from './body-streams'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport ResponseCache from './response-cache'\nimport { IncrementalCache } from './lib/incremental-cache'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { setHttpClientAndAgentOptions } from './setup-http-agent-env'\n\nimport { isPagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { MatchOptions } from './route-matcher-managers/route-matcher-manager'\nimport { INSTRUMENTATION_HOOK_FILENAME } from '../lib/constants'\nimport { BubbledError, getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { nodeFs } from './lib/node-fs-methods'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport { signalFromNodeResponse } from './web/spec-extension/adapters/next-request'\nimport { RouteModuleLoader } from './lib/module-loader/route-module-loader'\nimport { loadManifest } from './load-manifest'\nimport { lazyRenderAppPage } from './route-modules/app-page/module.render'\nimport { lazyRenderPagesPage } from './route-modules/pages/module.render'\nimport { interopDefault } from '../lib/interop-default'\nimport { formatDynamicImportPath } from '../lib/format-dynamic-import-path'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport { stripNextRscUnionQuery } from '../lib/url'\nimport type { ServerOnInstrumentationRequestError } from './app-render/types'\n\nexport * from './base-server'\n\ndeclare const __non_webpack_require__: NodeRequire\n\n// For module that can be both CJS or ESM\nconst dynamicImportEsmDefault = process.env.NEXT_MINIMAL\n  ? (id: string) =>\n      import(/* webpackIgnore: true */ id).then((mod) => mod.default || mod)\n  : (id: string) => import(id).then((mod) => mod.default || mod)\n\n// For module that will be compiled to CJS, e.g. instrument\nconst dynamicRequire = process.env.NEXT_MINIMAL\n  ? __non_webpack_require__\n  : require\n\nfunction writeStdoutLine(text: string) {\n  process.stdout.write(' ' + text + '\\n')\n}\n\nfunction formatRequestUrl(url: string, maxLength: number | undefined) {\n  return maxLength !== undefined && url.length > maxLength\n    ? url.substring(0, maxLength) + '..'\n    : url\n}\n\nexport type NodeRequestHandler = BaseRequestHandler<\n  IncomingMessage | NodeNextRequest,\n  ServerResponse | NodeNextResponse\n>\n\ntype NodeRouteHandler = RouteHandler<NodeNextRequest, NodeNextResponse>\n\nconst MiddlewareMatcherCache = new WeakMap<\n  MiddlewareManifest['middleware'][string],\n  MiddlewareRouteMatch\n>()\n\nfunction getMiddlewareMatcher(\n  info: MiddlewareManifest['middleware'][string]\n): MiddlewareRouteMatch {\n  const stored = MiddlewareMatcherCache.get(info)\n  if (stored) {\n    return stored\n  }\n\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(\n      `Invariant: invalid matchers for middleware ${JSON.stringify(info)}`\n    )\n  }\n\n  const matcher = getMiddlewareRouteMatcher(info.matchers)\n  MiddlewareMatcherCache.set(info, matcher)\n  return matcher\n}\n\nexport default class NextNodeServer extends BaseServer<\n  Options,\n  NodeNextRequest,\n  NodeNextResponse\n> {\n  protected middlewareManifestPath: string\n  private _serverDistDir: string | undefined\n  private imageResponseCache?: ResponseCache\n  protected renderWorkersPromises?: Promise<void>\n  protected dynamicRoutes?: {\n    match: import('../shared/lib/router/utils/route-matcher').RouteMatchFn\n    page: string\n    re: RegExp\n  }[]\n  private routerServerHandler?: (\n    req: IncomingMessage,\n    res: ServerResponse\n  ) => void\n\n  constructor(options: Options) {\n    // Initialize super class\n    super(options)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_CSS`.\n     */\n    if (this.renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(\n        this.renderOpts.optimizeFonts\n      )\n    }\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true)\n    }\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n\n    if (!this.minimalMode) {\n      this.imageResponseCache = new ResponseCache(this.minimalMode)\n    }\n\n    const { appDocumentPreloading } = this.nextConfig.experimental\n    const isDefaultEnabled = typeof appDocumentPreloading === 'undefined'\n\n    if (\n      !options.dev &&\n      (appDocumentPreloading === true ||\n        !(this.minimalMode && isDefaultEnabled))\n    ) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_document',\n        isAppPath: false,\n      }).catch(() => {})\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_app',\n        isAppPath: false,\n      }).catch(() => {})\n    }\n\n    if (\n      !options.dev &&\n      !this.minimalMode &&\n      this.nextConfig.experimental.preloadEntriesOnStart\n    ) {\n      this.unstable_preloadEntries()\n    }\n\n    if (!options.dev) {\n      const { dynamicRoutes = [] } = this.getRoutesManifest() ?? {}\n      this.dynamicRoutes = dynamicRoutes.map((r) => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = getRouteRegex(r.page)\n        const match = getRouteMatcher(regex)\n\n        return {\n          match,\n          page: r.page,\n          re: regex.re,\n        }\n      })\n    }\n\n    // ensure options are set when loadConfig isn't called\n    setHttpClientAndAgentOptions(this.nextConfig)\n\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      process.env.NEXT_PRIVATE_TEST_PROXY = 'true'\n      const {\n        interceptTestApis,\n      } = require('next/dist/experimental/testmode/server')\n      interceptTestApis()\n    }\n\n    this.middlewareManifestPath = join(this.serverDistDir, MIDDLEWARE_MANIFEST)\n\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    if (!options.dev) {\n      this.prepare().catch((err) => {\n        console.error('Failed to prepare server', err)\n      })\n    }\n  }\n\n  public async unstable_preloadEntries(): Promise<void> {\n    const appPathsManifest = this.getAppPathsManifest()\n    const pagesManifest = this.getPagesManifest()\n\n    for (const page of Object.keys(pagesManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: false,\n      }).catch(() => {})\n    }\n\n    for (const page of Object.keys(appPathsManifest || {})) {\n      await loadComponents({ distDir: this.distDir, page, isAppPath: true })\n        .then(async ({ ComponentMod }) => {\n          const webpackRequire = ComponentMod.__next_app__.require\n          if (webpackRequire?.m) {\n            for (const id of Object.keys(webpackRequire.m)) {\n              await webpackRequire(id)\n            }\n          }\n        })\n        .catch(() => {})\n    }\n  }\n\n  protected async handleUpgrade(): Promise<void> {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n\n  protected async loadInstrumentationModule() {\n    if (\n      !this.serverOptions.dev &&\n      !!this.nextConfig.experimental.instrumentationHook\n    ) {\n      try {\n        this.instrumentation = await dynamicRequire(\n          resolve(\n            this.serverOptions.dir || '.',\n            this.serverOptions.conf.distDir!,\n            'server',\n            INSTRUMENTATION_HOOK_FILENAME\n          )\n        )\n      } catch (err: any) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          err.message = `An error occurred while loading instrumentation hook: ${err.message}`\n          throw err\n        }\n      }\n    }\n    return this.instrumentation\n  }\n\n  protected async prepareImpl() {\n    await super.prepareImpl()\n    await this.runInstrumentationHookIfAvailable()\n  }\n\n  protected async runInstrumentationHookIfAvailable() {\n    await this.instrumentation?.register?.()\n  }\n\n  protected loadEnvConfig({\n    dev,\n    forceReload,\n    silent,\n  }: {\n    dev: boolean\n    forceReload?: boolean\n    silent?: boolean\n  }) {\n    loadEnvConfig(\n      this.dir,\n      dev,\n      silent ? { info: () => {}, error: () => {} } : Log,\n      forceReload\n    )\n  }\n\n  protected async getIncrementalCache({\n    requestHeaders,\n    requestProtocol,\n  }: {\n    requestHeaders: IncrementalCache['requestHeaders']\n    requestProtocol: 'http' | 'https'\n  }) {\n    const dev = !!this.renderOpts.dev\n    let CacheHandler: any\n    const { cacheHandler } = this.nextConfig\n\n    if (cacheHandler) {\n      CacheHandler = interopDefault(\n        await dynamicImportEsmDefault(\n          formatDynamicImportPath(this.distDir, cacheHandler)\n        )\n      )\n    }\n\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      requestProtocol,\n      pagesDir: this.enabledDirectories.pages,\n      appDir: this.enabledDirectories.app,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCache: true,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n      flushToDisk:\n        !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler,\n    })\n  }\n\n  protected getResponseCache() {\n    return new ResponseCache(this.minimalMode)\n  }\n\n  protected getPublicDir(): string {\n    return join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n  }\n\n  protected getHasStaticDir(): boolean {\n    return fs.existsSync(join(this.dir, 'static'))\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    return loadManifest(\n      join(this.serverDistDir, PAGES_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getAppPathsManifest(): PagesManifest | undefined {\n    if (!this.enabledDirectories.app) return undefined\n\n    return loadManifest(\n      join(this.serverDistDir, APP_PATHS_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    if (!this.enabledDirectories.app) return []\n\n    const routesManifest = this.getRoutesManifest()\n    return (\n      routesManifest?.rewrites.beforeFiles\n        .filter(isInterceptionRouteRewrite)\n        .map((rewrite) => new RegExp(rewrite.regex)) ?? []\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    return !!getMaybePagePath(\n      pathname,\n      this.distDir,\n      this.nextConfig.i18n?.locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected getBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err: any) {\n      if (err.code === 'ENOENT') {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected getEnabledDirectories(dev: boolean): NextEnabledDirectories {\n    const dir = dev ? this.dir : this.serverDistDir\n\n    return {\n      app: findDir(dir, 'app') ? true : false,\n      pages: findDir(dir, 'pages') ? true : false,\n    }\n  }\n\n  protected sendRenderResult(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      revalidate: Revalidate | undefined\n      swrDelta: SwrDelta | undefined\n    }\n  ): Promise<void> {\n    return sendRenderResult({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      result: options.result,\n      type: options.type,\n      generateEtags: options.generateEtags,\n      poweredByHeader: options.poweredByHeader,\n      revalidate: options.revalidate,\n      swrDelta: options.swrDelta,\n    })\n  }\n\n  protected async runApi(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages()\n\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null,\n        })\n\n        if (handledAsEdgeFunction) {\n          return true\n        }\n      }\n    }\n\n    // The module supports minimal mode, load the minimal module.\n    const module = await RouteModuleLoader.load<PagesAPIRouteModule>(\n      match.definition.filename\n    )\n\n    query = { ...query, ...match.params }\n\n    delete query.__nextLocale\n    delete query.__nextDefaultLocale\n    delete query.__nextInferredLocaleFromDefault\n\n    await module.render(req.originalRequest, res.originalResponse, {\n      previewProps: this.renderOpts.previewProps,\n      revalidate: this.revalidate.bind(this),\n      trustHostHeader: this.nextConfig.experimental.trustHostHeader,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      hostname: this.fetchHostname,\n      minimalMode: this.minimalMode,\n      dev: this.renderOpts.dev === true,\n      query,\n      params: match.params,\n      page: match.definition.pathname,\n      onError: this.instrumentationOnRequestError.bind(this),\n    })\n\n    return true\n  }\n\n  protected async renderHTML(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    return getTracer().trace(NextNodeServerSpan.renderHTML, async () =>\n      this.renderHTMLImpl(req, res, pathname, query, renderOpts)\n    )\n  }\n\n  private async renderHTMLImpl(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Invariant: renderHTML should not be called in minimal mode'\n      )\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest\n\n      if (this.enabledDirectories.app && renderOpts.isAppPath) {\n        return lazyRenderAppPage(req, res, pathname, query, renderOpts)\n      }\n\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n\n      return lazyRenderPagesPage(\n        req.originalRequest,\n        res.originalResponse,\n        pathname,\n        query,\n        renderOpts\n      )\n    }\n  }\n\n  protected async imageOptimizer(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    paramsResult: import('./image-optimizer').ImageParamsResult\n  ): Promise<{ buffer: Buffer; contentType: string; maxAge: number }> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: imageOptimizer should not be called in minimal mode'\n      )\n    } else {\n      const { imageOptimizer, fetchExternalImage, fetchInternalImage } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const handleInternalReq = async (\n        newReq: IncomingMessage,\n        newRes: ServerResponse\n      ) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`)\n        }\n\n        if (!this.routerServerHandler) {\n          throw new Error(`Invariant missing routerServerHandler`)\n        }\n\n        await this.routerServerHandler(newReq, newRes)\n        return\n      }\n\n      const { isAbsolute, href } = paramsResult\n\n      const imageUpstream = isAbsolute\n        ? await fetchExternalImage(href)\n        : await fetchInternalImage(\n            href,\n            req.originalRequest,\n            res.originalResponse,\n            handleInternalReq\n          )\n\n      return imageOptimizer(\n        imageUpstream,\n        paramsResult,\n        this.nextConfig,\n        this.renderOpts.dev\n      )\n    }\n  }\n\n  protected getPagePath(pathname: string, locales?: string[]): string {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || []\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname)\n      const isAppPath = Array.isArray(appPaths)\n\n      let page = ctx.pathname\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0]\n      }\n\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths,\n          })\n          return null\n        }\n      }\n    }\n\n    return super.renderPageComponent(ctx, bubbleNoFallback)\n  }\n\n  protected async findPageComponents({\n    page,\n    query,\n    params,\n    isAppPath,\n    url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    return getTracer().trace(\n      NextNodeServerSpan.findPageComponents,\n      {\n        spanName: 'resolve page components',\n        attributes: {\n          'next.route': isAppPath ? normalizeAppPath(page) : page,\n        },\n      },\n      () =>\n        this.findPageComponentsImpl({\n          page,\n          query,\n          params,\n          isAppPath,\n          url,\n        })\n    )\n  }\n\n  private async findPageComponentsImpl({\n    page,\n    query,\n    params,\n    isAppPath,\n    url: _url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    const pagePaths: string[] = [page]\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift(\n        (isAppPath ? normalizeAppPath(page) : normalizePagePath(page)) + '.amp'\n      )\n    }\n\n    if (query.__nextLocale) {\n      pagePaths.unshift(\n        ...pagePaths.map(\n          (path) => `/${query.__nextLocale}${path === '/' ? '' : path}`\n        )\n      )\n    }\n\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await loadComponents({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath,\n        })\n\n        if (\n          query.__nextLocale &&\n          typeof components.Component === 'string' &&\n          !pagePath.startsWith(`/${query.__nextLocale}`)\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(!this.renderOpts.isExperimentalCompile &&\n            components.getStaticProps\n              ? ({\n                  amp: query.amp,\n                  __nextDataReq: query.__nextDataReq,\n                  __nextLocale: query.__nextLocale,\n                  __nextDefaultLocale: query.__nextDefaultLocale,\n                } as NextParsedUrlQuery)\n              : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {}),\n          },\n        }\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof PageNotFoundError)) {\n          throw err\n        }\n      }\n    }\n    return null\n  }\n\n  protected getFontManifest(): FontManifest {\n    return requireFontManifest(this.distDir)\n  }\n\n  protected getNextFontManifest(): NextFontManifest | undefined {\n    return loadManifest(\n      join(this.distDir, 'server', NEXT_FONT_MANIFEST + '.json')\n    ) as NextFontManifest\n  }\n\n  protected getFallback(page: string): Promise<string> {\n    page = normalizePagePath(page)\n    const cacheFs = this.getCacheFilesystem()\n    return cacheFs.readFile(\n      join(this.serverDistDir, 'pages', `${page}.html`),\n      'utf8'\n    )\n  }\n\n  protected handleNextImageRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname || !parsedUrl.pathname.startsWith('/_next/image')) {\n      return false\n    }\n\n    if (\n      this.minimalMode ||\n      this.nextConfig.output === 'export' ||\n      process.env.NEXT_MINIMAL\n    ) {\n      res.statusCode = 400\n      res.body('Bad Request').send()\n      return true\n      // the `else` branch is needed for tree-shaking\n    } else {\n      const { ImageOptimizerCache } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const imageOptimizerCache = new ImageOptimizerCache({\n        distDir: this.distDir,\n        nextConfig: this.nextConfig,\n      })\n\n      const { getHash, sendResponse, ImageError } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      if (!this.imageResponseCache) {\n        throw new Error('invariant image optimizer cache was not initialized')\n      }\n      const imagesConfig = this.nextConfig.images\n\n      if (imagesConfig.loader !== 'default' || imagesConfig.unoptimized) {\n        await this.render404(req, res)\n        return true\n      }\n\n      const paramsResult = ImageOptimizerCache.validateParams(\n        req.originalRequest,\n        parsedUrl.query,\n        this.nextConfig,\n        !!this.renderOpts.dev\n      )\n\n      if ('errorMessage' in paramsResult) {\n        res.statusCode = 400\n        res.body(paramsResult.errorMessage).send()\n        return true\n      }\n\n      const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult)\n\n      try {\n        const { getExtension } =\n          require('./serve-static') as typeof import('./serve-static')\n        const cacheEntry = await this.imageResponseCache.get(\n          cacheKey,\n          async () => {\n            const { buffer, contentType, maxAge } = await this.imageOptimizer(\n              req,\n              res,\n              paramsResult\n            )\n            const etag = getHash([buffer])\n\n            return {\n              value: {\n                kind: 'IMAGE',\n                buffer,\n                etag,\n                extension: getExtension(contentType) as string,\n              },\n              revalidate: maxAge,\n            }\n          },\n          {\n            incrementalCache: imageOptimizerCache,\n          }\n        )\n\n        if (cacheEntry?.value?.kind !== 'IMAGE') {\n          throw new Error(\n            'invariant did not get entry from image response cache'\n          )\n        }\n\n        sendResponse(\n          req.originalRequest,\n          res.originalResponse,\n          paramsResult.href,\n          cacheEntry.value.extension,\n          cacheEntry.value.buffer,\n          paramsResult.isStatic,\n          cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT',\n          imagesConfig,\n          cacheEntry.revalidate || 0,\n          Boolean(this.renderOpts.dev)\n        )\n        return true\n      } catch (err) {\n        if (err instanceof ImageError) {\n          res.statusCode = err.statusCode\n          res.body(err.message).send()\n          return true\n        }\n        throw err\n      }\n    }\n  }\n\n  protected handleCatchallRenderRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    let { pathname, query } = parsedUrl\n    if (!pathname) {\n      throw new Error('Invariant: pathname is undefined')\n    }\n\n    // This is a catch-all route, there should be no fallbacks so mark it as\n    // such.\n    query._nextBubbleNoFallback = '1'\n\n    try {\n      // next.js core assumes page path without trailing slash\n      pathname = removeTrailingSlash(pathname)\n\n      const options: MatchOptions = {\n        i18n: this.i18nProvider?.fromQuery(pathname, query),\n      }\n      const match = await this.matchers.match(pathname, options)\n\n      // If we don't have a match, try to render it anyways.\n      if (!match) {\n        await this.render(req, res, pathname, query, parsedUrl, true)\n\n        return true\n      }\n\n      // Add the match to the request so we don't have to re-run the matcher\n      // for the same request.\n      addRequestMeta(req, 'match', match)\n\n      // TODO-APP: move this to a route handler\n      const edgeFunctionsPages = this.getEdgeFunctionsPages()\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        // If the page doesn't match the edge function page, skip it.\n        if (edgeFunctionsPage !== match.definition.page) continue\n\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n        delete query._nextBubbleNoFallback\n        delete query[NEXT_RSC_UNION_QUERY]\n\n        // If we handled the request, we can return early.\n        // For api routes edge runtime\n        try {\n          const handled = await this.runEdgeFunction({\n            req,\n            res,\n            query,\n            params: match.params,\n            page: match.definition.page,\n            match,\n            appPaths: null,\n          })\n          if (handled) return true\n        } catch (apiError) {\n          await this.instrumentationOnRequestError(apiError, req, {\n            routePath: match.definition.page,\n            routerKind: 'Pages Router',\n            routeType: 'route',\n          })\n          throw apiError\n        }\n      }\n\n      // If the route was detected as being a Pages API route, then handle\n      // it.\n      // TODO: move this behavior into a route handler.\n      if (isPagesAPIRouteMatch(match)) {\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n\n        delete query._nextBubbleNoFallback\n\n        const handled = await this.handleApiRequest(req, res, query, match)\n        if (handled) return true\n      }\n\n      await this.render(req, res, pathname, query, parsedUrl, true)\n\n      return true\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      try {\n        if (this.renderOpts.dev) {\n          const { formatServerError } =\n            require('../lib/format-server-error') as typeof import('../lib/format-server-error')\n          formatServerError(err)\n          await this.logErrorWithOriginalStack(err)\n        } else {\n          this.logError(err)\n        }\n        res.statusCode = 500\n        await this.renderError(err, req, res, pathname, query)\n        return true\n      } catch {}\n\n      throw err\n    }\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async logErrorWithOriginalStack(\n    _err?: unknown,\n    _type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ): Promise<void> {\n    throw new Error(\n      'Invariant: logErrorWithOriginalStack can only be called on the development server'\n    )\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async ensurePage(_opts: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    match?: RouteMatch\n    url?: string\n  }): Promise<void> {\n    throw new Error(\n      'Invariant: ensurePage can only be called on the development server'\n    )\n  }\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  protected async handleApiRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    return this.runApi(req, res, query, match)\n  }\n\n  protected getCacheFilesystem(): CacheFs {\n    return nodeFs\n  }\n\n  private normalizeReq(\n    req: NodeNextRequest | IncomingMessage\n  ): NodeNextRequest {\n    return !(req instanceof NodeNextRequest) ? new NodeNextRequest(req) : req\n  }\n\n  private normalizeRes(\n    res: NodeNextResponse | ServerResponse\n  ): NodeNextResponse {\n    return !(res instanceof NodeNextResponse) ? new NodeNextResponse(res) : res\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = this.makeRequestHandler()\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        wrapRequestHandlerNode,\n      } = require('next/dist/experimental/testmode/server')\n      return wrapRequestHandlerNode(handler)\n    }\n    return handler\n  }\n\n  private makeRequestHandler(): NodeRequestHandler {\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection wil be\n    // handled later on via the `await` when the request handler is called.\n    this.prepare().catch((err) => {\n      console.error('Failed to prepare server', err)\n    })\n\n    const handler = super.getRequestHandler()\n    return (req, res, parsedUrl) => {\n      const normalizedReq = this.normalizeReq(req)\n      const normalizedRes = this.normalizeRes(res)\n\n      let logging = this.nextConfig.logging\n      let isLoggingDisabled = false\n      if (typeof logging === 'boolean') {\n        if (logging === false) {\n          // disable all logging options if logging === false\n          logging = {}\n          isLoggingDisabled = true\n        }\n        // explicit check value for better readability\n        if (logging === true) {\n          // enable all logging options if logging === true\n          logging = { fetches: { fullUrl: true } }\n        }\n      }\n\n      const loggingFetchesConfig = logging?.fetches\n      const enabledVerboseLogging = !!loggingFetchesConfig\n      const shouldTruncateUrl = !loggingFetchesConfig?.fullUrl\n\n      if (this.renderOpts.dev) {\n        const { blue, green, yellow, red, gray, white, bold } =\n          require('../lib/picocolors') as typeof import('../lib/picocolors')\n\n        const { originalResponse } = normalizedRes\n\n        const reqStart = Date.now()\n        const isMiddlewareRequest = getRequestMeta(req, 'middlewareInvoke')\n\n        const reqCallback = () => {\n          const fetchMetrics = normalizedReq.fetchMetrics || []\n          delete normalizedReq.fetchMetrics\n\n          if (isLoggingDisabled) return\n\n          // we don't log for non-route requests\n          const routeMatch = getRequestMeta(req).match\n\n          if (!routeMatch || isMiddlewareRequest) return\n\n          // NOTE: this is only attached after handle has started, this runs\n          // after the response has been sent, so it should have it set.\n          const isRSC = getRequestMeta(normalizedReq, 'isRSCRequest')\n\n          const reqEnd = Date.now()\n          const reqDuration = reqEnd - reqStart\n\n          const statusColor = (status?: number) => {\n            if (!status || status < 200) return white\n            else if (status < 300) return green\n            else if (status < 400) return blue\n            else if (status < 500) return yellow\n            return red\n          }\n\n          const color = statusColor(res.statusCode)\n          const method = req.method || 'GET'\n          const requestUrl = req.url || ''\n          const loggingUrl = isRSC\n            ? stripNextRscUnionQuery(requestUrl)\n            : requestUrl\n          const indentation = '│ '\n\n          writeStdoutLine(\n            `${method} ${loggingUrl} ${color(\n              res.statusCode.toString()\n            )} in ${reqDuration}ms`\n          )\n\n          for (let i = 0; i < fetchMetrics.length; i++) {\n            const metric = fetchMetrics[i]\n            let { cacheStatus, cacheReason, cacheWarning, url } = metric\n\n            if (cacheStatus === 'hmr') {\n              // Cache hits during HMR refreshes are intentionally not logged.\n              continue\n            }\n\n            if (enabledVerboseLogging) {\n              let cacheReasonStr = ''\n\n              let cacheColor\n              const duration = metric.end - metric.start\n              if (cacheStatus === 'hit') {\n                cacheColor = green\n              } else {\n                cacheColor = yellow\n                const status = cacheStatus === 'skip' ? 'skipped' : 'missed'\n                cacheReasonStr = gray(\n                  `Cache ${status} reason: (${white(cacheReason)})`\n                )\n              }\n\n              if (url.length > 48) {\n                const parsed = new URL(url)\n                const truncatedHost = formatRequestUrl(\n                  parsed.host,\n                  shouldTruncateUrl ? 16 : undefined\n                )\n                const truncatedPath = formatRequestUrl(\n                  parsed.pathname,\n                  shouldTruncateUrl ? 24 : undefined\n                )\n                const truncatedSearch = formatRequestUrl(\n                  parsed.search,\n                  shouldTruncateUrl ? 16 : undefined\n                )\n\n                url =\n                  parsed.protocol +\n                  '//' +\n                  truncatedHost +\n                  truncatedPath +\n                  truncatedSearch\n              }\n\n              const status = cacheColor(`(cache ${cacheStatus})`)\n\n              writeStdoutLine(\n                `${indentation}${white(\n                  metric.method\n                )} ${white(url)} ${metric.status} in ${duration}ms ${status}`\n              )\n\n              if (cacheReasonStr) {\n                writeStdoutLine(`${indentation}${indentation}${cacheReasonStr}`)\n              }\n\n              if (cacheWarning) {\n                writeStdoutLine(\n                  `${indentation}${indentation}${yellow(bold('⚠'))} ${white(cacheWarning)}`\n                )\n              }\n            } else if (cacheWarning) {\n              writeStdoutLine(\n                `${indentation}${white(metric.method)} ${white(url)}`\n              )\n\n              writeStdoutLine(\n                `${indentation}${indentation}${yellow(bold('⚠'))} ${white(cacheWarning)}`\n              )\n            }\n          }\n          originalResponse.off('close', reqCallback)\n        }\n        originalResponse.on('close', reqCallback)\n      }\n      return handler(normalizedReq, normalizedRes, parsedUrl)\n    }\n  }\n\n  public async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts,\n  }: {\n    urlPath: string\n    revalidateHeaders: { [key: string]: string | string[] }\n    opts: { unstable_onlyGenerated?: boolean }\n  }) {\n    const mocked = createRequestResponseMocks({\n      url: urlPath,\n      headers: revalidateHeaders,\n    })\n\n    const handler = this.getRequestHandler()\n    await handler(\n      new NodeNextRequest(mocked.req),\n      new NodeNextResponse(mocked.res)\n    )\n    await mocked.res.hasStreamed\n\n    if (\n      mocked.res.getHeader('x-nextjs-cache') !== 'REVALIDATED' &&\n      !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)\n    ) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`)\n    }\n  }\n\n  public async render(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    parsedUrl?: NextUrlWithParsedQuery,\n    internal = false\n  ): Promise<void> {\n    return super.render(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      parsedUrl,\n      internal\n    )\n  }\n\n  public async renderToHTML(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderToHTML(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    err: Error | null\n  ) {\n    const { req, res, query } = ctx\n    const is404 = res.statusCode === 404\n\n    if (is404 && this.enabledDirectories.app) {\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          clientOnly: false,\n          url: req.url,\n        }).catch(() => {})\n      }\n\n      if (\n        this.getEdgeFunctionsPages().includes(UNDERSCORE_NOT_FOUND_ROUTE_ENTRY)\n      ) {\n        await this.runEdgeFunction({\n          req,\n          res,\n          query: query || {},\n          params: {},\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          appPaths: null,\n        })\n        return null\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.renderError(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      setHeaders\n    )\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderErrorToHTML(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async render404(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.render404(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      parsedUrl,\n      setHeaders\n    )\n  }\n\n  protected getMiddlewareManifest(): MiddlewareManifest | null {\n    if (this.minimalMode) return null\n    const manifest: MiddlewareManifest = require(this.middlewareManifestPath)\n    return manifest\n  }\n\n  /** Returns the middleware routing item if there is one. */\n  protected getMiddleware(): MiddlewareRoutingItem | undefined {\n    const manifest = this.getMiddlewareManifest()\n    const middleware = manifest?.middleware?.['/']\n    if (!middleware) {\n      return\n    }\n\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: '/',\n    }\n  }\n\n  protected getEdgeFunctionsPages(): string[] {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return []\n    }\n\n    return Object.keys(manifest.functions)\n  }\n\n  /**\n   * Get information for the edge function located in the provided page\n   * folder. If the edge function info can't be found it will throw\n   * an error.\n   */\n  protected getEdgeFunctionInfo(params: {\n    page: string\n    /** Whether we should look for a middleware or not */\n    middleware: boolean\n  }): {\n    name: string\n    paths: string[]\n    wasm: { filePath: string; name: string }[]\n    env: { [key: string]: string }\n    assets?: { filePath: string; name: string }[]\n  } | null {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return null\n    }\n\n    let foundPage: string\n\n    try {\n      foundPage = denormalizePagePath(normalizePagePath(params.page))\n    } catch (err) {\n      return null\n    }\n\n    let pageInfo = params.middleware\n      ? manifest.middleware[foundPage]\n      : manifest.functions[foundPage]\n\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new PageNotFoundError(foundPage)\n      }\n      return null\n    }\n\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map((file) => join(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map((binding) => ({\n        ...binding,\n        filePath: join(this.distDir, binding.filePath),\n      })),\n      assets:\n        pageInfo.assets &&\n        pageInfo.assets.map((binding) => {\n          return {\n            ...binding,\n            filePath: join(this.distDir, binding.filePath),\n          }\n        }),\n      env: pageInfo.env,\n    }\n  }\n\n  /**\n   * Checks if a middleware exists. This method is useful for the development\n   * server where we need to check the filesystem. Here we just check the\n   * middleware manifest.\n   */\n  protected async hasMiddleware(pathname: string): Promise<boolean> {\n    const info = this.getEdgeFunctionInfo({ page: pathname, middleware: true })\n    return Boolean(info && info.paths.length > 0)\n  }\n\n  /**\n   * A placeholder for a function to be defined in the development server.\n   * It will make sure that the root middleware or an edge function has been compiled\n   * so that we can run it.\n   */\n  protected async ensureMiddleware(_url?: string) {}\n  protected async ensureEdgeFunction(_params: {\n    page: string\n    appPaths: string[] | null\n    url?: string\n  }) {}\n\n  /**\n   * This method gets all middleware matchers and execute them when the request\n   * matches. It will make sure that each middleware exists and is compiled and\n   * ready to be invoked. The development server will decorate it to add warns\n   * and errors with rich traces.\n   */\n  protected async runMiddleware(params: {\n    request: NodeNextRequest\n    response: NodeNextResponse\n    parsedUrl: ParsedUrl\n    parsed: UrlWithParsedQuery\n    onWarning?: (warning: Error) => void\n  }) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: runMiddleware should not be called in minimal mode'\n      )\n    }\n\n    // Middleware is skipped for on-demand revalidate requests\n    if (\n      checkIsOnDemandRevalidate(params.request, this.renderOpts.previewProps)\n        .isOnDemandRevalidate\n    ) {\n      return {\n        response: new Response(null, { headers: { 'x-middleware-next': '1' } }),\n      } as FetchEventResult\n    }\n\n    let url: string\n\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = getRequestMeta(params.request, 'initURL')!\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = urlQueryToSearchParams(params.parsed.query).toString()\n      const locale = params.parsed.query.__nextLocale\n\n      url = `${getRequestMeta(params.request, 'initProtocol')}://${\n        this.fetchHostname || 'localhost'\n      }:${this.port}${locale ? `/${locale}` : ''}${params.parsed.pathname}${\n        query ? `?${query}` : ''\n      }`\n    }\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const page: {\n      name?: string\n      params?: { [key: string]: string | string[] }\n    } = {}\n\n    const middleware = this.getMiddleware()\n    if (!middleware) {\n      return { finished: false }\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return { finished: false }\n    }\n\n    await this.ensureMiddleware(params.request.url)\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true,\n    })\n\n    if (!middlewareInfo) {\n      throw new MiddlewareNotFoundError()\n    }\n\n    const method = (params.request.method || 'GET').toUpperCase()\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n\n    const result = await run({\n      distDir: this.distDir,\n      name: middlewareInfo.name,\n      paths: middlewareInfo.paths,\n      edgeFunctionEntry: middlewareInfo,\n      request: {\n        headers: params.request.headers,\n        method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n          experimental: this.nextConfig.experimental,\n        },\n        url: url,\n        page,\n        body: getRequestMeta(params.request, 'clonableBody'),\n        signal: signalFromNodeResponse(params.response.originalResponse),\n      },\n      useCache: true,\n      onWarning: params.onWarning,\n    })\n\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch((error) => {\n        console.error(`Uncaught: middleware waitUntil errored`, error)\n      })\n    }\n\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed)\n      return { finished: true }\n    }\n\n    // Split compound (comma-separated) set-cookie headers\n    if (result.response.headers.has('set-cookie')) {\n      const cookies = result.response.headers\n        .getSetCookie()\n        .flatMap((maybeCompoundCookie) =>\n          splitCookiesString(maybeCompoundCookie)\n        )\n\n      // Clear existing header(s)\n      result.response.headers.delete('set-cookie')\n\n      // Append each cookie individually.\n      for (const cookie of cookies) {\n        result.response.headers.append('set-cookie', cookie)\n      }\n\n      // Add cookies to request meta.\n      addRequestMeta(params.request, 'middlewareCookie', cookies)\n    }\n\n    return result\n  }\n\n  protected handleCatchallMiddlewareRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsed\n  ) => {\n    const isMiddlewareInvoke = getRequestMeta(req, 'middlewareInvoke')\n\n    if (!isMiddlewareInvoke) {\n      return false\n    }\n\n    const handleFinished = () => {\n      addRequestMeta(req, 'middlewareInvoke', true)\n      res.body('').send()\n      return true\n    }\n\n    const middleware = this.getMiddleware()\n    if (!middleware) {\n      return handleFinished()\n    }\n\n    const initUrl = getRequestMeta(req, 'initURL')!\n    const parsedUrl = parseUrl(initUrl)\n    const pathnameInfo = getNextPathnameInfo(parsedUrl.pathname, {\n      nextConfig: this.nextConfig,\n      i18nProvider: this.i18nProvider,\n    })\n\n    parsedUrl.pathname = pathnameInfo.pathname\n    const normalizedPathname = removeTrailingSlash(parsed.pathname || '')\n    if (!middleware.match(normalizedPathname, req, parsedUrl.query)) {\n      return handleFinished()\n    }\n\n    let result: Awaited<\n      ReturnType<typeof NextNodeServer.prototype.runMiddleware>\n    >\n    let bubblingResult = false\n\n    try {\n      await this.ensureMiddleware(req.url)\n\n      result = await this.runMiddleware({\n        request: req,\n        response: res,\n        parsedUrl: parsedUrl,\n        parsed: parsed,\n      })\n\n      if ('response' in result) {\n        if (isMiddlewareInvoke) {\n          bubblingResult = true\n          throw new BubbledError(true, result)\n        }\n\n        for (const [key, value] of Object.entries(\n          toNodeOutgoingHttpHeaders(result.response.headers)\n        )) {\n          if (key !== 'content-encoding' && value !== undefined) {\n            res.setHeader(key, value as string | string[])\n          }\n        }\n        res.statusCode = result.response.status\n\n        const { originalResponse } = res\n        if (result.response.body) {\n          await pipeToNodeResponse(result.response.body, originalResponse)\n        } else {\n          originalResponse.end()\n        }\n        return true\n      }\n    } catch (err: unknown) {\n      if (bubblingResult) {\n        throw err\n      }\n\n      if (isError(err) && err.code === 'ENOENT') {\n        await this.render404(req, res, parsed)\n        return true\n      }\n\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        await this.renderError(err, req, res, parsed.pathname || '')\n        return true\n      }\n\n      const error = getProperError(err)\n      console.error(error)\n      res.statusCode = 500\n      await this.renderError(error, req, res, parsed.pathname || '')\n      return true\n    }\n\n    return result.finished\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    if (\n      this.renderOpts?.dev ||\n      this.serverOptions?.dev ||\n      process.env.NODE_ENV === 'development' ||\n      process.env.NEXT_PHASE === PHASE_PRODUCTION_BUILD\n    ) {\n      this._cachedPreviewManifest = {\n        version: 4,\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: {\n          previewModeId: require('crypto').randomBytes(16).toString('hex'),\n          previewModeSigningKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n          previewModeEncryptionKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n        },\n      }\n      return this._cachedPreviewManifest\n    }\n\n    this._cachedPreviewManifest = loadManifest(\n      join(this.distDir, PRERENDER_MANIFEST)\n    ) as PrerenderManifest\n\n    return this._cachedPreviewManifest\n  }\n\n  protected getRoutesManifest(): NormalizedRouteManifest | undefined {\n    return getTracer().trace(NextNodeServerSpan.getRoutesManifest, () => {\n      const manifest = loadManifest(join(this.distDir, ROUTES_MANIFEST)) as any\n\n      let rewrites = manifest.rewrites ?? {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      }\n\n      if (Array.isArray(rewrites)) {\n        rewrites = {\n          beforeFiles: [],\n          afterFiles: rewrites,\n          fallback: [],\n        }\n      }\n\n      return { ...manifest, rewrites }\n    })\n  }\n\n  protected attachRequestMeta(\n    req: NodeNextRequest,\n    parsedUrl: NextUrlWithParsedQuery,\n    isUpgradeReq?: boolean\n  ) {\n    // Injected in base-server.ts\n    const protocol = req.headers['x-forwarded-proto']?.includes('https')\n      ? 'https'\n      : 'http'\n\n    // When there are hostname and port we build an absolute URL\n    const initUrl =\n      this.fetchHostname && this.port\n        ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}`\n        : this.nextConfig.experimental.trustHostHeader\n          ? `https://${req.headers.host || 'localhost'}${req.url}`\n          : req.url\n\n    addRequestMeta(req, 'initURL', initUrl)\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n    addRequestMeta(req, 'initProtocol', protocol)\n\n    if (!isUpgradeReq) {\n      addRequestMeta(req, 'clonableBody', getCloneableBody(req.originalRequest))\n    }\n  }\n\n  protected async runEdgeFunction(params: {\n    req: NodeNextRequest\n    res: NodeNextResponse\n    query: ParsedUrlQuery\n    params: Params | undefined\n    page: string\n    appPaths: string[] | null\n    match?: RouteMatch\n    onError?: (err: unknown) => void\n    onWarning?: (warning: Error) => void\n  }): Promise<FetchEventResult | null> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.'\n      )\n    }\n    let edgeInfo: ReturnType<typeof this.getEdgeFunctionInfo> | undefined\n\n    const { query, page, match } = params\n\n    if (!match)\n      await this.ensureEdgeFunction({\n        page,\n        appPaths: params.appPaths,\n        url: params.req.url,\n      })\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false,\n    })\n\n    if (!edgeInfo) {\n      return null\n    }\n\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isNextDataRequest = !!query.__nextDataReq\n    const initialUrl = new URL(\n      getRequestMeta(params.req, 'initURL') || '/',\n      'http://n'\n    )\n    const queryString = urlQueryToSearchParams({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params,\n    }).toString()\n\n    if (isNextDataRequest) {\n      params.req.headers['x-nextjs-data'] = '1'\n    }\n    initialUrl.search = queryString\n    const url = initialUrl.toString()\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && { params: params.params }),\n        },\n        body: getRequestMeta(params.req, 'clonableBody'),\n        signal: signalFromNodeResponse(params.res.originalResponse),\n      },\n      useCache: true,\n      onError: params.onError,\n      onWarning: params.onWarning,\n      incrementalCache:\n        (globalThis as any).__incrementalCache ||\n        getRequestMeta(params.req, 'incrementalCache'),\n      serverComponentsHmrCache: getRequestMeta(\n        params.req,\n        'serverComponentsHmrCache'\n      ),\n    })\n\n    if (result.fetchMetrics) {\n      params.req.fetchMetrics = result.fetchMetrics\n    }\n\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status\n      params.res.statusMessage = result.response.statusText\n    }\n\n    // TODO: (wyattjoh) investigate improving this\n\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          params.res.appendHeader(key, cookie)\n        }\n      } else {\n        params.res.appendHeader(key, value)\n      }\n    })\n\n    const { originalResponse } = params.res\n    if (result.response.body) {\n      await pipeToNodeResponse(result.response.body, originalResponse)\n    } else {\n      originalResponse.end()\n    }\n\n    return result\n  }\n\n  protected get serverDistDir(): string {\n    if (this._serverDistDir) {\n      return this._serverDistDir\n    }\n    const serverDistDir = join(this.distDir, SERVER_DIRECTORY)\n    this._serverDistDir = serverDistDir\n    return serverDistDir\n  }\n\n  protected async getFallbackErrorComponents(\n    _url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    await super.instrumentationOnRequestError(...args)\n\n    // For Node.js runtime production logs, in dev it will be overridden by next-dev-server\n    if (!this.renderOpts.dev) {\n      this.logError(args[0] as Error)\n    }\n  }\n}\n","import type { RouteMatch } from './route-match'\nimport type { PagesAPIRouteDefinition } from '../route-definitions/pages-api-route-definition'\n\nimport { RouteKind } from '../route-kind'\n\nexport interface PagesAPIRouteMatch\n  extends RouteMatch<PagesAPIRouteDefinition> {}\n\n/**\n * Checks if the given match is a Pages API route match.\n * @param match the match to check\n * @returns true if the match is a Pages API route match, false otherwise\n */\nexport function isPagesAPIRouteMatch(\n  match: RouteMatch\n): match is PagesAPIRouteMatch {\n  return match.definition.kind === RouteKind.PAGES_API\n}\n","import type { NextConfig } from '../types'\nimport { Agent as HttpAgent } from 'http'\nimport { Agent as HttpsAgent } from 'https'\n\nexport function setHttpClientAndAgentOptions(config: {\n  httpAgentOptions?: NextConfig['httpAgentOptions']\n}) {\n  if (globalThis.__NEXT_HTTP_AGENT) {\n    // We only need to assign once because we want\n    // to reuse the same agent for all requests.\n    return\n  }\n\n  if (!config) {\n    throw new Error('Expected config.httpAgentOptions to be an object')\n  }\n\n  globalThis.__NEXT_HTTP_AGENT_OPTIONS = config.httpAgentOptions\n  globalThis.__NEXT_HTTP_AGENT = new HttpAgent(config.httpAgentOptions)\n  globalThis.__NEXT_HTTPS_AGENT = new HttpsAgent(config.httpAgentOptions)\n}\n","import type { BaseNextRequest } from '../../../../server/base-http'\nimport type { MiddlewareMatcher } from '../../../../build/analysis/get-page-static-info'\nimport type { Params } from './route-matcher'\nimport { matchHas } from './prepare-destination'\n\nexport interface MiddlewareRouteMatch {\n  (\n    pathname: string | null | undefined,\n    request: BaseNextRequest,\n    query: Params\n  ): boolean\n}\n\nexport function getMiddlewareRouteMatcher(\n  matchers: MiddlewareMatcher[]\n): MiddlewareRouteMatch {\n  return (\n    pathname: string | null | undefined,\n    req: BaseNextRequest,\n    query: Params\n  ) => {\n    for (const matcher of matchers) {\n      const routeMatch = new RegExp(matcher.regexp).exec(pathname!)\n      if (!routeMatch) {\n        continue\n      }\n\n      if (matcher.has || matcher.missing) {\n        const hasParams = matchHas(req, query, matcher.has, matcher.missing)\n        if (!hasParams) {\n          continue\n        }\n      }\n\n      return true\n    }\n\n    return false\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Readable } from 'stream'\nimport { PassThrough } from 'stream'\n\nexport function requestToBodyStream(\n  context: { ReadableStream: typeof ReadableStream },\n  KUint8Array: typeof Uint8Array,\n  stream: Readable\n) {\n  return new context.ReadableStream({\n    start: async (controller) => {\n      for await (const chunk of stream) {\n        controller.enqueue(new KUint8Array(chunk))\n      }\n      controller.close()\n    },\n  })\n}\n\nfunction replaceRequestBody<T extends IncomingMessage>(\n  base: T,\n  stream: Readable\n): T {\n  for (const key in stream) {\n    let v = stream[key as keyof Readable] as any\n    if (typeof v === 'function') {\n      v = v.bind(base)\n    }\n    base[key as keyof T] = v\n  }\n\n  return base\n}\n\nexport interface CloneableBody {\n  finalize(): Promise<void>\n  cloneBodyStream(): Readable\n}\n\nexport function getCloneableBody<T extends IncomingMessage>(\n  readable: T\n): CloneableBody {\n  let buffered: Readable | null = null\n\n  const endPromise = new Promise<void | { error?: unknown }>(\n    (resolve, reject) => {\n      readable.on('end', resolve)\n      readable.on('error', reject)\n    }\n  ).catch((error) => {\n    return { error }\n  })\n\n  return {\n    /**\n     * Replaces the original request body if necessary.\n     * This is done because once we read the body from the original request,\n     * we can't read it again.\n     */\n    async finalize(): Promise<void> {\n      if (buffered) {\n        const res = await endPromise\n\n        if (res && typeof res === 'object' && res.error) {\n          throw res.error\n        }\n        replaceRequestBody(readable, buffered)\n        buffered = readable\n      }\n    },\n    /**\n     * Clones the body stream\n     * to pass into a middleware\n     */\n    cloneBodyStream() {\n      const input = buffered ?? readable\n      const p1 = new PassThrough()\n      const p2 = new PassThrough()\n      input.on('data', (chunk) => {\n        p1.push(chunk)\n        p2.push(chunk)\n      })\n      input.on('end', () => {\n        p1.push(null)\n        p2.push(null)\n      })\n      buffered = p2\n      return p1\n    },\n  }\n}\n"],"names":["e","exports","j","t","ignoreProcessEnv","process","env","n","parsed","r","Object","prototype","hasOwnProperty","call","_interpolate","_searchLast","Array","from","matchAll","length","slice","index","i","o","match","s","replace","a","c","version","p","_debug","console","log","_dotenvKey","DOTENV_KEY","_vaultPath","resolve","cwd","path","endsWith","l","configDotenv","Boolean","debug","join","homedir","encoding","parse","readFileSync","processEnv","populate","message","error","_configVault","_parseVault","split","trim","_instructions","URL","code","password","searchParams","get","toUpperCase","ciphertext","key","decrypt","config","existsSync","Buffer","createDecipheriv","setAuthTag","update","final","RangeError","toString","exec","override","keys","JSON","__nccwpck_require__","undefined","__esModule","d","defineProperty","enumerable","Symbol","toStringTag","value","ab","__dirname","initialEnv","updateInitialEnv","resetEnv","loadEnvConfig","u","_","assign","replaceProcessEnv","forEach","startsWith","entries","__NEXT_PROCESSED_ENV","contents","some","combinedEnv","parsedEnv","loadedEnvFiles","filter","statSync","isFile","push","module","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","src_exports","stringifyCookie","_a","attrs","expires","Date","toUTCString","maxAge","domain","secure","httpOnly","sameSite","partitioned","priority","stringified","name","encodeURIComponent","parseCookie","cookie","map","Map","pair","splitAt","indexOf","set","decodeURIComponent","parseSetCookie","setCookie","string","attributes","httponly","maxage","samesite","fromEntries","value2","toLowerCase","compact","newT","Number","SAME_SITE","includes","PRIORITY","__export","target","all","RequestCookies","ResponseCookies","__copyProps","to","except","desc","constructor","requestHeaders","_parsed","_headers","header","iterator","size","args","getAll","has","delete","names","result","isArray","clear","for","stringify","values","v","responseHeaders","_b","_c","getSetCookie","cookieString","splitCookiesString","cookiesString","start","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","test","charAt","substring","normalizeCookie","now","bag","headers","serialized","append","decode","f","substr","tryDecode","serialize","encode","isNaN","isFinite","Math","floor","parseHttpDate","NaN","parseTokenList","charCodeAt","h","naiveLength","isStale","del","unshiftNode","tail","prev","removeNode","Entry","forEachStep","max","Infinity","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","allowStale","lengthCalculator","itemCount","rforEach","head","next","toArray","dump","k","dumpLru","unshift","peek","pop","load","prune","Yallist","arguments","Node","list","create","pushNode","shift","forEachReverse","getReverse","mapReverse","reduce","reduceReverse","toArrayReverse","sliceReverse","splice","insert","reverse","Events","EE","fn","context","once","addListener","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","getOwnPropertySymbols","concat","listeners","listenerCount","emit","removeListener","apply","on","removeAllListeners","off","prefixed","then","Promise","_queue","enqueue","run","default","dequeue","TimeoutError","Error","pTimeout","setTimeout","cancel","clearTimeout","empty","_intervalCount","_intervalEnd","_pendingCount","_resolveEmpty","_resolveIdle","carryoverConcurrencyCount","intervalCap","interval","concurrency","autoStart","queueClass","_carryoverConcurrencyCount","_isIntervalIgnored","_intervalCap","_interval","_queueClass","_timeout","timeout","_throwOnTimeout","throwOnTimeout","_isPaused","_doesIntervalAllowAnother","_doesConcurrentAllowAnother","_concurrency","_next","_tryToStartAnother","_resolvePromises","_onResumeInterval","_onInterval","_initializeIntervalIfNeeded","_timeoutId","_isIntervalPaused","_intervalId","clearInterval","setInterval","_processQueue","add","addAll","pause","onEmpty","onIdle","sizeBy","pending","isPaused","str","options","tokens","lexer","char","type","count","pattern","prefixes","defaultPattern","escapeString","delimiter","tryConsume","mustConsume","consumeText","prefix","suffix","modifier","flags","sensitive","reFlags","validate","matches","token","data","optional","repeat","segment","String","typeOfMessage","re","pathname","m","params","pathToRegexp","RegExp","regexpToRegexp","groups","source","parts","tokensToRegexp","strict","end","route","mod","endToken","isEndDelimited","NEXT_QUERY_PARAM_PREFIX","NEXT_INTERCEPTION_MARKER_PREFIX","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","RSC_PREFETCH_SUFFIX","RSC_SUFFIX","ACTION_SUFFIX","NEXT_DATA_SUFFIX","NEXT_META_SUFFIX","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_SOFT_TAGS_HEADER","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","CACHE_ONE_YEAR","INSTRUMENTATION_HOOK_FILENAME","SERVER_RUNTIME","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","api","middleware","instrument","edgeAsset","appPagesBrowser","appMetadataRoute","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","checkIsOnDemandRevalidate","req","previewProps","HeadersAdapter","isOnDemandRevalidate","previewModeId","revalidateOnlyGenerated","COOKIE_NAME_PRERENDER_BYPASS","COOKIE_NAME_PRERENDER_DATA","SYMBOL_PREVIEW_DATA","SYMBOL_CLEARED_COOKIES","clearPreviewData","res","require","previous","getHeader","setHeader","tryGetPreviewData","cookies","encryptedPreviewData","tokenPreviewData","jsonwebtoken","verify","previewModeSigningKey","decryptWithSecret","decryptedPreviewData","previewModeEncryptionKey","CIPHER_ALGORITHM","encryptWithSecret","secret","iv","crypto","salt","cipher","encrypted","tag","getAuthTag","encryptedData","buffer","CIPHER_SALT_LENGTH","decipher","BaseServerSpan","LoadComponentsSpan","NextServerSpan","NextNodeServerSpan","StartServerSpan","RenderSpan","AppRenderSpan","RouterSpan","NodeSpan","AppRouteRouteHandlersSpan","ResolveMetadataSpan","MiddlewareSpan","AsyncLocalStorage","globalThis","WebSocket","global","webcrypto","configurable","ReadonlyHeadersError","callable","Headers","Proxy","prop","receiver","ReflectAdapter","lowercased","original","find","deleteProperty","seal","existing","merge","callbackfn","thisArg","Reflect","bind","getTestReqInfo","withRequest","testStorage","extractTestInfoFromRequest","reader","proxyPortHeader","url","proxyPort","testData","testReqInfo","getStore","handleFetch","interceptFetch","buildProxyRequest","request","method","body","cache","credentials","integrity","mode","redirect","referrer","referrerPolicy","getTestStack","stack","arrayBuffer","originalFetch","testInfo","proxyRequest","resp","internal","ok","status","proxyResponse","json","buildResponse","response","Response","fetch","input","init","Request","interceptTestApis","wrapRequestHandler","handler","withRequestContext","webpackEmptyContext","id","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","obj","memoryCache","tagsManifest","originalRequire","resolveFilename","_resolveFilename","__non_webpack_require__","hookPropertyMap","normalizeRepeatedSlashes","urlParts","urlNoQuery","addHookAliases","aliases","dirname","originalResolveFilename","requestMap","parent","isMain","hookResolved","basename","SP","performance","every","DecodeError","NormalizeError","PageNotFoundError","page","MissingStaticPage","getRouteMatcher","routeMatch","param","g","slugName","entry","NEXT_REQUEST_META","getRequestMeta","meta","addRequestMeta","COMPILER_NAMES","client","server","edgeServer","UNDERSCORE_NOT_FOUND_ROUTE","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","PAGES_MANIFEST","APP_PATHS_MANIFEST","SERVER_DIRECTORY","BLOCKED_PAGES","STATIC_STATUS_PAGES","findDir","dir","curDir","fs","getCookieParser","parseCookieFn","RedirectStatusCode","BaseNextRequest","_cookies","BaseNextResponse","destination","statusCode","PermanentRedirect","NodeNextRequest","_req","fetchMetrics","streaming","originalRequest","ReadableStream","controller","Uint8Array","chunk","close","err","NodeNextResponse","originalResponse","_res","textBody","sent","finished","headersSent","statusMessage","removeHeader","getHeaderValues","hasHeader","getHeaders","appendHeader","currentValues","send","onClose","callback","fnv1a52","len","t0","v0","t1","v1","t2","v2","t3","v3","generateETag","payload","weak","formatRevalidate","revalidate","swrDelta","swrHeader","ACTION_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_URL","FLIGHT_HEADERS","NEXT_RSC_UNION_QUERY","sendRenderResult","generateEtags","poweredByHeader","root","isDynamic","toUnchunkedString","etagPayload","sort","scriptTags","querySelector","querySelectorAll","node","hasAttribute","innerHTML","b","localeCompare","script","remove","appendChild","etag","fresh","contentType","byteLength","pipeToNodeResponse","searchParamsToUrlQuery","query","parseUrl","parseRelativeUrl","base","parseQuery","globalBase","resolvedBase","search","hash","href","origin","parsedURL","hostname","port","protocol","stdout","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","nextIndex","formatter","open","bold","red","green","yellow","magenta","white","wait","warn","ready","info","event","trace","LOGGING_METHOD","prefixedLog","prefixType","consoleMethod","bootstrap","warnOnceMessages","Set","warnOnce","v4Seg","v4Str","v6Seg","IPv6Reg","ensureLeadingSlash","normalizeAppPath","segments","normalizeRscURL","INTERCEPTION_ROUTE_MARKERS","isInterceptionRouteAppPath","TEST_ROUTE","isDynamicRoute","extractInterceptionRouteInformation","interceptingRoute","marker","interceptedRoute","splitInterceptingRoute","BOT_UA_RE","isBot","userAgent","voidCatch","encoder","TextEncoder","streamFromBuffer","streamToBuffer","stream","buffers","streamToString","decoder","TextDecoder","fatal","fromNodeOutgoingHttpHeaders","nodeHeaders","toNodeOutgoingHttpHeaders","validateURL","cause","removeTrailingSlash","parsePath","hashIndex","queryIndex","hasQuery","addPathPrefix","addPathSuffix","pathHasPrefix","getHostname","host","normalizeLocalePath","locales","detectedLocale","pathnameParts","locale","removePathPrefix","withoutPrefix","getNextPathnameInfo","basePath","i18n","trailingSlash","nextConfig","pathnameNoDataPrefix","paths","buildId","parseData","i18nProvider","analyze","REGEX_LOCALHOST_HOSTNAME","parseURL","Internal","NextURL","baseOrOpts","opts","__NEXT_NO_MIDDLEWARE_URL_NORMALIZE","domainLocale","detectDomainLocale","domainItems","item","defaultLocale","domains","formatPathname","addLocale","ignorePrefix","lower","forceLocale","formatSearch","username","toJSON","clone","PageSignatureError","RemovedPageError","RemovedUAError","INTERNALS","NextRequest","nextUrl","geo","ip","bodyUsed","keepalive","signal","ua","isNodeNextRequest","isNodeNextResponse","ResponseAbortedName","ResponseAborted","createAbortController","AbortController","writableFinished","abort","NextRequestAdapter","fromBaseNextRequest","fromNodeNextRequest","duplex","aborted","fromWebNextRequest","DetachedPromise","reject","promise","rej","clientComponentLoadStart","clientComponentLoadTimes","clientComponentLoadCount","isAbortError","readable","waitUntilForEnd","errored","destroyed","writer","createWriterFromResponse","started","drained","onDrain","WritableStream","write","NEXT_OTEL_PERFORMANCE_PREFIX","metrics","getClientComponentLoaderMetrics","measure","flushHeaders","getTracer","startResponse","spanName","flush","destroy","pipeTo","RenderResult","fromStatic","metadata","waitUntil","assignMetadata","isNull","toUnchunkedBuffer","isBuffer","chainStreams","streams","writable","TransformStream","preventClose","nextStream","lastStream","catch","responses","denormalizePagePath","_page","getPathMatch","regexp","matcher","regexpToFunction","regexModifier","removeUnnamedParams","reHasRegExp","reReplaceRegExp","escapeStringRegexp","PARAMETER_PATTERN","parseMatchedParameter","getRouteRegex","normalizedRoute","parameterizedRoute","getParametrizedRoute","groupIndex","markerMatch","paramMatches","getSafeKeyFromSegment","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","cleanedKey","invalidKey","parseInt","interceptionPrefix","unescapeSegments","matchHas","missing","hasMatch","hasItem","getSafeParamName","paramName","newParamName","charCode","groupKey","compileNonPath","compile","isError","getProperError","isPlainObject","getObjectClassLabel","getPrototypeOf","LocaleRouteNormalizer","provider","UrlNode","urlPath","_insert","smoosh","_smoosh","childrenPaths","children","restSlugName","optionalRestSlugName","routes","curr","placeholder","urlPaths","slugNames","isCatchAll","nextSegment","segmentName","isOptional","handleSlug","previousSlug","nextSlug","slug","RouteMatcher","dynamic","identity","LocaleRouteMatcher","DefaultRouteMatcherManager","compilationID","providers","waitTillReady","waitTillReadyPromise","reload","matchers","providersMatchers","duplicates","providerMatchers","duplicated","duplicate","others","previousMatchers","cachedMatcher","static","reference","pathnames","indexes","sorted","getSortedRoutes","normalizedPages","pagePath","sortedDynamicMatchers","dynamicMatches","lastCompilationID","inferredFromDefault","skipDynamic","Normalizers","normalizers","normalizer","normalize","normalized","PrefixingNormalizer","normalizePagePath","posix","resolvedPage","AppBundlePathNormalizer","AppFilenameNormalizer","distDir","manifestFilename","wrapNormalizerFn","PAGE_TYPES","UnderscoreNormalizer","AppPathnameNormalizer","AppNormalizers","filename","bundlePath","RouteKind","AppPageRouteMatcher","CachedRouteMatcherProvider","loader","cached","compare","transform","ManifestRouteMatcherProvider","manifestName","manifestLoader","left","right","AppPageRouteMatcherProvider","manifest","pages","allAppPaths","appPaths","kind","APP_PAGE","AppRouteRouteMatcher","AppRouteRouteMatcherProvider","APP_ROUTE","isAPIRoute","PagesAPIRouteMatcher","PagesAPILocaleRouteMatcher","PagesBundlePathNormalizer","PagesFilenameNormalizer","PagesNormalizers","PagesAPIRouteMatcherProvider","PAGES_API","PagesRouteMatcher","PagesLocaleRouteMatcher","PagesRouteMatcherProvider","PAGES","ServerManifestLoader","I18NProvider","lowerCaseLocales","lowerCaseDomains","http","__nextLocale","analysis","__nextInferredLocaleFromDefault","sendResponse","statusText","SuffixPathnameNormalizer","matched","RSCPathnameNormalizer","PrefixPathnameNormalizer","PostponedPathnameNormalizer","ActionPathnameNormalizer","stripFlightHeaders","isAppPageRouteModule","routeModule","isPagesRouteModule","PrefetchRSCPathnameNormalizer","NextDataPathnameNormalizer","buildID","toRoute","NEXT_REQUEST_CONTEXT_SYMBOL","VERCEL_REQUEST_CONTEXT_SYMBOL","REDIRECTS","handleMiddlewareField","NextResponse","cookiesProxy","newHeaders","redirected","initObj","rewrite","getEdgeInstrumentationModule","_ENTRIES","middleware_instrumentation","instrumentationModulePromise","registerInstrumentation","instrumentation","register","registerInstrumentationPromise","getUnsupportedModuleErrorMessage","moduleName","proxy","_obj","construct","_target","_this","NextRequestHint","sourcePage","respondWith","NoFallbackError","WrappedBuildError","innerError","Server","getServerComponentsHmrCache","experimental","serverComponentsHmrCache","__serverComponentsHmrCache","handleRSCRequest","parsedUrl","prefetchRSC","RSC_HEADER","rsc","formatUrl","handleNextDataRequest","getMiddleware","matchNextDataPathname","render404","lastParam","getRouteFromAssetPath","assetPath","ext","localePathResult","__nextDefaultLocale","__nextDataReq","handleNextImageRequest","handleCatchallRenderRequest","handleCatchallMiddlewareRequest","postponed","action","normalizeAndAttachMetadata","enabledDirectories","prepared","preparedPromise","customErrorNo404Warn","execOnce","used","Log","quiet","conf","dev","minimalMode","customServer","experimentalTestProxy","serverOptions","fetchHostname","formatHostname","isIPv6","publicDir","getPublicDir","hasStaticDir","getHasStaticDir","localeNormalizer","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","getBuildId","NEXT_PRIVATE_MINIMAL_MODE","getEnabledDirectories","isAppPPREnabled","app","checkIsAppPPREnabled","ppr","nextFontManifest","getNextFontManifest","NEXT_DEPLOYMENT_ID","deploymentId","renderOpts","supportsDynamicResponse","strictNextHead","canonicalBase","amp","getPrerenderManifest","preview","ampOptimizerConfig","optimizer","images","optimizeFonts","fontManifest","getFontManifest","optimizeCss","nextConfigOutput","output","nextScriptWorkers","disableOptimizedLoading","domainLocales","serverComponents","enableTainting","taint","crossOrigin","largePageDataBytes","runtimeConfig","isExperimentalCompile","clientTraceMetadata","after","onInstrumentationRequestError","instrumentationOnRequestError","setConfig","pagesManifest","getPagesManifest","appPathsManifest","getAppPathsManifest","appPathRoutes","getAppPathRoutes","interceptionRoutePatterns","getinterceptionRoutePatterns","getRouteMatchers","setAssetPrefix","responseCache","getResponseCache","reloadMatchers","ctx","onRequestError","handlerErr","logError","handleRequest","prepare","tracer","withPropagatedContext","SpanKind","SERVER","span","handleRequestImpl","finally","isRSCRequest","setAttributes","rootSpanAttributes","getRootSpanAttributes","updateName","utils","patchSetHeaderWithCookieSupport","middlewareValue","idx","cleanUrl","URLSearchParams","xForwardedProto","isHttps","socket","remoteAddress","attachRequestMeta","parseUrlUtil","pathnameInfo","useMatchedPathHeader","matchedPath","urlPathname","normalizedUrlPath","stripNextDataPath","localeAnalysisResult","srcPathname","pageIsDynamic","getUtils","rewrites","caseSensitive","defaultRouteRegex","dynamicRouteMatcher","defaultRouteMatches","getNamedRouteRegex","prefixRouteKey","getNamedParametrizedRoute","prefixRouteKeys","routeKey","fromCharCode","namedParameterizedRoute","hasInterceptionMarker","usedMarker","namedRegex","handleRewrites","rewriteParams","fsPathname","checkRewrite","hasParams","parsedDestination","destQuery","prepareDestination","newUrl","escapedDestination","destPath","destHostname","destPathParamKeys","destHostnameParamKeys","destParams","destPathCompiler","destHostnameCompiler","strOrArray","paramKeys","appendParamsToQuery","destLocalePathResult","nextInternalLocale","dynamicParams","beforeFiles","afterFiles","matchesPage","fsPathnameNoSlash","fallback","getParamsFromRouteMatches","matchesHasLocale","routeKeyNames","filterLocaleItem","val","_val","keyName","normalizedKey","normalizeDynamicRouteParams","ignoreOptional","hasValidParams","defaultValue","isDefaultValue","defaultVal","normalizeVercelUrl","trustQuery","_parsedUrl","isNextQueryPrefix","isNextInterceptionMarkerPrefix","interpolateDynamicPath","builtParam","paramIdx","paramValue","getRoutesManifest","caseSensitiveRoutes","pathnameBeforeRewrite","rewriteParamKeys","didRewrite","routeParamKeys","normalizeNextQueryParam","onKeyNormalized","paramsResult","matcherParams","curParamsResult","routeParams","renderError","webServerConfig","parsedFullUrl","incrementalCache","getIncrementalCache","requestProtocol","resetRequestCache","__incrementalCache","invokePath","invokeStatus","invokeQuery","parsedMatchedPath","invokePathnameInfo","normalizeResult","bubble","getRequestHandler","loadInstrumentationModule","prepareImpl","normalizedPath","runImpl","pipe","partialContext","pipeImpl","isBotRequest","originalStatus","getStaticHTML","render","internalRender","renderImpl","getWaitUntil","builtinRequestContext","getBuiltinRequestContext","_globalThis","__NEXT_TEST_MODE","noopWaitUntil","hasPage","renderToResponse","getStaticPaths","fallbackField","dynamicRoutes","staticPaths","fallbackMode","renderToResponseWithComponents","requestContext","findComponentsResult","renderToResponseWithComponentsImpl","pathCouldBeIntercepted","resolvedPathname","setVaryHeader","isAppPath","baseVaryHeader","addedNextUrlToVary","components","prerenderManifest","cacheEntry","cachedData","is404Page","is500Page","hasServerProps","getServerSideProps","hasStaticPaths","isServerAction","getServerActionRequestMetadata","actionId","isURLEncodedAction","isMultipartAction","isFetchAction","hasGetInitialProps","Component","getInitialProps","isSSG","getStaticProps","resolvedUrlPathname","hasFallback","pathsResult","resolvedWithoutSlash","isNextDataRequest","isPrefetchRSCRequest","couldSupportPPR","hasDebugStaticShellQuery","__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING","__nextppronly","isRoutePPREnabled","experimentalPPR","isDebugStaticShell","isDebugDynamicAccesses","minimalPostponed","isDynamicRSCRequest","isSupportedDocument","Document","NEXT_BUILTIN_DOCUMENT","isPreviewMode","previewData","runtime","ssgCacheKey","seg","doRender","origQuery","hadTrailingSlash","resolvedUrl","isRevalidate","serverActions","resolvedAsPath","isDraftMode","setAppIsrStatus","nextExport","isStaticGeneration","signalFromNodeResponse","AbortSignal","handle","cacheTags","fetchTags","blob","store","pendingWaitUntil","routerKind","routePath","routeType","clientReferenceManifest","renderHTML","staticBailoutInfo","description","isNotFound","isRedirect","props","pageData","flightData","html","rscData","responseGenerator","hasResolved","previousCacheEntry","isRevalidating","staticPathKey","routeKind","isPrefetch","purpose","notFoundRevalidate","onCacheEntry","handleRedirect","pageProps","__N_REDIRECT","__N_REDIRECT_STATUS","__N_REDIRECT_BASE_PATH","permanent","TemporaryRedirect","stripLocale","splitPath","getOriginalAppPaths","renderPageComponent","bubbleNoFallback","findPageComponents","sriEnabled","sri","algorithm","shouldEnsure","isNoFallbackError","renderToResponseImpl","_nextBubbleNoFallback","fromQuery","initUrl","rewroteUrl","renderErrorToResponse","__nextCustomErrorRender","isWrappedError","renderToHTML","renderToHTMLImpl","setHeaders","renderErrorImpl","renderErrorToResponseImpl","statusPage","removeRequestMeta","maybeFallbackError","renderToHtmlError","fallbackComponents","getFallbackErrorComponents","renderErrorToHTML","deepFreeze","isFrozen","freeze","sharedCache","loadManifest","shouldCache","pagePathCache","LRUCache","getMaybePagePath","cacheKey","serverBuildPath","checkManifest","curPath","manifestNoLocales","getPagePath","requirePage","promises","readFile","__NEXT_PRIVATE_RUNTIME_TYPE","interopDefault","ms","SERVER_ACTION_MANIFESTS_SINGLETON","loadManifestWithRetries","manifestPath","attempts","evalManifestWithRetries","evalManifest","content","contextObject","runInNewContext","loadClientReferenceManifest","entryName","__RSC_MANIFEST","loadComponentsImpl","DocumentMod","AppMod","hasClientManifest","buildManifest","reactLoadableManifest","serverActionsManifest","SERVER_REFERENCE_MANIFEST","setReferenceManifestsSingleton","serverModuleMap","createServerModuleMap","pageName","workers","chunks","ComponentMod","App","pageConfig","loadComponents","wrap","Batcher","cacheKeyFn","schedulerFn","batch","scheduleOnNextTick","nextTick","cb","fromResponseCacheEntry","toResponseCacheEntry","isMiss","ResponseCache","batcher","previousCacheItem","expiresAt","resolved","cachedResponse","resolveValue","min","rateLimitedUntil","CACHE_TAGS_HEADER","CACHE_HEADERS_HEADER","CACHE_REVALIDATE_HEADER","CACHE_FETCH_URL_HEADER","DEBUG","NEXT_PRIVATE_DEBUG_CACHE","fetchRetryWithTimeout","retryIndex","FetchCache","hasMatchingTags","arr1","arr2","set1","set2","isAvailable","_requestHeaders","SUSPENSE_CACHE_URL","scHost","scBasePath","SUSPENSE_CACHE_BASEPATH","SUSPENSE_CACHE_AUTH_TOKEN","scProto","SUSPENSE_CACHE_PROTO","cacheEndpoint","maxMemoryCacheSize","revalidateTag","tags","retryAfter","softTags","kindHint","fetchIdx","fetchUrl","hasFetchKindAndMatchingTags","fetchType","text","cacheState","age","lastModified","newValue","existingCache","existingValue","field","fetchCache","FileSystemCache","flushToDisk","serverDistDir","appDir","_appDir","pagesDir","_pagesDir","revalidatedTags","tagsManifestPath","loadTagsManifestSync","loadTagsManifest","items","revalidatedAt","mkdir","writeFile","filePath","getFilePath","fileData","mtime","stat","getTime","detectFileKind","parsedData","storedTags","tagsHeader","combinedTags","htmlPath","SharedRevalidateTimings","timings","initialRevalidateSeconds","IncrementalCache","fetchCacheKeyPrefix","CurCacheHandler","allowedRevalidateHeaderKeys","locks","unlocks","hasCustomCacheHandler","__NEXT_TEST_MAX_ISR_CACHE","disableForTestmode","NEXT_PRIVATE_TEST_PROXY","revalidateTimings","cacheHandler","calculateRevalidate","fromTime","_getPathname","unlock","lock","unlockNext","existingLock","newLock","generateCacheKey","bodyChunks","getReader","readableBody","total","arr","offset","_ogBody","formData","Blob","cacheString","createHash","digest","cacheData","revalidateAfter","curRevalidate","notFoundRoutes","itemSize","nodeFs","recursive","MockedRequest","Stream","httpVersion","httpVersionMajor","httpVersionMinor","bodyReadable","headersDistinct","_read","connection","complete","trailers","trailersDistinct","rawTrailers","rawHeaders","MockedResponse","headPromise","headPromiseResolve","hasStreamed","resWriter","isSent","_write","_encoding","writeHead","getHeaderNames","strictContentLength","writeEarlyHints","assignSocket","detachSocket","writeContinue","writeProcessing","upgrading","chunkedEncoding","shouldKeepAlive","useChunkedEncodingByDefault","sendDate","addTrailers","NodeModuleLoader","RouteModuleLoader","formatDynamicImportPath","absoluteFilePath","pathToFileURL","isInterceptionRouteRewrite","dynamicImportEsmDefault","dynamicRequire","MiddlewareMatcherCache","WeakMap","NextNodeServer","BaseServer","edgeFunctionsPage","getEdgeFunctionsPages","runEdgeFunction","apiError","handleApiRequest","isMiddlewareInvoke","handleFinished","normalizedPathname","bubblingResult","ensureMiddleware","runMiddleware","BubbledError","__NEXT_OPTIMIZE_FONTS","__NEXT_OPTIMIZE_CSS","__NEXT_SCRIPT_WORKERS","appDocumentPreloading","regex","setHttpClientAndAgentOptions","__NEXT_HTTP_AGENT","__NEXT_HTTP_AGENT_OPTIONS","httpAgentOptions","HttpAgent","__NEXT_HTTPS_AGENT","HttpsAgent","middlewareManifestPath","unstable_preloadEntries","webpackRequire","__next_app__","handleUpgrade","instrumentationHook","runInstrumentationHookIfAvailable","forceReload","silent","CacheHandler","getCacheFilesystem","cacheMaxMemorySize","routesManifest","buildIdFile","runApi","trustHostHeader","onError","renderHTMLImpl","imageOptimizer","edgeFunctionsPages","findPageComponentsImpl","_url","pagePaths","requireFontManifest","NEXT_FONT_MANIFEST","getFallback","cacheFs","logErrorWithOriginalStack","_err","_type","ensurePage","_opts","normalizeReq","normalizeRes","makeRequestHandler","normalizedReq","normalizedRes","logging","fetches","fullUrl","loggingFetchesConfig","revalidateHeaders","mocked","createRequestResponseMocks","unstable_onlyGenerated","getMiddlewareManifest","getMiddlewareMatcher","stored","functions","foundPage","pageInfo","files","file","wasm","binding","assets","hasMiddleware","getEdgeFunctionInfo","ensureEdgeFunction","_params","_cachedPreviewManifest","NEXT_PHASE","isUpgradeReq","getCloneableBody","buffered","endPromise","finalize","replaceRequestBody","cloneBodyStream","p1","PassThrough","p2","_serverDistDir"],"sourceRoot":""}