{"version":3,"sources":["../../../../src/build/webpack/plugins/font-stylesheet-gathering-plugin.ts"],"sourcesContent":["import {\n  webpack,\n  BasicEvaluatedExpression,\n  sources,\n} from 'next/dist/compiled/webpack/webpack'\nimport {\n  getFontDefinitionFromNetwork,\n  getFontOverrideCss,\n} from '../../../server/font-utils'\nimport type { FontManifest } from '../../../server/font-utils'\nimport postcss from 'postcss'\nimport minifier from 'next/dist/compiled/cssnano-simple'\nimport {\n  AUTOMATIC_FONT_OPTIMIZATION_MANIFEST,\n  OPTIMIZED_FONT_PROVIDERS,\n} from '../../../shared/lib/constants'\nimport * as Log from '../../output/log'\n\nfunction minifyCss(css: string): Promise<string> {\n  return postcss([\n    minifier(\n      {\n        excludeAll: true,\n        discardComments: true,\n        normalizeWhitespace: { exclude: false },\n      },\n      postcss\n    ),\n  ])\n    .process(css, { from: undefined })\n    .then((res) => res.css)\n}\n\nfunction isNodeCreatingLinkElement(node: any) {\n  const callee = node.callee as any\n  if (callee.type !== 'Identifier') {\n    return false\n  }\n  const componentNode = node.arguments[0] as any\n  if (componentNode.type !== 'Literal') {\n    return false\n  }\n  // React has pragma: _jsx.\n  // Next has pragma: __jsx.\n  return (\n    (callee.name === '_jsx' || callee.name === '__jsx') &&\n    componentNode.value === 'link'\n  )\n}\n\nexport class FontStylesheetGatheringPlugin {\n  compiler?: webpack.Compiler\n  gatheredStylesheets: Array<string> = []\n  manifestContent: FontManifest = []\n  adjustFontFallbacks?: boolean\n  adjustFontFallbacksWithSizeAdjust?: boolean\n\n  constructor({\n    adjustFontFallbacks,\n    adjustFontFallbacksWithSizeAdjust,\n  }: {\n    adjustFontFallbacks?: boolean\n    adjustFontFallbacksWithSizeAdjust?: boolean\n  }) {\n    this.adjustFontFallbacks = adjustFontFallbacks\n    this.adjustFontFallbacksWithSizeAdjust = adjustFontFallbacksWithSizeAdjust\n  }\n\n  private parserHandler = (\n    factory: ReturnType<webpack.Compiler['createNormalModuleFactory']>\n  ): void => {\n    const JS_TYPES = ['auto', 'esm', 'dynamic']\n    // Do an extra walk per module and add interested visitors to the walk.\n    for (const type of JS_TYPES) {\n      factory.hooks.parser\n        .for('javascript/' + type)\n        .tap(this.constructor.name, (parser: any) => {\n          /**\n           * Webpack fun facts:\n           * `parser.hooks.call.for` cannot catch calls for user defined identifiers like `__jsx`\n           * it can only detect calls for native objects like `window`, `this`, `eval` etc.\n           * In order to be able to catch calls of variables like `__jsx`, first we need to catch them as\n           * Identifier and then return `BasicEvaluatedExpression` whose `id` and `type` webpack matches to\n           * invoke hook for call.\n           * See: https://github.com/webpack/webpack/blob/webpack-4/lib/Parser.js#L1931-L1932.\n           */\n          parser.hooks.evaluate\n            .for('Identifier')\n            .tap(this.constructor.name, (node: any) => {\n              // We will only optimize fonts from first party code.\n              if (parser?.state?.module?.resource.includes('node_modules')) {\n                return\n              }\n              let result\n              if (node.name === '_jsx' || node.name === '__jsx') {\n                result = new BasicEvaluatedExpression()\n                // @ts-ignore\n                result.setRange(node.range)\n                result.setExpression(node)\n                result.setIdentifier(node.name)\n\n                // This was added in webpack 5.\n                result.getMembers = () => []\n              }\n              return result\n            })\n\n          const jsxNodeHandler = (node: any) => {\n            if (node.arguments.length !== 2) {\n              // A font link tag has only two arguments rel=stylesheet and href='...'\n              return\n            }\n            if (!isNodeCreatingLinkElement(node)) {\n              return\n            }\n\n            // node.arguments[0] is the name of the tag and [1] are the props.\n            const arg1 = node.arguments[1]\n\n            const propsNode =\n              arg1.type === 'ObjectExpression' ? (arg1 as any) : undefined\n            const props: { [key: string]: string } = {}\n            if (propsNode) {\n              propsNode.properties.forEach((prop: any) => {\n                if (prop.type !== 'Property') {\n                  return\n                }\n                if (\n                  prop.key.type === 'Identifier' &&\n                  prop.value.type === 'Literal'\n                ) {\n                  props[prop.key.name] = prop.value.value as string\n                }\n              })\n            }\n\n            if (\n              !props.rel ||\n              props.rel !== 'stylesheet' ||\n              !props.href ||\n              !OPTIMIZED_FONT_PROVIDERS.some(({ url }) =>\n                props.href.startsWith(url)\n              )\n            ) {\n              return false\n            }\n\n            this.gatheredStylesheets.push(props.href)\n\n            const buildInfo = parser?.state?.module?.buildInfo\n\n            if (buildInfo) {\n              buildInfo.valueDependencies.set(\n                AUTOMATIC_FONT_OPTIMIZATION_MANIFEST,\n                this.gatheredStylesheets\n              )\n            }\n          }\n\n          // React JSX transform:\n          parser.hooks.call\n            .for('_jsx')\n            .tap(this.constructor.name, jsxNodeHandler)\n          // Next.js JSX transform:\n          parser.hooks.call\n            .for('__jsx')\n            .tap(this.constructor.name, jsxNodeHandler)\n          // New React JSX transform:\n          parser.hooks.call\n            .for('imported var')\n            .tap(this.constructor.name, jsxNodeHandler)\n        })\n    }\n  }\n\n  public apply(compiler: webpack.Compiler) {\n    this.compiler = compiler\n    compiler.hooks.normalModuleFactory.tap(\n      this.constructor.name,\n      this.parserHandler\n    )\n    compiler.hooks.make.tapAsync(this.constructor.name, (compilation, cb) => {\n      compilation.hooks.finishModules.tapAsync(\n        this.constructor.name,\n        async (modules: any, modulesFinished: Function) => {\n          let fontStylesheets = this.gatheredStylesheets\n\n          const fontUrls = new Set<string>()\n          modules.forEach((module: any) => {\n            const fontDependencies = module?.buildInfo?.valueDependencies?.get(\n              AUTOMATIC_FONT_OPTIMIZATION_MANIFEST\n            )\n            if (fontDependencies) {\n              fontDependencies.forEach((v: string) => fontUrls.add(v))\n            }\n          })\n\n          fontStylesheets = Array.from(fontUrls)\n\n          const fontDefinitionPromises = fontStylesheets.map((url) =>\n            getFontDefinitionFromNetwork(url)\n          )\n\n          this.manifestContent = []\n          for (let promiseIndex in fontDefinitionPromises) {\n            let css = await fontDefinitionPromises[promiseIndex]\n\n            if (this.adjustFontFallbacks) {\n              css += getFontOverrideCss(\n                fontStylesheets[promiseIndex],\n                css,\n                this.adjustFontFallbacksWithSizeAdjust\n              )\n            }\n\n            if (css) {\n              try {\n                const content = await minifyCss(css)\n                this.manifestContent.push({\n                  url: fontStylesheets[promiseIndex],\n                  content,\n                })\n              } catch (err) {\n                Log.warn(\n                  `Failed to minify the stylesheet for ${fontStylesheets[promiseIndex]}. Skipped optimizing this font.`\n                )\n                console.error(err)\n              }\n            }\n          }\n\n          // @ts-expect-error invalid assets type\n          compilation.assets[AUTOMATIC_FONT_OPTIMIZATION_MANIFEST] =\n            new sources.RawSource(\n              JSON.stringify(this.manifestContent, null, '  ')\n            )\n\n          modulesFinished()\n        }\n      )\n      cb()\n    })\n\n    compiler.hooks.make.tap(this.constructor.name, (compilation) => {\n      compilation.hooks.processAssets.tap(\n        {\n          name: this.constructor.name,\n          stage: webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS,\n        },\n        (assets: any) => {\n          assets['../' + AUTOMATIC_FONT_OPTIMIZATION_MANIFEST] =\n            new sources.RawSource(\n              JSON.stringify(this.manifestContent, null, '  ')\n            )\n        }\n      )\n    })\n  }\n}\n"],"names":["FontStylesheetGatheringPlugin","minifyCss","css","postcss","minifier","excludeAll","discardComments","normalizeWhitespace","exclude","process","from","undefined","then","res","isNodeCreatingLinkElement","node","callee","type","componentNode","arguments","name","value","constructor","adjustFontFallbacks","adjustFontFallbacksWithSizeAdjust","gatheredStylesheets","manifestContent","parserHandler","factory","JS_TYPES","hooks","parser","for","tap","evaluate","state","module","resource","includes","result","BasicEvaluatedExpression","setRange","range","setExpression","setIdentifier","getMembers","jsxNodeHandler","length","arg1","propsNode","props","properties","forEach","prop","key","rel","href","OPTIMIZED_FONT_PROVIDERS","some","url","startsWith","push","buildInfo","valueDependencies","set","AUTOMATIC_FONT_OPTIMIZATION_MANIFEST","call","apply","compiler","normalModuleFactory","make","tapAsync","compilation","cb","finishModules","modules","modulesFinished","fontStylesheets","fontUrls","Set","fontDependencies","get","v","add","Array","fontDefinitionPromises","map","getFontDefinitionFromNetwork","promiseIndex","getFontOverrideCss","content","err","Log","warn","console","error","assets","sources","RawSource","JSON","stringify","processAssets","stage","webpack","Compilation","PROCESS_ASSETS_STAGE_ADDITIONS"],"mappings":"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"}