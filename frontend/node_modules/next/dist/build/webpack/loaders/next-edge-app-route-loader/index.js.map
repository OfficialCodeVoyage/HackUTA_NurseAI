{"version":3,"sources":["../../../../../src/build/webpack/loaders/next-edge-app-route-loader/index.ts"],"sourcesContent":["import { getModuleBuildInfo } from '../get-module-build-info'\nimport { stringifyRequest } from '../../stringify-request'\nimport type { NextConfig } from '../../../../server/config-shared'\nimport type { webpack } from 'next/dist/compiled/webpack/webpack'\nimport { WEBPACK_RESOURCE_QUERIES } from '../../../../lib/constants'\nimport type { MiddlewareConfig } from '../../../analysis/get-page-static-info'\nimport { loadEntrypoint } from '../../../load-entrypoint'\n\nexport type EdgeAppRouteLoaderQuery = {\n  absolutePagePath: string\n  page: string\n  appDirLoader: string\n  preferredRegion: string | string[] | undefined\n  nextConfigOutput: NextConfig['output']\n  middlewareConfig: string\n}\n\nconst EdgeAppRouteLoader: webpack.LoaderDefinitionFunction<EdgeAppRouteLoaderQuery> =\n  async function (this) {\n    const {\n      page,\n      absolutePagePath,\n      preferredRegion,\n      appDirLoader: appDirLoaderBase64 = '',\n      middlewareConfig: middlewareConfigBase64 = '',\n    } = this.getOptions()\n\n    const appDirLoader = Buffer.from(appDirLoaderBase64, 'base64').toString()\n    const middlewareConfig: MiddlewareConfig = JSON.parse(\n      Buffer.from(middlewareConfigBase64, 'base64').toString()\n    )\n\n    // Ensure we only run this loader for as a module.\n    if (!this._module) throw new Error('This loader is only usable as a module')\n\n    const buildInfo = getModuleBuildInfo(this._module)\n\n    buildInfo.nextEdgeSSR = {\n      isServerComponent: false,\n      page: page,\n      isAppDir: true,\n    }\n    buildInfo.route = {\n      page,\n      absolutePagePath,\n      preferredRegion,\n      middlewareConfig,\n    }\n\n    const stringifiedPagePath = stringifyRequest(this, absolutePagePath)\n    const modulePath = `${appDirLoader}${stringifiedPagePath.substring(\n      1,\n      stringifiedPagePath.length - 1\n    )}?${WEBPACK_RESOURCE_QUERIES.edgeSSREntry}`\n\n    return await loadEntrypoint('edge-app-route', {\n      VAR_USERLAND: modulePath,\n    })\n  }\n\nexport default EdgeAppRouteLoader\n"],"names":["EdgeAppRouteLoader","page","absolutePagePath","preferredRegion","appDirLoader","appDirLoaderBase64","middlewareConfig","middlewareConfigBase64","getOptions","Buffer","from","toString","JSON","parse","_module","Error","buildInfo","getModuleBuildInfo","nextEdgeSSR","isServerComponent","isAppDir","route","stringifiedPagePath","stringifyRequest","modulePath","substring","length","WEBPACK_RESOURCE_QUERIES","edgeSSREntry","loadEntrypoint","VAR_USERLAND"],"mappings":";;;;+BA4DA;;;eAAA;;;oCA5DmC;kCACF;2BAGQ;gCAEV;AAW/B,MAAMA,qBACJ;IACE,MAAM,EACJC,IAAI,EACJC,gBAAgB,EAChBC,eAAe,EACfC,cAAcC,qBAAqB,EAAE,EACrCC,kBAAkBC,yBAAyB,EAAE,EAC9C,GAAG,IAAI,CAACC,UAAU;IAEnB,MAAMJ,eAAeK,OAAOC,IAAI,CAACL,oBAAoB,UAAUM,QAAQ;IACvE,MAAML,mBAAqCM,KAAKC,KAAK,CACnDJ,OAAOC,IAAI,CAACH,wBAAwB,UAAUI,QAAQ;IAGxD,kDAAkD;IAClD,IAAI,CAAC,IAAI,CAACG,OAAO,EAAE,MAAM,IAAIC,MAAM;IAEnC,MAAMC,YAAYC,IAAAA,sCAAkB,EAAC,IAAI,CAACH,OAAO;IAEjDE,UAAUE,WAAW,GAAG;QACtBC,mBAAmB;QACnBlB,MAAMA;QACNmB,UAAU;IACZ;IACAJ,UAAUK,KAAK,GAAG;QAChBpB;QACAC;QACAC;QACAG;IACF;IAEA,MAAMgB,sBAAsBC,IAAAA,kCAAgB,EAAC,IAAI,EAAErB;IACnD,MAAMsB,aAAa,CAAC,EAAEpB,aAAa,EAAEkB,oBAAoBG,SAAS,CAChE,GACAH,oBAAoBI,MAAM,GAAG,GAC7B,CAAC,EAAEC,mCAAwB,CAACC,YAAY,CAAC,CAAC;IAE5C,OAAO,MAAMC,IAAAA,8BAAc,EAAC,kBAAkB;QAC5CC,cAAcN;IAChB;AACF;MAEF,WAAexB"}