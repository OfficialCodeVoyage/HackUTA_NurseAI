{"version":3,"sources":["../../../src/build/analysis/get-page-static-info.ts"],"sourcesContent":["import type { NextConfig } from '../../server/config-shared'\nimport type { Middleware, RouteHas } from '../../lib/load-custom-routes'\n\nimport { promises as fs } from 'fs'\nimport LRUCache from 'next/dist/compiled/lru-cache'\nimport picomatch from 'next/dist/compiled/picomatch'\nimport type { ServerRuntime } from '../../types'\nimport {\n  extractExportedConstValue,\n  UnsupportedValueError,\n} from './extract-const-value'\nimport { parseModule } from './parse-module'\nimport * as Log from '../output/log'\nimport { SERVER_RUNTIME } from '../../lib/constants'\nimport { checkCustomRoutes } from '../../lib/load-custom-routes'\nimport { tryToParsePath } from '../../lib/try-to-parse-path'\nimport { isAPIRoute } from '../../lib/is-api-route'\nimport { isEdgeRuntime } from '../../lib/is-edge-runtime'\nimport { RSC_MODULE_TYPES } from '../../shared/lib/constants'\nimport type { RSCMeta } from '../webpack/loaders/get-module-build-info'\nimport { PAGE_TYPES } from '../../lib/page-types'\n\n// TODO: migrate preferredRegion here\n// Don't forget to update the next-types-plugin file as well\nconst AUTHORIZED_EXTRA_ROUTER_PROPS = ['maxDuration']\n\nexport interface MiddlewareConfigParsed\n  extends Omit<MiddlewareConfig, 'matcher'> {\n  matchers?: MiddlewareMatcher[]\n}\n\n/**\n * This interface represents the exported `config` object in a `middleware.ts` file.\n *\n * Read more: [Next.js Docs: Middleware `config` object](https://nextjs.org/docs/app/api-reference/file-conventions/middleware#config-object-optional)\n */\nexport interface MiddlewareConfig {\n  /**\n   * Read more: [Next.js Docs: Middleware `matcher`](https://nextjs.org/docs/app/api-reference/file-conventions/middleware#matcher),\n   * [Next.js Docs: Middleware matching paths](https://nextjs.org/docs/app/building-your-application/routing/middleware#matching-paths)\n   */\n  matcher?: string | string[] | MiddlewareMatcher[]\n  unstable_allowDynamicGlobs?: string[]\n  regions?: string[] | string\n}\n\nexport interface MiddlewareMatcher {\n  regexp: string\n  locale?: false\n  has?: RouteHas[]\n  missing?: RouteHas[]\n  originalSource: string\n}\n\nexport interface PageStaticInfo {\n  runtime?: ServerRuntime\n  preferredRegion?: string | string[]\n  ssg?: boolean\n  ssr?: boolean\n  rsc?: RSCModuleType\n  generateStaticParams?: boolean\n  generateSitemaps?: boolean\n  generateImageMetadata?: boolean\n  middleware?: MiddlewareConfigParsed\n  amp?: boolean | 'hybrid'\n  extraConfig?: Record<string, any>\n}\n\nconst CLIENT_MODULE_LABEL =\n  /\\/\\* __next_internal_client_entry_do_not_use__ ([^ ]*) (cjs|auto) \\*\\//\n\nconst ACTION_MODULE_LABEL =\n  /\\/\\* __next_internal_action_entry_do_not_use__ (\\{[^}]+\\}) \\*\\//\n\nconst CLIENT_DIRECTIVE = 'use client'\nconst SERVER_ACTION_DIRECTIVE = 'use server'\n\nexport type RSCModuleType = 'server' | 'client'\nexport function getRSCModuleInformation(\n  source: string,\n  isReactServerLayer: boolean\n): RSCMeta {\n  const actionsJson = source.match(ACTION_MODULE_LABEL)\n  const actions = actionsJson\n    ? (Object.values(JSON.parse(actionsJson[1])) as string[])\n    : undefined\n  const clientInfoMatch = source.match(CLIENT_MODULE_LABEL)\n  const isClientRef = !!clientInfoMatch\n\n  if (!isReactServerLayer) {\n    return {\n      type: RSC_MODULE_TYPES.client,\n      actions,\n      isClientRef,\n    }\n  }\n\n  const clientRefs = clientInfoMatch?.[1]?.split(',')\n  const clientEntryType = clientInfoMatch?.[2] as 'cjs' | 'auto'\n\n  const type = clientRefs ? RSC_MODULE_TYPES.client : RSC_MODULE_TYPES.server\n\n  return {\n    type,\n    actions,\n    clientRefs,\n    clientEntryType,\n    isClientRef,\n  }\n}\n\nconst warnedInvalidValueMap = {\n  runtime: new Map<string, boolean>(),\n  preferredRegion: new Map<string, boolean>(),\n} as const\nfunction warnInvalidValue(\n  pageFilePath: string,\n  key: keyof typeof warnedInvalidValueMap,\n  message: string\n): void {\n  if (warnedInvalidValueMap[key].has(pageFilePath)) return\n\n  Log.warn(\n    `Next.js can't recognize the exported \\`${key}\\` field in \"${pageFilePath}\" as ${message}.` +\n      '\\n' +\n      'The default runtime will be used instead.'\n  )\n\n  warnedInvalidValueMap[key].set(pageFilePath, true)\n}\n/**\n * Receives a parsed AST from SWC and checks if it belongs to a module that\n * requires a runtime to be specified. Those are:\n *   - Modules with `export function getStaticProps | getServerSideProps`\n *   - Modules with `export { getStaticProps | getServerSideProps } <from ...>`\n *   - Modules with `export const runtime = ...`\n */\nfunction checkExports(\n  swcAST: any,\n  pageFilePath: string\n): {\n  ssr: boolean\n  ssg: boolean\n  runtime?: string\n  preferredRegion?: string | string[]\n  generateImageMetadata: boolean\n  generateSitemaps: boolean\n  generateStaticParams: boolean\n  extraProperties?: Set<string>\n  directives?: Set<string>\n} {\n  const exportsSet = new Set<string>([\n    'getStaticProps',\n    'getServerSideProps',\n    'generateImageMetadata',\n    'generateSitemaps',\n    'generateStaticParams',\n  ])\n  if (Array.isArray(swcAST?.body)) {\n    try {\n      let runtime: string | undefined\n      let preferredRegion: string | string[] | undefined\n      let ssr: boolean = false\n      let ssg: boolean = false\n      let generateImageMetadata: boolean = false\n      let generateSitemaps: boolean = false\n      let generateStaticParams = false\n      let extraProperties = new Set<string>()\n      let directives = new Set<string>()\n      let hasLeadingNonDirectiveNode = false\n\n      for (const node of swcAST.body) {\n        // There should be no non-string literals nodes before directives\n        if (\n          node.type === 'ExpressionStatement' &&\n          node.expression.type === 'StringLiteral'\n        ) {\n          if (!hasLeadingNonDirectiveNode) {\n            const directive = node.expression.value\n            if (CLIENT_DIRECTIVE === directive) {\n              directives.add('client')\n            }\n            if (SERVER_ACTION_DIRECTIVE === directive) {\n              directives.add('server')\n            }\n          }\n        } else {\n          hasLeadingNonDirectiveNode = true\n        }\n        if (\n          node.type === 'ExportDeclaration' &&\n          node.declaration?.type === 'VariableDeclaration'\n        ) {\n          for (const declaration of node.declaration?.declarations) {\n            if (declaration.id.value === 'runtime') {\n              runtime = declaration.init.value\n            } else if (declaration.id.value === 'preferredRegion') {\n              if (declaration.init.type === 'ArrayExpression') {\n                const elements: string[] = []\n                for (const element of declaration.init.elements) {\n                  const { expression } = element\n                  if (expression.type !== 'StringLiteral') {\n                    continue\n                  }\n                  elements.push(expression.value)\n                }\n                preferredRegion = elements\n              } else {\n                preferredRegion = declaration.init.value\n              }\n            } else {\n              extraProperties.add(declaration.id.value)\n            }\n          }\n        }\n\n        if (\n          node.type === 'ExportDeclaration' &&\n          node.declaration?.type === 'FunctionDeclaration' &&\n          exportsSet.has(node.declaration.identifier?.value)\n        ) {\n          const id = node.declaration.identifier.value\n          ssg = id === 'getStaticProps'\n          ssr = id === 'getServerSideProps'\n          generateImageMetadata = id === 'generateImageMetadata'\n          generateSitemaps = id === 'generateSitemaps'\n          generateStaticParams = id === 'generateStaticParams'\n        }\n\n        if (\n          node.type === 'ExportDeclaration' &&\n          node.declaration?.type === 'VariableDeclaration'\n        ) {\n          const id = node.declaration?.declarations[0]?.id.value\n          if (exportsSet.has(id)) {\n            ssg = id === 'getStaticProps'\n            ssr = id === 'getServerSideProps'\n            generateImageMetadata = id === 'generateImageMetadata'\n            generateSitemaps = id === 'generateSitemaps'\n            generateStaticParams = id === 'generateStaticParams'\n          }\n        }\n\n        if (node.type === 'ExportNamedDeclaration') {\n          const values = node.specifiers.map(\n            (specifier: any) =>\n              specifier.type === 'ExportSpecifier' &&\n              specifier.orig?.type === 'Identifier' &&\n              specifier.orig?.value\n          )\n\n          for (const value of values) {\n            if (!ssg && value === 'getStaticProps') ssg = true\n            if (!ssr && value === 'getServerSideProps') ssr = true\n            if (!generateImageMetadata && value === 'generateImageMetadata')\n              generateImageMetadata = true\n            if (!generateSitemaps && value === 'generateSitemaps')\n              generateSitemaps = true\n            if (!generateStaticParams && value === 'generateStaticParams')\n              generateStaticParams = true\n            if (!runtime && value === 'runtime')\n              warnInvalidValue(\n                pageFilePath,\n                'runtime',\n                'it was not assigned to a string literal'\n              )\n            if (!preferredRegion && value === 'preferredRegion')\n              warnInvalidValue(\n                pageFilePath,\n                'preferredRegion',\n                'it was not assigned to a string literal or an array of string literals'\n              )\n          }\n        }\n      }\n\n      return {\n        ssr,\n        ssg,\n        runtime,\n        preferredRegion,\n        generateImageMetadata,\n        generateSitemaps,\n        generateStaticParams,\n        extraProperties,\n        directives,\n      }\n    } catch (err) {}\n  }\n\n  return {\n    ssg: false,\n    ssr: false,\n    runtime: undefined,\n    preferredRegion: undefined,\n    generateImageMetadata: false,\n    generateSitemaps: false,\n    generateStaticParams: false,\n    extraProperties: undefined,\n    directives: undefined,\n  }\n}\n\nasync function tryToReadFile(filePath: string, shouldThrow: boolean) {\n  try {\n    return await fs.readFile(filePath, {\n      encoding: 'utf8',\n    })\n  } catch (error: any) {\n    if (shouldThrow) {\n      error.message = `Next.js ERROR: Failed to read file ${filePath}:\\n${error.message}`\n      throw error\n    }\n  }\n}\n\nexport function getMiddlewareMatchers(\n  matcherOrMatchers: unknown,\n  nextConfig: Pick<NextConfig, 'basePath' | 'i18n'>\n): MiddlewareMatcher[] {\n  let matchers: unknown[] = []\n  if (Array.isArray(matcherOrMatchers)) {\n    matchers = matcherOrMatchers\n  } else {\n    matchers.push(matcherOrMatchers)\n  }\n  const { i18n } = nextConfig\n\n  const originalSourceMap = new Map<Middleware, string>()\n  let routes = matchers.map((m) => {\n    let middleware = (typeof m === 'string' ? { source: m } : m) as Middleware\n    if (middleware) {\n      originalSourceMap.set(middleware, middleware.source)\n    }\n    return middleware\n  })\n\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(routes, 'middleware')\n\n  routes = routes.map((r) => {\n    let { source } = r\n\n    const isRoot = source === '/'\n\n    if (i18n?.locales && r.locale !== false) {\n      source = `/:nextInternalLocale((?!_next/)[^/.]{1,})${\n        isRoot ? '' : source\n      }`\n    }\n\n    source = `/:nextData(_next/data/[^/]{1,})?${source}${\n      isRoot\n        ? `(${nextConfig.i18n ? '|\\\\.json|' : ''}/?index|/?index\\\\.json)?`\n        : '(.json)?'\n    }`\n\n    if (nextConfig.basePath) {\n      source = `${nextConfig.basePath}${source}`\n    }\n\n    r.source = source\n    return r\n  })\n\n  checkCustomRoutes(routes, 'middleware')\n\n  return routes.map((r) => {\n    const { source, ...rest } = r\n    const parsedPage = tryToParsePath(source)\n\n    if (parsedPage.error || !parsedPage.regexStr) {\n      throw new Error(`Invalid source: ${source}`)\n    }\n\n    const originalSource = originalSourceMap.get(r)\n\n    return {\n      ...rest,\n      regexp: parsedPage.regexStr,\n      originalSource: originalSource || source,\n    }\n  })\n}\n\nfunction getMiddlewareConfig(\n  pageFilePath: string,\n  config: any,\n  nextConfig: NextConfig\n): Partial<MiddlewareConfigParsed> {\n  const result: Partial<MiddlewareConfigParsed> = {}\n\n  if (config.matcher) {\n    result.matchers = getMiddlewareMatchers(config.matcher, nextConfig)\n  }\n\n  if (typeof config.regions === 'string' || Array.isArray(config.regions)) {\n    result.regions = config.regions\n  } else if (typeof config.regions !== 'undefined') {\n    Log.warn(\n      `The \\`regions\\` config was ignored: config must be empty, a string or an array of strings. (${pageFilePath})`\n    )\n  }\n\n  if (config.unstable_allowDynamic) {\n    result.unstable_allowDynamicGlobs = Array.isArray(\n      config.unstable_allowDynamic\n    )\n      ? config.unstable_allowDynamic\n      : [config.unstable_allowDynamic]\n    for (const glob of result.unstable_allowDynamicGlobs ?? []) {\n      try {\n        picomatch(glob)\n      } catch (err) {\n        throw new Error(\n          `${pageFilePath} exported 'config.unstable_allowDynamic' contains invalid pattern '${glob}': ${\n            (err as Error).message\n          }`\n        )\n      }\n    }\n  }\n\n  return result\n}\n\nconst apiRouteWarnings = new LRUCache({ max: 250 })\nfunction warnAboutExperimentalEdge(apiRoute: string | null) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    process.env.NEXT_PRIVATE_BUILD_WORKER === '1'\n  ) {\n    return\n  }\n  if (apiRouteWarnings.has(apiRoute)) {\n    return\n  }\n  Log.warn(\n    apiRoute\n      ? `${apiRoute} provided runtime 'experimental-edge'. It can be updated to 'edge' instead.`\n      : `You are using an experimental edge runtime, the API might change.`\n  )\n  apiRouteWarnings.set(apiRoute, 1)\n}\n\nconst warnedUnsupportedValueMap = new LRUCache<string, boolean>({ max: 250 })\n\nfunction warnAboutUnsupportedValue(\n  pageFilePath: string,\n  page: string | undefined,\n  error: UnsupportedValueError\n) {\n  if (warnedUnsupportedValueMap.has(pageFilePath)) {\n    return\n  }\n\n  Log.warn(\n    `Next.js can't recognize the exported \\`config\\` field in ` +\n      (page ? `route \"${page}\"` : `\"${pageFilePath}\"`) +\n      ':\\n' +\n      error.message +\n      (error.path ? ` at \"${error.path}\"` : '') +\n      '.\\n' +\n      'The default config will be used instead.\\n' +\n      'Read More - https://nextjs.org/docs/messages/invalid-page-config'\n  )\n\n  warnedUnsupportedValueMap.set(pageFilePath, true)\n}\n\n/**\n * For a given pageFilePath and nextConfig, if the config supports it, this\n * function will read the file and return the runtime that should be used.\n * It will look into the file content only if the page *requires* a runtime\n * to be specified, that is, when gSSP or gSP is used.\n * Related discussion: https://github.com/vercel/next.js/discussions/34179\n */\nexport async function getPageStaticInfo(params: {\n  pageFilePath: string\n  nextConfig: Partial<NextConfig>\n  isDev?: boolean\n  page?: string\n  pageType: PAGE_TYPES\n}): Promise<PageStaticInfo> {\n  const { isDev, pageFilePath, nextConfig, page, pageType } = params\n\n  const fileContent = (await tryToReadFile(pageFilePath, !isDev)) || ''\n  if (\n    /(?<!(_jsx|jsx-))runtime|preferredRegion|getStaticProps|getServerSideProps|generateStaticParams|export const|generateImageMetadata|generateSitemaps/.test(\n      fileContent\n    )\n  ) {\n    const swcAST = await parseModule(pageFilePath, fileContent)\n    const {\n      ssg,\n      ssr,\n      runtime,\n      preferredRegion,\n      generateStaticParams,\n      generateImageMetadata,\n      generateSitemaps,\n      extraProperties,\n      directives,\n    } = checkExports(swcAST, pageFilePath)\n    const rscInfo = getRSCModuleInformation(fileContent, true)\n    const rsc = rscInfo.type\n\n    // default / failsafe value for config\n    let config: any // TODO: type this as unknown\n    try {\n      config = extractExportedConstValue(swcAST, 'config')\n    } catch (e) {\n      if (e instanceof UnsupportedValueError) {\n        warnAboutUnsupportedValue(pageFilePath, page, e)\n      }\n      // `export config` doesn't exist, or other unknown error thrown by swc, silence them\n    }\n\n    const extraConfig: Record<string, any> = {}\n\n    if (extraProperties && pageType === PAGE_TYPES.APP) {\n      for (const prop of extraProperties) {\n        if (!AUTHORIZED_EXTRA_ROUTER_PROPS.includes(prop)) continue\n        try {\n          extraConfig[prop] = extractExportedConstValue(swcAST, prop)\n        } catch (e) {\n          if (e instanceof UnsupportedValueError) {\n            warnAboutUnsupportedValue(pageFilePath, page, e)\n          }\n        }\n      }\n    } else if (pageType === PAGE_TYPES.PAGES) {\n      for (const key in config) {\n        if (!AUTHORIZED_EXTRA_ROUTER_PROPS.includes(key)) continue\n        extraConfig[key] = config[key]\n      }\n    }\n\n    if (pageType === PAGE_TYPES.APP) {\n      if (config) {\n        let message = `Page config in ${pageFilePath} is deprecated. Replace \\`export const config=…\\` with the following:`\n\n        if (config.runtime) {\n          message += `\\n  - \\`export const runtime = ${JSON.stringify(\n            config.runtime\n          )}\\``\n        }\n\n        if (config.regions) {\n          message += `\\n  - \\`export const preferredRegion = ${JSON.stringify(\n            config.regions\n          )}\\``\n        }\n\n        message += `\\nVisit https://nextjs.org/docs/app/api-reference/file-conventions/route-segment-config for more information.`\n\n        if (isDev) {\n          Log.warnOnce(message)\n        } else {\n          throw new Error(message)\n        }\n        config = {}\n      }\n    }\n    if (!config) config = {}\n\n    // We use `export const config = { runtime: '...' }` to specify the page runtime for pages/.\n    // In the new app directory, we prefer to use `export const runtime = '...'`\n    // and deprecate the old way. To prevent breaking changes for `pages`, we use the exported config\n    // as the fallback value.\n    let resolvedRuntime\n    if (pageType === PAGE_TYPES.APP) {\n      resolvedRuntime = runtime\n    } else {\n      resolvedRuntime = runtime || config.runtime\n    }\n\n    if (\n      typeof resolvedRuntime !== 'undefined' &&\n      resolvedRuntime !== SERVER_RUNTIME.nodejs &&\n      !isEdgeRuntime(resolvedRuntime)\n    ) {\n      const options = Object.values(SERVER_RUNTIME).join(', ')\n      const message =\n        typeof resolvedRuntime !== 'string'\n          ? `The \\`runtime\\` config must be a string. Please leave it empty or choose one of: ${options}`\n          : `Provided runtime \"${resolvedRuntime}\" is not supported. Please leave it empty or choose one of: ${options}`\n      if (isDev) {\n        Log.error(message)\n      } else {\n        throw new Error(message)\n      }\n    }\n\n    const requiresServerRuntime = ssr || ssg || pageType === PAGE_TYPES.APP\n\n    const isAnAPIRoute = isAPIRoute(page?.replace(/^(?:\\/src)?\\/pages\\//, '/'))\n\n    resolvedRuntime =\n      isEdgeRuntime(resolvedRuntime) || requiresServerRuntime\n        ? resolvedRuntime\n        : undefined\n\n    if (resolvedRuntime === SERVER_RUNTIME.experimentalEdge) {\n      warnAboutExperimentalEdge(isAnAPIRoute ? page! : null)\n    }\n\n    if (\n      resolvedRuntime === SERVER_RUNTIME.edge &&\n      pageType === PAGE_TYPES.PAGES &&\n      page &&\n      !isAnAPIRoute\n    ) {\n      const message = `Page ${page} provided runtime 'edge', the edge runtime for rendering is currently experimental. Use runtime 'experimental-edge' instead.`\n      if (isDev) {\n        Log.error(message)\n      } else {\n        throw new Error(message)\n      }\n    }\n\n    const middlewareConfig = getMiddlewareConfig(\n      page ?? 'middleware/edge API route',\n      config,\n      nextConfig\n    )\n\n    if (\n      pageType === PAGE_TYPES.APP &&\n      directives?.has('client') &&\n      generateStaticParams\n    ) {\n      throw new Error(\n        `Page \"${page}\" cannot use both \"use client\" and export function \"generateStaticParams()\".`\n      )\n    }\n\n    return {\n      ssr,\n      ssg,\n      rsc,\n      generateStaticParams,\n      generateImageMetadata,\n      generateSitemaps,\n      amp: config.amp || false,\n      ...(middlewareConfig && { middleware: middlewareConfig }),\n      ...(resolvedRuntime && { runtime: resolvedRuntime }),\n      preferredRegion,\n      extraConfig,\n    }\n  }\n\n  return {\n    ssr: false,\n    ssg: false,\n    rsc: RSC_MODULE_TYPES.server,\n    generateStaticParams: false,\n    generateImageMetadata: false,\n    generateSitemaps: false,\n    amp: false,\n    runtime: undefined,\n  }\n}\n"],"names":["getMiddlewareMatchers","getPageStaticInfo","getRSCModuleInformation","AUTHORIZED_EXTRA_ROUTER_PROPS","CLIENT_MODULE_LABEL","ACTION_MODULE_LABEL","CLIENT_DIRECTIVE","SERVER_ACTION_DIRECTIVE","source","isReactServerLayer","clientInfoMatch","actionsJson","match","actions","Object","values","JSON","parse","undefined","isClientRef","type","RSC_MODULE_TYPES","client","clientRefs","split","clientEntryType","server","warnedInvalidValueMap","runtime","Map","preferredRegion","warnInvalidValue","pageFilePath","key","message","has","Log","warn","set","checkExports","swcAST","exportsSet","Set","Array","isArray","body","ssr","ssg","generateImageMetadata","generateSitemaps","generateStaticParams","extraProperties","directives","hasLeadingNonDirectiveNode","node","expression","directive","value","add","declaration","declarations","id","init","elements","element","push","identifier","specifiers","map","specifier","orig","err","tryToReadFile","filePath","shouldThrow","fs","readFile","encoding","error","matcherOrMatchers","nextConfig","matchers","i18n","originalSourceMap","routes","m","middleware","checkCustomRoutes","r","isRoot","locales","locale","basePath","rest","parsedPage","tryToParsePath","regexStr","Error","originalSource","get","regexp","getMiddlewareConfig","config","result","matcher","regions","unstable_allowDynamic","unstable_allowDynamicGlobs","glob","picomatch","apiRouteWarnings","LRUCache","max","warnAboutExperimentalEdge","apiRoute","process","env","NODE_ENV","NEXT_PRIVATE_BUILD_WORKER","warnedUnsupportedValueMap","warnAboutUnsupportedValue","page","path","params","isDev","pageType","fileContent","test","parseModule","rscInfo","rsc","extractExportedConstValue","e","UnsupportedValueError","extraConfig","PAGE_TYPES","APP","prop","includes","PAGES","stringify","warnOnce","resolvedRuntime","SERVER_RUNTIME","nodejs","isEdgeRuntime","options","join","requiresServerRuntime","isAnAPIRoute","isAPIRoute","replace","experimentalEdge","edge","middlewareConfig","amp"],"mappings":";;;;;;;;;;;;;;;;IA4TgBA,qBAAqB;eAArBA;;IAkKMC,iBAAiB;eAAjBA;;IAhZNC,uBAAuB;eAAvBA;;;oBA3Ee;iEACV;kEACC;mCAKf;6BACqB;6DACP;2BACU;kCACG;gCACH;4BACJ;+BACG;4BACG;2BAEN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE3B,qCAAqC;AACrC,4DAA4D;AAC5D,MAAMC,gCAAgC;IAAC;CAAc;AA4CrD,MAAMC,sBACJ;AAEF,MAAMC,sBACJ;AAEF,MAAMC,mBAAmB;AACzB,MAAMC,0BAA0B;AAGzB,SAASL,wBACdM,MAAc,EACdC,kBAA2B;QAiBRC;IAfnB,MAAMC,cAAcH,OAAOI,KAAK,CAACP;IACjC,MAAMQ,UAAUF,cACXG,OAAOC,MAAM,CAACC,KAAKC,KAAK,CAACN,WAAW,CAAC,EAAE,KACxCO;IACJ,MAAMR,kBAAkBF,OAAOI,KAAK,CAACR;IACrC,MAAMe,cAAc,CAAC,CAACT;IAEtB,IAAI,CAACD,oBAAoB;QACvB,OAAO;YACLW,MAAMC,4BAAgB,CAACC,MAAM;YAC7BT;YACAM;QACF;IACF;IAEA,MAAMI,aAAab,oCAAAA,oBAAAA,eAAiB,CAAC,EAAE,qBAApBA,kBAAsBc,KAAK,CAAC;IAC/C,MAAMC,kBAAkBf,mCAAAA,eAAiB,CAAC,EAAE;IAE5C,MAAMU,OAAOG,aAAaF,4BAAgB,CAACC,MAAM,GAAGD,4BAAgB,CAACK,MAAM;IAE3E,OAAO;QACLN;QACAP;QACAU;QACAE;QACAN;IACF;AACF;AAEA,MAAMQ,wBAAwB;IAC5BC,SAAS,IAAIC;IACbC,iBAAiB,IAAID;AACvB;AACA,SAASE,iBACPC,YAAoB,EACpBC,GAAuC,EACvCC,OAAe;IAEf,IAAIP,qBAAqB,CAACM,IAAI,CAACE,GAAG,CAACH,eAAe;IAElDI,KAAIC,IAAI,CACN,CAAC,uCAAuC,EAAEJ,IAAI,aAAa,EAAED,aAAa,KAAK,EAAEE,QAAQ,CAAC,CAAC,GACzF,OACA;IAGJP,qBAAqB,CAACM,IAAI,CAACK,GAAG,CAACN,cAAc;AAC/C;AACA;;;;;;CAMC,GACD,SAASO,aACPC,MAAW,EACXR,YAAoB;IAYpB,MAAMS,aAAa,IAAIC,IAAY;QACjC;QACA;QACA;QACA;QACA;KACD;IACD,IAAIC,MAAMC,OAAO,CAACJ,0BAAAA,OAAQK,IAAI,GAAG;QAC/B,IAAI;YACF,IAAIjB;YACJ,IAAIE;YACJ,IAAIgB,MAAe;YACnB,IAAIC,MAAe;YACnB,IAAIC,wBAAiC;YACrC,IAAIC,mBAA4B;YAChC,IAAIC,uBAAuB;YAC3B,IAAIC,kBAAkB,IAAIT;YAC1B,IAAIU,aAAa,IAAIV;YACrB,IAAIW,6BAA6B;YAEjC,KAAK,MAAMC,QAAQd,OAAOK,IAAI,CAAE;oBAoB5BS,mBA2BAA,oBACeA,8BAYfA;gBA3DF,iEAAiE;gBACjE,IACEA,KAAKlC,IAAI,KAAK,yBACdkC,KAAKC,UAAU,CAACnC,IAAI,KAAK,iBACzB;oBACA,IAAI,CAACiC,4BAA4B;wBAC/B,MAAMG,YAAYF,KAAKC,UAAU,CAACE,KAAK;wBACvC,IAAInD,qBAAqBkD,WAAW;4BAClCJ,WAAWM,GAAG,CAAC;wBACjB;wBACA,IAAInD,4BAA4BiD,WAAW;4BACzCJ,WAAWM,GAAG,CAAC;wBACjB;oBACF;gBACF,OAAO;oBACLL,6BAA6B;gBAC/B;gBACA,IACEC,KAAKlC,IAAI,KAAK,uBACdkC,EAAAA,oBAAAA,KAAKK,WAAW,qBAAhBL,kBAAkBlC,IAAI,MAAK,uBAC3B;wBAC0BkC;oBAA1B,KAAK,MAAMK,gBAAeL,qBAAAA,KAAKK,WAAW,qBAAhBL,mBAAkBM,YAAY,CAAE;wBACxD,IAAID,YAAYE,EAAE,CAACJ,KAAK,KAAK,WAAW;4BACtC7B,UAAU+B,YAAYG,IAAI,CAACL,KAAK;wBAClC,OAAO,IAAIE,YAAYE,EAAE,CAACJ,KAAK,KAAK,mBAAmB;4BACrD,IAAIE,YAAYG,IAAI,CAAC1C,IAAI,KAAK,mBAAmB;gCAC/C,MAAM2C,WAAqB,EAAE;gCAC7B,KAAK,MAAMC,WAAWL,YAAYG,IAAI,CAACC,QAAQ,CAAE;oCAC/C,MAAM,EAAER,UAAU,EAAE,GAAGS;oCACvB,IAAIT,WAAWnC,IAAI,KAAK,iBAAiB;wCACvC;oCACF;oCACA2C,SAASE,IAAI,CAACV,WAAWE,KAAK;gCAChC;gCACA3B,kBAAkBiC;4BACpB,OAAO;gCACLjC,kBAAkB6B,YAAYG,IAAI,CAACL,KAAK;4BAC1C;wBACF,OAAO;4BACLN,gBAAgBO,GAAG,CAACC,YAAYE,EAAE,CAACJ,KAAK;wBAC1C;oBACF;gBACF;gBAEA,IACEH,KAAKlC,IAAI,KAAK,uBACdkC,EAAAA,qBAAAA,KAAKK,WAAW,qBAAhBL,mBAAkBlC,IAAI,MAAK,yBAC3BqB,WAAWN,GAAG,EAACmB,+BAAAA,KAAKK,WAAW,CAACO,UAAU,qBAA3BZ,6BAA6BG,KAAK,GACjD;oBACA,MAAMI,KAAKP,KAAKK,WAAW,CAACO,UAAU,CAACT,KAAK;oBAC5CV,MAAMc,OAAO;oBACbf,MAAMe,OAAO;oBACbb,wBAAwBa,OAAO;oBAC/BZ,mBAAmBY,OAAO;oBAC1BX,uBAAuBW,OAAO;gBAChC;gBAEA,IACEP,KAAKlC,IAAI,KAAK,uBACdkC,EAAAA,qBAAAA,KAAKK,WAAW,qBAAhBL,mBAAkBlC,IAAI,MAAK,uBAC3B;wBACWkC,iCAAAA;oBAAX,MAAMO,MAAKP,qBAAAA,KAAKK,WAAW,sBAAhBL,kCAAAA,mBAAkBM,YAAY,CAAC,EAAE,qBAAjCN,gCAAmCO,EAAE,CAACJ,KAAK;oBACtD,IAAIhB,WAAWN,GAAG,CAAC0B,KAAK;wBACtBd,MAAMc,OAAO;wBACbf,MAAMe,OAAO;wBACbb,wBAAwBa,OAAO;wBAC/BZ,mBAAmBY,OAAO;wBAC1BX,uBAAuBW,OAAO;oBAChC;gBACF;gBAEA,IAAIP,KAAKlC,IAAI,KAAK,0BAA0B;oBAC1C,MAAML,SAASuC,KAAKa,UAAU,CAACC,GAAG,CAChC,CAACC;4BAECA,iBACAA;+BAFAA,UAAUjD,IAAI,KAAK,qBACnBiD,EAAAA,kBAAAA,UAAUC,IAAI,qBAAdD,gBAAgBjD,IAAI,MAAK,kBACzBiD,mBAAAA,UAAUC,IAAI,qBAAdD,iBAAgBZ,KAAK;;oBAGzB,KAAK,MAAMA,SAAS1C,OAAQ;wBAC1B,IAAI,CAACgC,OAAOU,UAAU,kBAAkBV,MAAM;wBAC9C,IAAI,CAACD,OAAOW,UAAU,sBAAsBX,MAAM;wBAClD,IAAI,CAACE,yBAAyBS,UAAU,yBACtCT,wBAAwB;wBAC1B,IAAI,CAACC,oBAAoBQ,UAAU,oBACjCR,mBAAmB;wBACrB,IAAI,CAACC,wBAAwBO,UAAU,wBACrCP,uBAAuB;wBACzB,IAAI,CAACtB,WAAW6B,UAAU,WACxB1B,iBACEC,cACA,WACA;wBAEJ,IAAI,CAACF,mBAAmB2B,UAAU,mBAChC1B,iBACEC,cACA,mBACA;oBAEN;gBACF;YACF;YAEA,OAAO;gBACLc;gBACAC;gBACAnB;gBACAE;gBACAkB;gBACAC;gBACAC;gBACAC;gBACAC;YACF;QACF,EAAE,OAAOmB,KAAK,CAAC;IACjB;IAEA,OAAO;QACLxB,KAAK;QACLD,KAAK;QACLlB,SAASV;QACTY,iBAAiBZ;QACjB8B,uBAAuB;QACvBC,kBAAkB;QAClBC,sBAAsB;QACtBC,iBAAiBjC;QACjBkC,YAAYlC;IACd;AACF;AAEA,eAAesD,cAAcC,QAAgB,EAAEC,WAAoB;IACjE,IAAI;QACF,OAAO,MAAMC,YAAE,CAACC,QAAQ,CAACH,UAAU;YACjCI,UAAU;QACZ;IACF,EAAE,OAAOC,OAAY;QACnB,IAAIJ,aAAa;YACfI,MAAM5C,OAAO,GAAG,CAAC,mCAAmC,EAAEuC,SAAS,GAAG,EAAEK,MAAM5C,OAAO,CAAC,CAAC;YACnF,MAAM4C;QACR;IACF;AACF;AAEO,SAAS9E,sBACd+E,iBAA0B,EAC1BC,UAAiD;IAEjD,IAAIC,WAAsB,EAAE;IAC5B,IAAItC,MAAMC,OAAO,CAACmC,oBAAoB;QACpCE,WAAWF;IACb,OAAO;QACLE,SAAShB,IAAI,CAACc;IAChB;IACA,MAAM,EAAEG,IAAI,EAAE,GAAGF;IAEjB,MAAMG,oBAAoB,IAAItD;IAC9B,IAAIuD,SAASH,SAASb,GAAG,CAAC,CAACiB;QACzB,IAAIC,aAAc,OAAOD,MAAM,WAAW;YAAE7E,QAAQ6E;QAAE,IAAIA;QAC1D,IAAIC,YAAY;YACdH,kBAAkB7C,GAAG,CAACgD,YAAYA,WAAW9E,MAAM;QACrD;QACA,OAAO8E;IACT;IAEA,yDAAyD;IACzD,uBAAuB;IACvBC,IAAAA,mCAAiB,EAACH,QAAQ;IAE1BA,SAASA,OAAOhB,GAAG,CAAC,CAACoB;QACnB,IAAI,EAAEhF,MAAM,EAAE,GAAGgF;QAEjB,MAAMC,SAASjF,WAAW;QAE1B,IAAI0E,CAAAA,wBAAAA,KAAMQ,OAAO,KAAIF,EAAEG,MAAM,KAAK,OAAO;YACvCnF,SAAS,CAAC,yCAAyC,EACjDiF,SAAS,KAAKjF,OACf,CAAC;QACJ;QAEAA,SAAS,CAAC,gCAAgC,EAAEA,OAAO,EACjDiF,SACI,CAAC,CAAC,EAAET,WAAWE,IAAI,GAAG,cAAc,GAAG,wBAAwB,CAAC,GAChE,WACL,CAAC;QAEF,IAAIF,WAAWY,QAAQ,EAAE;YACvBpF,SAAS,CAAC,EAAEwE,WAAWY,QAAQ,CAAC,EAAEpF,OAAO,CAAC;QAC5C;QAEAgF,EAAEhF,MAAM,GAAGA;QACX,OAAOgF;IACT;IAEAD,IAAAA,mCAAiB,EAACH,QAAQ;IAE1B,OAAOA,OAAOhB,GAAG,CAAC,CAACoB;QACjB,MAAM,EAAEhF,MAAM,EAAE,GAAGqF,MAAM,GAAGL;QAC5B,MAAMM,aAAaC,IAAAA,8BAAc,EAACvF;QAElC,IAAIsF,WAAWhB,KAAK,IAAI,CAACgB,WAAWE,QAAQ,EAAE;YAC5C,MAAM,IAAIC,MAAM,CAAC,gBAAgB,EAAEzF,OAAO,CAAC;QAC7C;QAEA,MAAM0F,iBAAiBf,kBAAkBgB,GAAG,CAACX;QAE7C,OAAO;YACL,GAAGK,IAAI;YACPO,QAAQN,WAAWE,QAAQ;YAC3BE,gBAAgBA,kBAAkB1F;QACpC;IACF;AACF;AAEA,SAAS6F,oBACPrE,YAAoB,EACpBsE,MAAW,EACXtB,UAAsB;IAEtB,MAAMuB,SAA0C,CAAC;IAEjD,IAAID,OAAOE,OAAO,EAAE;QAClBD,OAAOtB,QAAQ,GAAGjF,sBAAsBsG,OAAOE,OAAO,EAAExB;IAC1D;IAEA,IAAI,OAAOsB,OAAOG,OAAO,KAAK,YAAY9D,MAAMC,OAAO,CAAC0D,OAAOG,OAAO,GAAG;QACvEF,OAAOE,OAAO,GAAGH,OAAOG,OAAO;IACjC,OAAO,IAAI,OAAOH,OAAOG,OAAO,KAAK,aAAa;QAChDrE,KAAIC,IAAI,CACN,CAAC,4FAA4F,EAAEL,aAAa,CAAC,CAAC;IAElH;IAEA,IAAIsE,OAAOI,qBAAqB,EAAE;QAChCH,OAAOI,0BAA0B,GAAGhE,MAAMC,OAAO,CAC/C0D,OAAOI,qBAAqB,IAE1BJ,OAAOI,qBAAqB,GAC5B;YAACJ,OAAOI,qBAAqB;SAAC;QAClC,KAAK,MAAME,QAAQL,OAAOI,0BAA0B,IAAI,EAAE,CAAE;YAC1D,IAAI;gBACFE,IAAAA,kBAAS,EAACD;YACZ,EAAE,OAAOrC,KAAK;gBACZ,MAAM,IAAI0B,MACR,CAAC,EAAEjE,aAAa,mEAAmE,EAAE4E,KAAK,GAAG,EAC3F,AAACrC,IAAcrC,OAAO,CACvB,CAAC;YAEN;QACF;IACF;IAEA,OAAOqE;AACT;AAEA,MAAMO,mBAAmB,IAAIC,iBAAQ,CAAC;IAAEC,KAAK;AAAI;AACjD,SAASC,0BAA0BC,QAAuB;IACxD,IACEC,QAAQC,GAAG,CAACC,QAAQ,KAAK,gBACzBF,QAAQC,GAAG,CAACE,yBAAyB,KAAK,KAC1C;QACA;IACF;IACA,IAAIR,iBAAiB3E,GAAG,CAAC+E,WAAW;QAClC;IACF;IACA9E,KAAIC,IAAI,CACN6E,WACI,CAAC,EAAEA,SAAS,2EAA2E,CAAC,GACxF,CAAC,iEAAiE,CAAC;IAEzEJ,iBAAiBxE,GAAG,CAAC4E,UAAU;AACjC;AAEA,MAAMK,4BAA4B,IAAIR,iBAAQ,CAAkB;IAAEC,KAAK;AAAI;AAE3E,SAASQ,0BACPxF,YAAoB,EACpByF,IAAwB,EACxB3C,KAA4B;IAE5B,IAAIyC,0BAA0BpF,GAAG,CAACH,eAAe;QAC/C;IACF;IAEAI,KAAIC,IAAI,CACN,CAAC,yDAAyD,CAAC,GACxDoF,CAAAA,OAAO,CAAC,OAAO,EAAEA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAEzF,aAAa,CAAC,CAAC,AAAD,IAC9C,QACA8C,MAAM5C,OAAO,GACZ4C,CAAAA,MAAM4C,IAAI,GAAG,CAAC,KAAK,EAAE5C,MAAM4C,IAAI,CAAC,CAAC,CAAC,GAAG,EAAC,IACvC,QACA,+CACA;IAGJH,0BAA0BjF,GAAG,CAACN,cAAc;AAC9C;AASO,eAAe/B,kBAAkB0H,MAMvC;IACC,MAAM,EAAEC,KAAK,EAAE5F,YAAY,EAAEgD,UAAU,EAAEyC,IAAI,EAAEI,QAAQ,EAAE,GAAGF;IAE5D,MAAMG,cAAc,AAAC,MAAMtD,cAAcxC,cAAc,CAAC4F,UAAW;IACnE,IACE,qJAAqJG,IAAI,CACvJD,cAEF;QACA,MAAMtF,SAAS,MAAMwF,IAAAA,wBAAW,EAAChG,cAAc8F;QAC/C,MAAM,EACJ/E,GAAG,EACHD,GAAG,EACHlB,OAAO,EACPE,eAAe,EACfoB,oBAAoB,EACpBF,qBAAqB,EACrBC,gBAAgB,EAChBE,eAAe,EACfC,UAAU,EACX,GAAGb,aAAaC,QAAQR;QACzB,MAAMiG,UAAU/H,wBAAwB4H,aAAa;QACrD,MAAMI,MAAMD,QAAQ7G,IAAI;QAExB,sCAAsC;QACtC,IAAIkF,MAAY,6BAA6B;;QAC7C,IAAI;YACFA,SAAS6B,IAAAA,4CAAyB,EAAC3F,QAAQ;QAC7C,EAAE,OAAO4F,GAAG;YACV,IAAIA,aAAaC,wCAAqB,EAAE;gBACtCb,0BAA0BxF,cAAcyF,MAAMW;YAChD;QACA,oFAAoF;QACtF;QAEA,MAAME,cAAmC,CAAC;QAE1C,IAAInF,mBAAmB0E,aAAaU,qBAAU,CAACC,GAAG,EAAE;YAClD,KAAK,MAAMC,QAAQtF,gBAAiB;gBAClC,IAAI,CAAChD,8BAA8BuI,QAAQ,CAACD,OAAO;gBACnD,IAAI;oBACFH,WAAW,CAACG,KAAK,GAAGN,IAAAA,4CAAyB,EAAC3F,QAAQiG;gBACxD,EAAE,OAAOL,GAAG;oBACV,IAAIA,aAAaC,wCAAqB,EAAE;wBACtCb,0BAA0BxF,cAAcyF,MAAMW;oBAChD;gBACF;YACF;QACF,OAAO,IAAIP,aAAaU,qBAAU,CAACI,KAAK,EAAE;YACxC,IAAK,MAAM1G,OAAOqE,OAAQ;gBACxB,IAAI,CAACnG,8BAA8BuI,QAAQ,CAACzG,MAAM;gBAClDqG,WAAW,CAACrG,IAAI,GAAGqE,MAAM,CAACrE,IAAI;YAChC;QACF;QAEA,IAAI4F,aAAaU,qBAAU,CAACC,GAAG,EAAE;YAC/B,IAAIlC,QAAQ;gBACV,IAAIpE,UAAU,CAAC,eAAe,EAAEF,aAAa,qEAAqE,CAAC;gBAEnH,IAAIsE,OAAO1E,OAAO,EAAE;oBAClBM,WAAW,CAAC,+BAA+B,EAAElB,KAAK4H,SAAS,CACzDtC,OAAO1E,OAAO,EACd,EAAE,CAAC;gBACP;gBAEA,IAAI0E,OAAOG,OAAO,EAAE;oBAClBvE,WAAW,CAAC,uCAAuC,EAAElB,KAAK4H,SAAS,CACjEtC,OAAOG,OAAO,EACd,EAAE,CAAC;gBACP;gBAEAvE,WAAW,CAAC,6GAA6G,CAAC;gBAE1H,IAAI0F,OAAO;oBACTxF,KAAIyG,QAAQ,CAAC3G;gBACf,OAAO;oBACL,MAAM,IAAI+D,MAAM/D;gBAClB;gBACAoE,SAAS,CAAC;YACZ;QACF;QACA,IAAI,CAACA,QAAQA,SAAS,CAAC;QAEvB,4FAA4F;QAC5F,4EAA4E;QAC5E,iGAAiG;QACjG,yBAAyB;QACzB,IAAIwC;QACJ,IAAIjB,aAAaU,qBAAU,CAACC,GAAG,EAAE;YAC/BM,kBAAkBlH;QACpB,OAAO;YACLkH,kBAAkBlH,WAAW0E,OAAO1E,OAAO;QAC7C;QAEA,IACE,OAAOkH,oBAAoB,eAC3BA,oBAAoBC,yBAAc,CAACC,MAAM,IACzC,CAACC,IAAAA,4BAAa,EAACH,kBACf;YACA,MAAMI,UAAUpI,OAAOC,MAAM,CAACgI,yBAAc,EAAEI,IAAI,CAAC;YACnD,MAAMjH,UACJ,OAAO4G,oBAAoB,WACvB,CAAC,iFAAiF,EAAEI,QAAQ,CAAC,GAC7F,CAAC,kBAAkB,EAAEJ,gBAAgB,4DAA4D,EAAEI,QAAQ,CAAC;YAClH,IAAItB,OAAO;gBACTxF,KAAI0C,KAAK,CAAC5C;YACZ,OAAO;gBACL,MAAM,IAAI+D,MAAM/D;YAClB;QACF;QAEA,MAAMkH,wBAAwBtG,OAAOC,OAAO8E,aAAaU,qBAAU,CAACC,GAAG;QAEvE,MAAMa,eAAeC,IAAAA,sBAAU,EAAC7B,wBAAAA,KAAM8B,OAAO,CAAC,wBAAwB;QAEtET,kBACEG,IAAAA,4BAAa,EAACH,oBAAoBM,wBAC9BN,kBACA5H;QAEN,IAAI4H,oBAAoBC,yBAAc,CAACS,gBAAgB,EAAE;YACvDvC,0BAA0BoC,eAAe5B,OAAQ;QACnD;QAEA,IACEqB,oBAAoBC,yBAAc,CAACU,IAAI,IACvC5B,aAAaU,qBAAU,CAACI,KAAK,IAC7BlB,QACA,CAAC4B,cACD;YACA,MAAMnH,UAAU,CAAC,KAAK,EAAEuF,KAAK,4HAA4H,CAAC;YAC1J,IAAIG,OAAO;gBACTxF,KAAI0C,KAAK,CAAC5C;YACZ,OAAO;gBACL,MAAM,IAAI+D,MAAM/D;YAClB;QACF;QAEA,MAAMwH,mBAAmBrD,oBACvBoB,QAAQ,6BACRnB,QACAtB;QAGF,IACE6C,aAAaU,qBAAU,CAACC,GAAG,KAC3BpF,8BAAAA,WAAYjB,GAAG,CAAC,cAChBe,sBACA;YACA,MAAM,IAAI+C,MACR,CAAC,MAAM,EAAEwB,KAAK,4EAA4E,CAAC;QAE/F;QAEA,OAAO;YACL3E;YACAC;YACAmF;YACAhF;YACAF;YACAC;YACA0G,KAAKrD,OAAOqD,GAAG,IAAI;YACnB,GAAID,oBAAoB;gBAAEpE,YAAYoE;YAAiB,CAAC;YACxD,GAAIZ,mBAAmB;gBAAElH,SAASkH;YAAgB,CAAC;YACnDhH;YACAwG;QACF;IACF;IAEA,OAAO;QACLxF,KAAK;QACLC,KAAK;QACLmF,KAAK7G,4BAAgB,CAACK,MAAM;QAC5BwB,sBAAsB;QACtBF,uBAAuB;QACvBC,kBAAkB;QAClB0G,KAAK;QACL/H,SAASV;IACX;AACF"}