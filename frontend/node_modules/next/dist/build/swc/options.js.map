{"version":3,"sources":["../../../src/build/swc/options.ts"],"sourcesContent":["import { WEBPACK_LAYERS, type WebpackLayerName } from '../../lib/constants'\nimport type {\n  NextConfig,\n  ExperimentalConfig,\n  EmotionConfig,\n  StyledComponentsConfig,\n} from '../../server/config-shared'\nimport type { ResolvedBaseUrl } from '../load-jsconfig'\nimport { isWebpackServerOnlyLayer } from '../utils'\n\nconst nextDistPath =\n  /(next[\\\\/]dist[\\\\/]shared[\\\\/]lib)|(next[\\\\/]dist[\\\\/]client)|(next[\\\\/]dist[\\\\/]pages)/\n\nconst nodeModulesPath = /[\\\\/]node_modules[\\\\/]/\n\nconst regeneratorRuntimePath = require.resolve(\n  'next/dist/compiled/regenerator-runtime'\n)\n\nfunction isTypeScriptFile(filename: string) {\n  return filename.endsWith('.ts') || filename.endsWith('.tsx')\n}\n\nfunction isCommonJSFile(filename: string) {\n  return filename.endsWith('.cjs')\n}\n\n// Ensure Next.js internals and .cjs files are output as CJS modules,\n// By default all modules are output as ESM or will treated as CJS if next-swc/auto-cjs plugin detects file is CJS.\nfunction shouldOutputCommonJs(filename: string) {\n  return isCommonJSFile(filename) || nextDistPath.test(filename)\n}\n\nexport function getParserOptions({ filename, jsConfig, ...rest }: any) {\n  const isTSFile = filename.endsWith('.ts')\n  const hasTsSyntax = isTypeScriptFile(filename)\n  const enableDecorators = Boolean(\n    jsConfig?.compilerOptions?.experimentalDecorators\n  )\n  return {\n    ...rest,\n    syntax: hasTsSyntax ? 'typescript' : 'ecmascript',\n    dynamicImport: true,\n    decorators: enableDecorators,\n    // Exclude regular TypeScript files from React transformation to prevent e.g. generic parameters and angle-bracket type assertion from being interpreted as JSX tags.\n    [hasTsSyntax ? 'tsx' : 'jsx']: !isTSFile,\n    importAssertions: true,\n  }\n}\n\nfunction getBaseSWCOptions({\n  filename,\n  jest,\n  development,\n  hasReactRefresh,\n  globalWindow,\n  esm,\n  modularizeImports,\n  swcPlugins,\n  compilerOptions,\n  resolvedBaseUrl,\n  jsConfig,\n  swcCacheDir,\n  serverComponents,\n  bundleLayer,\n}: {\n  filename: string\n  jest?: boolean\n  development: boolean\n  hasReactRefresh: boolean\n  globalWindow: boolean\n  esm: boolean\n  modularizeImports?: NextConfig['modularizeImports']\n  compilerOptions: NextConfig['compiler']\n  swcPlugins: ExperimentalConfig['swcPlugins']\n  resolvedBaseUrl?: ResolvedBaseUrl\n  jsConfig: any\n  swcCacheDir?: string\n  serverComponents?: boolean\n  bundleLayer?: WebpackLayerName\n}) {\n  const isReactServerLayer = isWebpackServerOnlyLayer(bundleLayer)\n  const parserConfig = getParserOptions({ filename, jsConfig })\n  const paths = jsConfig?.compilerOptions?.paths\n  const enableDecorators = Boolean(\n    jsConfig?.compilerOptions?.experimentalDecorators\n  )\n  const emitDecoratorMetadata = Boolean(\n    jsConfig?.compilerOptions?.emitDecoratorMetadata\n  )\n  const useDefineForClassFields = Boolean(\n    jsConfig?.compilerOptions?.useDefineForClassFields\n  )\n  const plugins = (swcPlugins ?? [])\n    .filter(Array.isArray)\n    .map(([name, options]: any) => [require.resolve(name), options])\n\n  return {\n    jsc: {\n      ...(resolvedBaseUrl && paths\n        ? {\n            baseUrl: resolvedBaseUrl.baseUrl,\n            paths,\n          }\n        : {}),\n      externalHelpers: !process.versions.pnp && !jest,\n      parser: parserConfig,\n      experimental: {\n        keepImportAttributes: true,\n        emitAssertForImportAttributes: true,\n        plugins,\n        cacheRoot: swcCacheDir,\n      },\n      transform: {\n        // Enables https://github.com/swc-project/swc/blob/0359deb4841be743d73db4536d4a22ac797d7f65/crates/swc_ecma_ext_transforms/src/jest.rs\n        ...(jest\n          ? {\n              hidden: {\n                jest: true,\n              },\n            }\n          : {}),\n        legacyDecorator: enableDecorators,\n        decoratorMetadata: emitDecoratorMetadata,\n        useDefineForClassFields: useDefineForClassFields,\n        react: {\n          importSource:\n            jsConfig?.compilerOptions?.jsxImportSource ??\n            (compilerOptions?.emotion && !isReactServerLayer\n              ? '@emotion/react'\n              : 'react'),\n          runtime: 'automatic',\n          pragmaFrag: 'React.Fragment',\n          throwIfNamespace: true,\n          development: !!development,\n          useBuiltins: true,\n          refresh: !!hasReactRefresh,\n        },\n        optimizer: {\n          simplify: false,\n          globals: jest\n            ? null\n            : {\n                typeofs: {\n                  window: globalWindow ? 'object' : 'undefined',\n                },\n                envs: {\n                  NODE_ENV: development ? '\"development\"' : '\"production\"',\n                },\n                // TODO: handle process.browser to match babel replacing as well\n              },\n        },\n        regenerator: {\n          importPath: regeneratorRuntimePath,\n        },\n      },\n    },\n    sourceMaps: jest ? 'inline' : undefined,\n    removeConsole: compilerOptions?.removeConsole,\n    // disable \"reactRemoveProperties\" when \"jest\" is true\n    // otherwise the setting from next.config.js will be used\n    reactRemoveProperties: jest\n      ? false\n      : compilerOptions?.reactRemoveProperties,\n    // Map the k-v map to an array of pairs.\n    modularizeImports: modularizeImports\n      ? Object.fromEntries(\n          Object.entries(modularizeImports).map(([mod, config]) => [\n            mod,\n            {\n              ...config,\n              transform:\n                typeof config.transform === 'string'\n                  ? config.transform\n                  : Object.entries(config.transform).map(([key, value]) => [\n                      key,\n                      value,\n                    ]),\n            },\n          ])\n        )\n      : undefined,\n    relay: compilerOptions?.relay,\n    // Always transform styled-jsx and error when `client-only` condition is triggered\n    styledJsx: {},\n    // Disable css-in-js libs (without client-only integration) transform on server layer for server components\n    ...(!isReactServerLayer && {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      emotion: getEmotionOptions(compilerOptions?.emotion, development),\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      styledComponents: getStyledComponentsOptions(\n        compilerOptions?.styledComponents,\n        development\n      ),\n    }),\n    serverComponents:\n      serverComponents && !jest\n        ? {\n            isReactServerLayer,\n          }\n        : undefined,\n    serverActions:\n      serverComponents && !jest\n        ? {\n            // always enable server actions\n            // TODO: remove this option\n            enabled: true,\n            isReactServerLayer,\n          }\n        : undefined,\n    // For app router we prefer to bundle ESM,\n    // On server side of pages router we prefer CJS.\n    preferEsm: esm,\n  }\n}\n\nfunction getStyledComponentsOptions(\n  styledComponentsConfig: undefined | boolean | StyledComponentsConfig,\n  development: any\n) {\n  if (!styledComponentsConfig) {\n    return null\n  } else if (typeof styledComponentsConfig === 'object') {\n    return {\n      ...styledComponentsConfig,\n      displayName: styledComponentsConfig.displayName ?? Boolean(development),\n    }\n  } else {\n    return {\n      displayName: Boolean(development),\n    }\n  }\n}\n\nfunction getEmotionOptions(\n  emotionConfig: undefined | boolean | EmotionConfig,\n  development: boolean\n) {\n  if (!emotionConfig) {\n    return null\n  }\n  let autoLabel = !!development\n  switch (typeof emotionConfig === 'object' && emotionConfig.autoLabel) {\n    case 'never':\n      autoLabel = false\n      break\n    case 'always':\n      autoLabel = true\n      break\n    case 'dev-only':\n    default:\n      break\n  }\n  return {\n    enabled: true,\n    autoLabel,\n    sourcemap: development,\n    ...(typeof emotionConfig === 'object' && {\n      importMap: emotionConfig.importMap,\n      labelFormat: emotionConfig.labelFormat,\n      sourcemap: development && emotionConfig.sourceMap,\n    }),\n  }\n}\n\nexport function getJestSWCOptions({\n  isServer,\n  filename,\n  esm,\n  modularizeImports,\n  swcPlugins,\n  compilerOptions,\n  jsConfig,\n  resolvedBaseUrl,\n  pagesDir,\n}: {\n  isServer: boolean\n  filename: string\n  esm: boolean\n  modularizeImports?: NextConfig['modularizeImports']\n  swcPlugins: ExperimentalConfig['swcPlugins']\n  compilerOptions: NextConfig['compiler']\n  jsConfig: any\n  resolvedBaseUrl?: ResolvedBaseUrl\n  pagesDir?: string\n  serverComponents?: boolean\n}) {\n  let baseOptions = getBaseSWCOptions({\n    filename,\n    jest: true,\n    development: false,\n    hasReactRefresh: false,\n    globalWindow: !isServer,\n    modularizeImports,\n    swcPlugins,\n    compilerOptions,\n    jsConfig,\n    resolvedBaseUrl,\n    esm,\n    // Don't apply server layer transformations for Jest\n    // Disable server / client graph assertions for Jest\n    bundleLayer: undefined,\n    serverComponents: false,\n  })\n\n  const useCjsModules = shouldOutputCommonJs(filename)\n  return {\n    ...baseOptions,\n    env: {\n      targets: {\n        // Targets the current version of Node.js\n        node: process.versions.node,\n      },\n    },\n    module: {\n      type: esm && !useCjsModules ? 'es6' : 'commonjs',\n    },\n    disableNextSsg: true,\n    disablePageConfig: true,\n    pagesDir,\n  }\n}\n\nexport function getLoaderSWCOptions({\n  // This is not passed yet as \"paths\" resolving is handled by webpack currently.\n  // resolvedBaseUrl,\n  filename,\n  development,\n  isServer,\n  pagesDir,\n  appDir,\n  isPageFile,\n  hasReactRefresh,\n  modularizeImports,\n  optimizeServerReact,\n  optimizePackageImports,\n  swcPlugins,\n  compilerOptions,\n  jsConfig,\n  supportedBrowsers,\n  swcCacheDir,\n  relativeFilePathFromRoot,\n  serverComponents,\n  bundleLayer,\n  esm,\n}: {\n  filename: string\n  development: boolean\n  isServer: boolean\n  pagesDir?: string\n  appDir?: string\n  isPageFile: boolean\n  hasReactRefresh: boolean\n  optimizeServerReact?: boolean\n  modularizeImports: NextConfig['modularizeImports']\n  optimizePackageImports?: NonNullable<\n    NextConfig['experimental']\n  >['optimizePackageImports']\n  swcPlugins: ExperimentalConfig['swcPlugins']\n  compilerOptions: NextConfig['compiler']\n  jsConfig: any\n  supportedBrowsers: string[] | undefined\n  swcCacheDir: string\n  relativeFilePathFromRoot: string\n  esm?: boolean\n  serverComponents?: boolean\n  bundleLayer?: WebpackLayerName\n}) {\n  let baseOptions: any = getBaseSWCOptions({\n    filename,\n    development,\n    globalWindow: !isServer,\n    hasReactRefresh,\n    modularizeImports,\n    swcPlugins,\n    compilerOptions,\n    jsConfig,\n    // resolvedBaseUrl,\n    swcCacheDir,\n    bundleLayer,\n    serverComponents,\n    esm: !!esm,\n  })\n  baseOptions.fontLoaders = {\n    fontLoaders: ['next/font/local', 'next/font/google'],\n    relativeFilePathFromRoot,\n  }\n  baseOptions.cjsRequireOptimizer = {\n    packages: {\n      'next/server': {\n        transforms: {\n          NextRequest: 'next/dist/server/web/spec-extension/request',\n          NextResponse: 'next/dist/server/web/spec-extension/response',\n          ImageResponse: 'next/dist/server/web/spec-extension/image-response',\n          userAgentFromString: 'next/dist/server/web/spec-extension/user-agent',\n          userAgent: 'next/dist/server/web/spec-extension/user-agent',\n        },\n      },\n    },\n  }\n\n  if (optimizeServerReact && isServer && !development) {\n    baseOptions.optimizeServerReact = {\n      optimize_use_state: false,\n    }\n  }\n\n  // Modularize import optimization for barrel files\n  if (optimizePackageImports) {\n    baseOptions.autoModularizeImports = {\n      packages: optimizePackageImports,\n    }\n  }\n\n  const isNodeModules = nodeModulesPath.test(filename)\n  const isAppBrowserLayer = bundleLayer === WEBPACK_LAYERS.appPagesBrowser\n  const moduleResolutionConfig = shouldOutputCommonJs(filename)\n    ? {\n        module: {\n          type: 'commonjs',\n        },\n      }\n    : {}\n\n  let options: any\n  if (isServer) {\n    options = {\n      ...baseOptions,\n      ...moduleResolutionConfig,\n      // Disables getStaticProps/getServerSideProps tree shaking on the server compilation for pages\n      disableNextSsg: true,\n      disablePageConfig: true,\n      isDevelopment: development,\n      isServerCompiler: isServer,\n      pagesDir,\n      appDir,\n      preferEsm: !!esm,\n      isPageFile,\n      env: {\n        targets: {\n          // Targets the current version of Node.js\n          node: process.versions.node,\n        },\n      },\n    }\n  } else {\n    options = {\n      ...baseOptions,\n      ...moduleResolutionConfig,\n      disableNextSsg: !isPageFile,\n      isDevelopment: development,\n      isServerCompiler: isServer,\n      pagesDir,\n      appDir,\n      isPageFile,\n      ...(supportedBrowsers && supportedBrowsers.length > 0\n        ? {\n            env: {\n              targets: supportedBrowsers,\n            },\n          }\n        : {}),\n    }\n    if (!options.env) {\n      // Matches default @babel/preset-env behavior\n      options.jsc.target = 'es5'\n    }\n  }\n\n  // For node_modules in app browser layer, we don't need to do any server side transformation.\n  // Only keep server actions transform to discover server actions from client components.\n  if (isAppBrowserLayer && isNodeModules) {\n    options.disableNextSsg = true\n    options.disablePageConfig = true\n    options.isPageFile = false\n    options.optimizeServerReact = undefined\n    options.cjsRequireOptimizer = undefined\n    // Disable optimizer for node_modules in app browser layer, to avoid unnecessary replacement.\n    // e.g. typeof window could result differently in js worker or browser.\n    if (options.jsc.transform.optimizer.globals?.typeofs) {\n      delete options.jsc.transform.optimizer.globals.typeofs.window\n    }\n  }\n\n  return options\n}\n"],"names":["getJestSWCOptions","getLoaderSWCOptions","getParserOptions","nextDistPath","nodeModulesPath","regeneratorRuntimePath","require","resolve","isTypeScriptFile","filename","endsWith","isCommonJSFile","shouldOutputCommonJs","test","jsConfig","rest","isTSFile","hasTsSyntax","enableDecorators","Boolean","compilerOptions","experimentalDecorators","syntax","dynamicImport","decorators","importAssertions","getBaseSWCOptions","jest","development","hasReactRefresh","globalWindow","esm","modularizeImports","swcPlugins","resolvedBaseUrl","swcCacheDir","serverComponents","bundleLayer","isReactServerLayer","isWebpackServerOnlyLayer","parserConfig","paths","emitDecoratorMetadata","useDefineForClassFields","plugins","filter","Array","isArray","map","name","options","jsc","baseUrl","externalHelpers","process","versions","pnp","parser","experimental","keepImportAttributes","emitAssertForImportAttributes","cacheRoot","transform","hidden","legacyDecorator","decoratorMetadata","react","importSource","jsxImportSource","emotion","runtime","pragmaFrag","throwIfNamespace","useBuiltins","refresh","optimizer","simplify","globals","typeofs","window","envs","NODE_ENV","regenerator","importPath","sourceMaps","undefined","removeConsole","reactRemoveProperties","Object","fromEntries","entries","mod","config","key","value","relay","styledJsx","getEmotionOptions","styledComponents","getStyledComponentsOptions","serverActions","enabled","preferEsm","styledComponentsConfig","displayName","emotionConfig","autoLabel","sourcemap","importMap","labelFormat","sourceMap","isServer","pagesDir","baseOptions","useCjsModules","env","targets","node","module","type","disableNextSsg","disablePageConfig","appDir","isPageFile","optimizeServerReact","optimizePackageImports","supportedBrowsers","relativeFilePathFromRoot","fontLoaders","cjsRequireOptimizer","packages","transforms","NextRequest","NextResponse","ImageResponse","userAgentFromString","userAgent","optimize_use_state","autoModularizeImports","isNodeModules","isAppBrowserLayer","WEBPACK_LAYERS","appPagesBrowser","moduleResolutionConfig","isDevelopment","isServerCompiler","length","target"],"mappings":"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"}