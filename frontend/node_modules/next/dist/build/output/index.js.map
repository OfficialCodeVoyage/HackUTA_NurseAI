{"version":3,"sources":["../../../src/build/output/index.ts"],"sourcesContent":["import { bold, red, yellow } from '../../lib/picocolors'\nimport stripAnsi from 'next/dist/compiled/strip-ansi'\nimport textTable from 'next/dist/compiled/text-table'\nimport createStore from 'next/dist/compiled/unistore'\nimport formatWebpackMessages from '../../client/components/react-dev-overlay/internal/helpers/format-webpack-messages'\nimport { store as consoleStore } from './store'\nimport type { OutputState } from './store'\nimport type { webpack } from 'next/dist/compiled/webpack/webpack'\nimport { COMPILER_NAMES } from '../../shared/lib/constants'\nimport type { CompilerNameValues } from '../../shared/lib/constants'\n\nexport function startedDevelopmentServer(appUrl: string, bindAddr: string) {\n  consoleStore.setState({ appUrl, bindAddr })\n}\n\ntype CompilerDiagnostics = {\n  totalModulesCount: number\n  errors: string[] | null\n  warnings: string[] | null\n}\n\ntype WebpackStatus =\n  | { loading: true }\n  | ({ loading: false } & CompilerDiagnostics)\n\ntype AmpStatus = {\n  message: string\n  line: number\n  col: number\n  specUrl: string | null\n  code: string\n}\n\nexport type AmpPageStatus = {\n  [page: string]: { errors: AmpStatus[]; warnings: AmpStatus[] }\n}\n\ntype BuildStatusStore = {\n  client: WebpackStatus\n  server: WebpackStatus\n  edgeServer: WebpackStatus\n  trigger: string | undefined\n  url: string | undefined\n  amp: AmpPageStatus\n}\n\nexport function formatAmpMessages(amp: AmpPageStatus) {\n  let output = bold('Amp Validation') + '\\n\\n'\n  let messages: string[][] = []\n\n  const chalkError = red('error')\n  function ampError(page: string, error: AmpStatus) {\n    messages.push([page, chalkError, error.message, error.specUrl || ''])\n  }\n\n  const chalkWarn = yellow('warn')\n  function ampWarn(page: string, warn: AmpStatus) {\n    messages.push([page, chalkWarn, warn.message, warn.specUrl || ''])\n  }\n\n  for (const page in amp) {\n    let { errors, warnings } = amp[page]\n\n    const devOnlyFilter = (err: AmpStatus) => err.code !== 'DEV_MODE_ONLY'\n    errors = errors.filter(devOnlyFilter)\n    warnings = warnings.filter(devOnlyFilter)\n    if (!(errors.length || warnings.length)) {\n      // Skip page with no non-dev warnings\n      continue\n    }\n\n    if (errors.length) {\n      ampError(page, errors[0])\n      for (let index = 1; index < errors.length; ++index) {\n        ampError('', errors[index])\n      }\n    }\n    if (warnings.length) {\n      ampWarn(errors.length ? '' : page, warnings[0])\n      for (let index = 1; index < warnings.length; ++index) {\n        ampWarn('', warnings[index])\n      }\n    }\n    messages.push(['', '', '', ''])\n  }\n\n  if (!messages.length) {\n    return ''\n  }\n\n  output += textTable(messages, {\n    align: ['l', 'l', 'l', 'l'],\n    stringLength(str: string) {\n      return stripAnsi(str).length\n    },\n  })\n\n  return output\n}\n\nconst buildStore = createStore<BuildStatusStore>({\n  // @ts-expect-error initial value\n  client: {},\n  // @ts-expect-error initial value\n  server: {},\n  // @ts-expect-error initial value\n  edgeServer: {},\n})\nlet buildWasDone = false\nlet clientWasLoading = true\nlet serverWasLoading = true\nlet edgeServerWasLoading = false\n\nbuildStore.subscribe((state) => {\n  const { amp, client, server, edgeServer, trigger, url } = state\n\n  const { appUrl } = consoleStore.getState()\n\n  if (client.loading || server.loading || edgeServer?.loading) {\n    consoleStore.setState(\n      {\n        bootstrap: false,\n        appUrl: appUrl!,\n        // If it takes more than 3 seconds to compile, mark it as loading status\n        loading: true,\n        trigger,\n        url,\n      } as OutputState,\n      true\n    )\n    clientWasLoading = (!buildWasDone && clientWasLoading) || client.loading\n    serverWasLoading = (!buildWasDone && serverWasLoading) || server.loading\n    edgeServerWasLoading =\n      (!buildWasDone && edgeServerWasLoading) || edgeServer.loading\n    buildWasDone = false\n    return\n  }\n\n  buildWasDone = true\n\n  let partialState: Partial<OutputState> = {\n    bootstrap: false,\n    appUrl: appUrl!,\n    loading: false,\n    typeChecking: false,\n    totalModulesCount:\n      (clientWasLoading ? client.totalModulesCount : 0) +\n      (serverWasLoading ? server.totalModulesCount : 0) +\n      (edgeServerWasLoading ? edgeServer?.totalModulesCount || 0 : 0),\n    hasEdgeServer: !!edgeServer,\n  }\n  if (client.errors && clientWasLoading) {\n    // Show only client errors\n    consoleStore.setState(\n      {\n        ...partialState,\n        errors: client.errors,\n        warnings: null,\n      } as OutputState,\n      true\n    )\n  } else if (server.errors && serverWasLoading) {\n    consoleStore.setState(\n      {\n        ...partialState,\n        errors: server.errors,\n        warnings: null,\n      } as OutputState,\n      true\n    )\n  } else if (edgeServer.errors && edgeServerWasLoading) {\n    consoleStore.setState(\n      {\n        ...partialState,\n        errors: edgeServer.errors,\n        warnings: null,\n      } as OutputState,\n      true\n    )\n  } else {\n    // Show warnings from all of them\n    const warnings = [\n      ...(client.warnings || []),\n      ...(server.warnings || []),\n      ...(edgeServer.warnings || []),\n    ].concat(formatAmpMessages(amp) || [])\n\n    consoleStore.setState(\n      {\n        ...partialState,\n        errors: null,\n        warnings: warnings.length === 0 ? null : warnings,\n      } as OutputState,\n      true\n    )\n  }\n})\n\nexport function ampValidation(\n  page: string,\n  errors: AmpStatus[],\n  warnings: AmpStatus[]\n) {\n  const { amp } = buildStore.getState()\n  if (!(errors.length || warnings.length)) {\n    buildStore.setState({\n      amp: Object.keys(amp)\n        .filter((k) => k !== page)\n        .sort()\n        // eslint-disable-next-line no-sequences\n        .reduce((a, c) => ((a[c] = amp[c]), a), {} as AmpPageStatus),\n    })\n    return\n  }\n\n  const newAmp: AmpPageStatus = { ...amp, [page]: { errors, warnings } }\n  buildStore.setState({\n    amp: Object.keys(newAmp)\n      .sort()\n      // eslint-disable-next-line no-sequences\n      .reduce((a, c) => ((a[c] = newAmp[c]), a), {} as AmpPageStatus),\n  })\n}\n\nexport function watchCompilers(\n  client: webpack.Compiler,\n  server: webpack.Compiler,\n  edgeServer: webpack.Compiler\n) {\n  buildStore.setState({\n    client: { loading: true },\n    server: { loading: true },\n    edgeServer: { loading: true },\n    trigger: 'initial',\n    url: undefined,\n  })\n\n  function tapCompiler(\n    key: CompilerNameValues,\n    compiler: webpack.Compiler,\n    onEvent: (status: WebpackStatus) => void\n  ) {\n    compiler.hooks.invalid.tap(`NextJsInvalid-${key}`, () => {\n      onEvent({ loading: true })\n    })\n\n    compiler.hooks.done.tap(`NextJsDone-${key}`, (stats: webpack.Stats) => {\n      buildStore.setState({ amp: {} })\n\n      const { errors, warnings } = formatWebpackMessages(\n        stats.toJson({\n          preset: 'errors-warnings',\n          moduleTrace: true,\n        })\n      )\n\n      const hasErrors = !!errors?.length\n      const hasWarnings = !!warnings?.length\n\n      onEvent({\n        loading: false,\n        totalModulesCount: stats.compilation.modules.size,\n        errors: hasErrors ? errors : null,\n        warnings: hasWarnings ? warnings : null,\n      })\n    })\n  }\n\n  tapCompiler(COMPILER_NAMES.client, client, (status) => {\n    if (\n      !status.loading &&\n      !buildStore.getState().server.loading &&\n      !buildStore.getState().edgeServer.loading &&\n      status.totalModulesCount > 0\n    ) {\n      buildStore.setState({\n        client: status,\n        trigger: undefined,\n        url: undefined,\n      })\n    } else {\n      buildStore.setState({\n        client: status,\n      })\n    }\n  })\n  tapCompiler(COMPILER_NAMES.server, server, (status) => {\n    if (\n      !status.loading &&\n      !buildStore.getState().client.loading &&\n      !buildStore.getState().edgeServer.loading &&\n      status.totalModulesCount > 0\n    ) {\n      buildStore.setState({\n        server: status,\n        trigger: undefined,\n        url: undefined,\n      })\n    } else {\n      buildStore.setState({\n        server: status,\n      })\n    }\n  })\n  tapCompiler(COMPILER_NAMES.edgeServer, edgeServer, (status) => {\n    if (\n      !status.loading &&\n      !buildStore.getState().client.loading &&\n      !buildStore.getState().server.loading &&\n      status.totalModulesCount > 0\n    ) {\n      buildStore.setState({\n        edgeServer: status,\n        trigger: undefined,\n        url: undefined,\n      })\n    } else {\n      buildStore.setState({\n        edgeServer: status,\n      })\n    }\n  })\n}\n\nexport function reportTrigger(trigger: string, url?: string) {\n  buildStore.setState({\n    trigger,\n    url,\n  })\n}\n"],"names":["ampValidation","formatAmpMessages","reportTrigger","startedDevelopmentServer","watchCompilers","appUrl","bindAddr","consoleStore","setState","amp","output","bold","messages","chalkError","red","ampError","page","error","push","message","specUrl","chalkWarn","yellow","ampWarn","warn","errors","warnings","devOnlyFilter","err","code","filter","length","index","textTable","align","stringLength","str","stripAnsi","buildStore","createStore","client","server","edgeServer","buildWasDone","clientWasLoading","serverWasLoading","edgeServerWasLoading","subscribe","state","trigger","url","getState","loading","bootstrap","partialState","typeChecking","totalModulesCount","hasEdgeServer","concat","Object","keys","k","sort","reduce","a","c","newAmp","undefined","tapCompiler","key","compiler","onEvent","hooks","invalid","tap","done","stats","formatWebpackMessages","toJson","preset","moduleTrace","hasErrors","hasWarnings","compilation","modules","size","COMPILER_NAMES","status"],"mappings":";;;;;;;;;;;;;;;;;;IAsMgBA,aAAa;eAAbA;;IAxJAC,iBAAiB;eAAjBA;;IAsRAC,aAAa;eAAbA;;IAzTAC,wBAAwB;eAAxBA;;IAqNAC,cAAc;eAAdA;;;4BAhOkB;kEACZ;kEACA;iEACE;8EACU;uBACI;2BAGP;;;;;;AAGxB,SAASD,yBAAyBE,MAAc,EAAEC,QAAgB;IACvEC,YAAY,CAACC,QAAQ,CAAC;QAAEH;QAAQC;IAAS;AAC3C;AAiCO,SAASL,kBAAkBQ,GAAkB;IAClD,IAAIC,SAASC,IAAAA,gBAAI,EAAC,oBAAoB;IACtC,IAAIC,WAAuB,EAAE;IAE7B,MAAMC,aAAaC,IAAAA,eAAG,EAAC;IACvB,SAASC,SAASC,IAAY,EAAEC,KAAgB;QAC9CL,SAASM,IAAI,CAAC;YAACF;YAAMH;YAAYI,MAAME,OAAO;YAAEF,MAAMG,OAAO,IAAI;SAAG;IACtE;IAEA,MAAMC,YAAYC,IAAAA,kBAAM,EAAC;IACzB,SAASC,QAAQP,IAAY,EAAEQ,IAAe;QAC5CZ,SAASM,IAAI,CAAC;YAACF;YAAMK;YAAWG,KAAKL,OAAO;YAAEK,KAAKJ,OAAO,IAAI;SAAG;IACnE;IAEA,IAAK,MAAMJ,QAAQP,IAAK;QACtB,IAAI,EAAEgB,MAAM,EAAEC,QAAQ,EAAE,GAAGjB,GAAG,CAACO,KAAK;QAEpC,MAAMW,gBAAgB,CAACC,MAAmBA,IAAIC,IAAI,KAAK;QACvDJ,SAASA,OAAOK,MAAM,CAACH;QACvBD,WAAWA,SAASI,MAAM,CAACH;QAC3B,IAAI,CAAEF,CAAAA,OAAOM,MAAM,IAAIL,SAASK,MAAM,AAAD,GAAI;YAEvC;QACF;QAEA,IAAIN,OAAOM,MAAM,EAAE;YACjBhB,SAASC,MAAMS,MAAM,CAAC,EAAE;YACxB,IAAK,IAAIO,QAAQ,GAAGA,QAAQP,OAAOM,MAAM,EAAE,EAAEC,MAAO;gBAClDjB,SAAS,IAAIU,MAAM,CAACO,MAAM;YAC5B;QACF;QACA,IAAIN,SAASK,MAAM,EAAE;YACnBR,QAAQE,OAAOM,MAAM,GAAG,KAAKf,MAAMU,QAAQ,CAAC,EAAE;YAC9C,IAAK,IAAIM,QAAQ,GAAGA,QAAQN,SAASK,MAAM,EAAE,EAAEC,MAAO;gBACpDT,QAAQ,IAAIG,QAAQ,CAACM,MAAM;YAC7B;QACF;QACApB,SAASM,IAAI,CAAC;YAAC;YAAI;YAAI;YAAI;SAAG;IAChC;IAEA,IAAI,CAACN,SAASmB,MAAM,EAAE;QACpB,OAAO;IACT;IAEArB,UAAUuB,IAAAA,kBAAS,EAACrB,UAAU;QAC5BsB,OAAO;YAAC;YAAK;YAAK;YAAK;SAAI;QAC3BC,cAAaC,GAAW;YACtB,OAAOC,IAAAA,kBAAS,EAACD,KAAKL,MAAM;QAC9B;IACF;IAEA,OAAOrB;AACT;AAEA,MAAM4B,aAAaC,IAAAA,iBAAW,EAAmB;IAC/C,iCAAiC;IACjCC,QAAQ,CAAC;IACT,iCAAiC;IACjCC,QAAQ,CAAC;IACT,iCAAiC;IACjCC,YAAY,CAAC;AACf;AACA,IAAIC,eAAe;AACnB,IAAIC,mBAAmB;AACvB,IAAIC,mBAAmB;AACvB,IAAIC,uBAAuB;AAE3BR,WAAWS,SAAS,CAAC,CAACC;IACpB,MAAM,EAAEvC,GAAG,EAAE+B,MAAM,EAAEC,MAAM,EAAEC,UAAU,EAAEO,OAAO,EAAEC,GAAG,EAAE,GAAGF;IAE1D,MAAM,EAAE3C,MAAM,EAAE,GAAGE,YAAY,CAAC4C,QAAQ;IAExC,IAAIX,OAAOY,OAAO,IAAIX,OAAOW,OAAO,KAAIV,8BAAAA,WAAYU,OAAO,GAAE;QAC3D7C,YAAY,CAACC,QAAQ,CACnB;YACE6C,WAAW;YACXhD,QAAQA;YACR,wEAAwE;YACxE+C,SAAS;YACTH;YACAC;QACF,GACA;QAEFN,mBAAmB,AAAC,CAACD,gBAAgBC,oBAAqBJ,OAAOY,OAAO;QACxEP,mBAAmB,AAAC,CAACF,gBAAgBE,oBAAqBJ,OAAOW,OAAO;QACxEN,uBACE,AAAC,CAACH,gBAAgBG,wBAAyBJ,WAAWU,OAAO;QAC/DT,eAAe;QACf;IACF;IAEAA,eAAe;IAEf,IAAIW,eAAqC;QACvCD,WAAW;QACXhD,QAAQA;QACR+C,SAAS;QACTG,cAAc;QACdC,mBACE,AAACZ,CAAAA,mBAAmBJ,OAAOgB,iBAAiB,GAAG,CAAA,IAC9CX,CAAAA,mBAAmBJ,OAAOe,iBAAiB,GAAG,CAAA,IAC9CV,CAAAA,uBAAuBJ,CAAAA,8BAAAA,WAAYc,iBAAiB,KAAI,IAAI,CAAA;QAC/DC,eAAe,CAAC,CAACf;IACnB;IACA,IAAIF,OAAOf,MAAM,IAAImB,kBAAkB;QACrC,0BAA0B;QAC1BrC,YAAY,CAACC,QAAQ,CACnB;YACE,GAAG8C,YAAY;YACf7B,QAAQe,OAAOf,MAAM;YACrBC,UAAU;QACZ,GACA;IAEJ,OAAO,IAAIe,OAAOhB,MAAM,IAAIoB,kBAAkB;QAC5CtC,YAAY,CAACC,QAAQ,CACnB;YACE,GAAG8C,YAAY;YACf7B,QAAQgB,OAAOhB,MAAM;YACrBC,UAAU;QACZ,GACA;IAEJ,OAAO,IAAIgB,WAAWjB,MAAM,IAAIqB,sBAAsB;QACpDvC,YAAY,CAACC,QAAQ,CACnB;YACE,GAAG8C,YAAY;YACf7B,QAAQiB,WAAWjB,MAAM;YACzBC,UAAU;QACZ,GACA;IAEJ,OAAO;QACL,iCAAiC;QACjC,MAAMA,WAAW;eACXc,OAAOd,QAAQ,IAAI,EAAE;eACrBe,OAAOf,QAAQ,IAAI,EAAE;eACrBgB,WAAWhB,QAAQ,IAAI,EAAE;SAC9B,CAACgC,MAAM,CAACzD,kBAAkBQ,QAAQ,EAAE;QAErCF,YAAY,CAACC,QAAQ,CACnB;YACE,GAAG8C,YAAY;YACf7B,QAAQ;YACRC,UAAUA,SAASK,MAAM,KAAK,IAAI,OAAOL;QAC3C,GACA;IAEJ;AACF;AAEO,SAAS1B,cACdgB,IAAY,EACZS,MAAmB,EACnBC,QAAqB;IAErB,MAAM,EAAEjB,GAAG,EAAE,GAAG6B,WAAWa,QAAQ;IACnC,IAAI,CAAE1B,CAAAA,OAAOM,MAAM,IAAIL,SAASK,MAAM,AAAD,GAAI;QACvCO,WAAW9B,QAAQ,CAAC;YAClBC,KAAKkD,OAAOC,IAAI,CAACnD,KACdqB,MAAM,CAAC,CAAC+B,IAAMA,MAAM7C,MACpB8C,IAAI,EACL,wCAAwC;aACvCC,MAAM,CAAC,CAACC,GAAGC,IAAO,CAAA,AAACD,CAAC,CAACC,EAAE,GAAGxD,GAAG,CAACwD,EAAE,EAAGD,CAAAA,GAAI,CAAC;QAC7C;QACA;IACF;IAEA,MAAME,SAAwB;QAAE,GAAGzD,GAAG;QAAE,CAACO,KAAK,EAAE;YAAES;YAAQC;QAAS;IAAE;IACrEY,WAAW9B,QAAQ,CAAC;QAClBC,KAAKkD,OAAOC,IAAI,CAACM,QACdJ,IAAI,EACL,wCAAwC;SACvCC,MAAM,CAAC,CAACC,GAAGC,IAAO,CAAA,AAACD,CAAC,CAACC,EAAE,GAAGC,MAAM,CAACD,EAAE,EAAGD,CAAAA,GAAI,CAAC;IAChD;AACF;AAEO,SAAS5D,eACdoC,MAAwB,EACxBC,MAAwB,EACxBC,UAA4B;IAE5BJ,WAAW9B,QAAQ,CAAC;QAClBgC,QAAQ;YAAEY,SAAS;QAAK;QACxBX,QAAQ;YAAEW,SAAS;QAAK;QACxBV,YAAY;YAAEU,SAAS;QAAK;QAC5BH,SAAS;QACTC,KAAKiB;IACP;IAEA,SAASC,YACPC,GAAuB,EACvBC,QAA0B,EAC1BC,OAAwC;QAExCD,SAASE,KAAK,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC,cAAc,EAAEL,IAAI,CAAC,EAAE;YACjDE,QAAQ;gBAAEnB,SAAS;YAAK;QAC1B;QAEAkB,SAASE,KAAK,CAACG,IAAI,CAACD,GAAG,CAAC,CAAC,WAAW,EAAEL,IAAI,CAAC,EAAE,CAACO;YAC5CtC,WAAW9B,QAAQ,CAAC;gBAAEC,KAAK,CAAC;YAAE;YAE9B,MAAM,EAAEgB,MAAM,EAAEC,QAAQ,EAAE,GAAGmD,IAAAA,8BAAqB,EAChDD,MAAME,MAAM,CAAC;gBACXC,QAAQ;gBACRC,aAAa;YACf;YAGF,MAAMC,YAAY,CAAC,EAACxD,0BAAAA,OAAQM,MAAM;YAClC,MAAMmD,cAAc,CAAC,EAACxD,4BAAAA,SAAUK,MAAM;YAEtCwC,QAAQ;gBACNnB,SAAS;gBACTI,mBAAmBoB,MAAMO,WAAW,CAACC,OAAO,CAACC,IAAI;gBACjD5D,QAAQwD,YAAYxD,SAAS;gBAC7BC,UAAUwD,cAAcxD,WAAW;YACrC;QACF;IACF;IAEA0C,YAAYkB,yBAAc,CAAC9C,MAAM,EAAEA,QAAQ,CAAC+C;QAC1C,IACE,CAACA,OAAOnC,OAAO,IACf,CAACd,WAAWa,QAAQ,GAAGV,MAAM,CAACW,OAAO,IACrC,CAACd,WAAWa,QAAQ,GAAGT,UAAU,CAACU,OAAO,IACzCmC,OAAO/B,iBAAiB,GAAG,GAC3B;YACAlB,WAAW9B,QAAQ,CAAC;gBAClBgC,QAAQ+C;gBACRtC,SAASkB;gBACTjB,KAAKiB;YACP;QACF,OAAO;YACL7B,WAAW9B,QAAQ,CAAC;gBAClBgC,QAAQ+C;YACV;QACF;IACF;IACAnB,YAAYkB,yBAAc,CAAC7C,MAAM,EAAEA,QAAQ,CAAC8C;QAC1C,IACE,CAACA,OAAOnC,OAAO,IACf,CAACd,WAAWa,QAAQ,GAAGX,MAAM,CAACY,OAAO,IACrC,CAACd,WAAWa,QAAQ,GAAGT,UAAU,CAACU,OAAO,IACzCmC,OAAO/B,iBAAiB,GAAG,GAC3B;YACAlB,WAAW9B,QAAQ,CAAC;gBAClBiC,QAAQ8C;gBACRtC,SAASkB;gBACTjB,KAAKiB;YACP;QACF,OAAO;YACL7B,WAAW9B,QAAQ,CAAC;gBAClBiC,QAAQ8C;YACV;QACF;IACF;IACAnB,YAAYkB,yBAAc,CAAC5C,UAAU,EAAEA,YAAY,CAAC6C;QAClD,IACE,CAACA,OAAOnC,OAAO,IACf,CAACd,WAAWa,QAAQ,GAAGX,MAAM,CAACY,OAAO,IACrC,CAACd,WAAWa,QAAQ,GAAGV,MAAM,CAACW,OAAO,IACrCmC,OAAO/B,iBAAiB,GAAG,GAC3B;YACAlB,WAAW9B,QAAQ,CAAC;gBAClBkC,YAAY6C;gBACZtC,SAASkB;gBACTjB,KAAKiB;YACP;QACF,OAAO;YACL7B,WAAW9B,QAAQ,CAAC;gBAClBkC,YAAY6C;YACd;QACF;IACF;AACF;AAEO,SAASrF,cAAc+C,OAAe,EAAEC,GAAY;IACzDZ,WAAW9B,QAAQ,CAAC;QAClByC;QACAC;IACF;AACF"}