{"version":3,"sources":["../../src/export/index.ts"],"sourcesContent":["import type {\n  ExportAppResult,\n  ExportAppOptions,\n  WorkerRenderOptsPartial,\n} from './types'\nimport type { PrerenderManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\n\nimport { bold, yellow } from '../lib/picocolors'\nimport findUp from 'next/dist/compiled/find-up'\nimport { existsSync, promises as fs } from 'fs'\n\nimport '../server/require-hook'\n\nimport { dirname, join, resolve, sep } from 'path'\nimport { formatAmpMessages } from '../build/output/index'\nimport type { AmpPageStatus } from '../build/output/index'\nimport * as Log from '../build/output/log'\nimport { RSC_SUFFIX, SSG_FALLBACK_EXPORT_ERROR } from '../lib/constants'\nimport { recursiveCopy } from '../lib/recursive-copy'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  EXPORT_DETAIL,\n  EXPORT_MARKER,\n  NEXT_FONT_MANIFEST,\n  MIDDLEWARE_MANIFEST,\n  PAGES_MANIFEST,\n  PHASE_EXPORT,\n  PRERENDER_MANIFEST,\n  SERVER_DIRECTORY,\n  SERVER_REFERENCE_MANIFEST,\n  APP_PATH_ROUTES_MANIFEST,\n} from '../shared/lib/constants'\nimport loadConfig from '../server/config'\nimport type { ExportPathMap } from '../server/config-shared'\nimport { eventCliSession } from '../telemetry/events'\nimport { hasNextSupport } from '../telemetry/ci-info'\nimport { Telemetry } from '../telemetry/storage'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { loadEnvConfig } from '@next/env'\nimport { isAPIRoute } from '../lib/is-api-route'\nimport { getPagePath } from '../server/require'\nimport type { Span } from '../trace'\nimport type { FontConfig } from '../server/font-utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport { isAppRouteRoute } from '../lib/is-app-route-route'\nimport { isAppPageRoute } from '../lib/is-app-page-route'\nimport isError from '../lib/is-error'\nimport { needsExperimentalReact } from '../lib/needs-experimental-react'\nimport { formatManifest } from '../build/manifests/formatter/format-manifest'\nimport { validateRevalidate } from '../server/lib/patch-fetch'\nimport { TurborepoAccessTraceResult } from '../build/turborepo-access-trace'\nimport { createProgress } from '../build/progress'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\n\nexport class ExportError extends Error {\n  code = 'NEXT_EXPORT_ERROR'\n}\n\nexport async function exportAppImpl(\n  dir: string,\n  options: Readonly<ExportAppOptions>,\n  span: Span\n): Promise<ExportAppResult | null> {\n  dir = resolve(dir)\n\n  // attempt to load global env values so they are available in next.config.js\n  span.traceChild('load-dotenv').traceFn(() => loadEnvConfig(dir, false, Log))\n\n  const { enabledDirectories } = options\n\n  const nextConfig =\n    options.nextConfig ||\n    (await span\n      .traceChild('load-next-config')\n      .traceAsyncFn(() => loadConfig(PHASE_EXPORT, dir)))\n\n  const distDir = join(dir, nextConfig.distDir)\n  const telemetry = options.buildExport ? null : new Telemetry({ distDir })\n\n  if (telemetry) {\n    telemetry.record(\n      eventCliSession(distDir, nextConfig, {\n        webpackVersion: null,\n        cliCommand: 'export',\n        isSrcDir: null,\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n        turboFlag: false,\n        pagesDir: null,\n        appDir: null,\n      })\n    )\n  }\n\n  const subFolders = nextConfig.trailingSlash && !options.buildExport\n\n  if (!options.silent && !options.buildExport) {\n    Log.info(`using build directory: ${distDir}`)\n  }\n\n  const buildIdFile = join(distDir, BUILD_ID_FILE)\n\n  if (!existsSync(buildIdFile)) {\n    throw new ExportError(\n      `Could not find a production build in the '${distDir}' directory. Try building your app with 'next build' before starting the static export. https://nextjs.org/docs/messages/next-export-no-build-id`\n    )\n  }\n\n  const customRoutes = ['rewrites', 'redirects', 'headers'].filter(\n    (config) => typeof nextConfig[config] === 'function'\n  )\n\n  if (!hasNextSupport && !options.buildExport && customRoutes.length > 0) {\n    Log.warn(\n      `rewrites, redirects, and headers are not applied when exporting your application, detected (${customRoutes.join(\n        ', '\n      )}). See more info here: https://nextjs.org/docs/messages/export-no-custom-routes`\n    )\n  }\n\n  const buildId = await fs.readFile(buildIdFile, 'utf8')\n\n  const pagesManifest =\n    !options.pages &&\n    (require(join(distDir, SERVER_DIRECTORY, PAGES_MANIFEST)) as PagesManifest)\n\n  let prerenderManifest: DeepReadonly<PrerenderManifest> | undefined\n  try {\n    prerenderManifest = require(join(distDir, PRERENDER_MANIFEST))\n  } catch {}\n\n  let appRoutePathManifest: Record<string, string> | undefined\n  try {\n    appRoutePathManifest = require(join(distDir, APP_PATH_ROUTES_MANIFEST))\n  } catch (err) {\n    if (\n      isError(err) &&\n      (err.code === 'ENOENT' || err.code === 'MODULE_NOT_FOUND')\n    ) {\n      // the manifest doesn't exist which will happen when using\n      // \"pages\" dir instead of \"app\" dir.\n      appRoutePathManifest = undefined\n    } else {\n      // the manifest is malformed (invalid json)\n      throw err\n    }\n  }\n\n  const excludedPrerenderRoutes = new Set<string>()\n  const pages = options.pages || Object.keys(pagesManifest)\n  const defaultPathMap: ExportPathMap = {}\n\n  let hasApiRoutes = false\n  for (const page of pages) {\n    // _document and _app are not real pages\n    // _error is exported as 404.html later on\n    // API Routes are Node.js functions\n\n    if (isAPIRoute(page)) {\n      hasApiRoutes = true\n      continue\n    }\n\n    if (page === '/_document' || page === '/_app' || page === '/_error') {\n      continue\n    }\n\n    // iSSG pages that are dynamic should not export templated version by\n    // default. In most cases, this would never work. There is no server that\n    // could run `getStaticProps`. If users make their page work lazily, they\n    // can manually add it to the `exportPathMap`.\n    if (prerenderManifest?.dynamicRoutes[page]) {\n      excludedPrerenderRoutes.add(page)\n      continue\n    }\n\n    defaultPathMap[page] = { page }\n  }\n\n  const mapAppRouteToPage = new Map<string, string>()\n  if (!options.buildExport && appRoutePathManifest) {\n    for (const [pageName, routePath] of Object.entries(appRoutePathManifest)) {\n      mapAppRouteToPage.set(routePath, pageName)\n      if (\n        isAppPageRoute(pageName) &&\n        !prerenderManifest?.routes[routePath] &&\n        !prerenderManifest?.dynamicRoutes[routePath]\n      ) {\n        defaultPathMap[routePath] = {\n          page: pageName,\n          _isAppDir: true,\n        }\n      }\n    }\n  }\n\n  // Initialize the output directory\n  const outDir = options.outdir\n\n  if (outDir === join(dir, 'public')) {\n    throw new ExportError(\n      `The 'public' directory is reserved in Next.js and can not be used as the export out directory. https://nextjs.org/docs/messages/can-not-output-to-public`\n    )\n  }\n\n  if (outDir === join(dir, 'static')) {\n    throw new ExportError(\n      `The 'static' directory is reserved in Next.js and can not be used as the export out directory. https://nextjs.org/docs/messages/can-not-output-to-static`\n    )\n  }\n\n  await fs.rm(outDir, { recursive: true, force: true })\n  await fs.mkdir(join(outDir, '_next', buildId), { recursive: true })\n\n  await fs.writeFile(\n    join(distDir, EXPORT_DETAIL),\n    formatManifest({\n      version: 1,\n      outDirectory: outDir,\n      success: false,\n    }),\n    'utf8'\n  )\n\n  // Copy static directory\n  if (!options.buildExport && existsSync(join(dir, 'static'))) {\n    if (!options.silent) {\n      Log.info('Copying \"static\" directory')\n    }\n    await span\n      .traceChild('copy-static-directory')\n      .traceAsyncFn(() =>\n        recursiveCopy(join(dir, 'static'), join(outDir, 'static'))\n      )\n  }\n\n  // Copy .next/static directory\n  if (\n    !options.buildExport &&\n    existsSync(join(distDir, CLIENT_STATIC_FILES_PATH))\n  ) {\n    if (!options.silent) {\n      Log.info('Copying \"static build\" directory')\n    }\n    await span\n      .traceChild('copy-next-static-directory')\n      .traceAsyncFn(() =>\n        recursiveCopy(\n          join(distDir, CLIENT_STATIC_FILES_PATH),\n          join(outDir, '_next', CLIENT_STATIC_FILES_PATH)\n        )\n      )\n  }\n\n  // Get the exportPathMap from the config file\n  if (typeof nextConfig.exportPathMap !== 'function') {\n    nextConfig.exportPathMap = async (defaultMap) => {\n      return defaultMap\n    }\n  }\n\n  const {\n    i18n,\n    images: { loader = 'default', unoptimized },\n  } = nextConfig\n\n  if (i18n && !options.buildExport) {\n    throw new ExportError(\n      `i18n support is not compatible with next export. See here for more info on deploying: https://nextjs.org/docs/messages/export-no-custom-routes`\n    )\n  }\n\n  if (!options.buildExport) {\n    const { isNextImageImported } = await span\n      .traceChild('is-next-image-imported')\n      .traceAsyncFn(() =>\n        fs\n          .readFile(join(distDir, EXPORT_MARKER), 'utf8')\n          .then((text) => JSON.parse(text))\n          .catch(() => ({}))\n      )\n\n    if (\n      isNextImageImported &&\n      loader === 'default' &&\n      !unoptimized &&\n      !hasNextSupport\n    ) {\n      throw new ExportError(\n        `Image Optimization using the default loader is not compatible with export.\n  Possible solutions:\n    - Use \\`next start\\` to run a server, which includes the Image Optimization API.\n    - Configure \\`images.unoptimized = true\\` in \\`next.config.js\\` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api`\n      )\n    }\n  }\n\n  let serverActionsManifest\n  if (enabledDirectories.app) {\n    serverActionsManifest = require(\n      join(distDir, SERVER_DIRECTORY, SERVER_REFERENCE_MANIFEST + '.json')\n    )\n    if (nextConfig.output === 'export') {\n      if (\n        Object.keys(serverActionsManifest.node).length > 0 ||\n        Object.keys(serverActionsManifest.edge).length > 0\n      ) {\n        throw new ExportError(\n          `Server Actions are not supported with static export.`\n        )\n      }\n    }\n  }\n\n  // Start the rendering process\n  const renderOpts: WorkerRenderOptsPartial = {\n    previewProps: prerenderManifest?.preview,\n    buildId,\n    nextExport: true,\n    assetPrefix: nextConfig.assetPrefix.replace(/\\/$/, ''),\n    distDir,\n    dev: false,\n    basePath: nextConfig.basePath,\n    trailingSlash: nextConfig.trailingSlash,\n    canonicalBase: nextConfig.amp?.canonicalBase || '',\n    ampSkipValidation: nextConfig.experimental.amp?.skipValidation || false,\n    ampOptimizerConfig: nextConfig.experimental.amp?.optimizer || undefined,\n    locales: i18n?.locales,\n    locale: i18n?.defaultLocale,\n    defaultLocale: i18n?.defaultLocale,\n    domainLocales: i18n?.domains,\n    disableOptimizedLoading: nextConfig.experimental.disableOptimizedLoading,\n    // Exported pages do not currently support dynamic HTML.\n    supportsDynamicResponse: false,\n    crossOrigin: nextConfig.crossOrigin,\n    optimizeCss: nextConfig.experimental.optimizeCss,\n    nextConfigOutput: nextConfig.output,\n    nextScriptWorkers: nextConfig.experimental.nextScriptWorkers,\n    optimizeFonts: nextConfig.optimizeFonts as FontConfig,\n    largePageDataBytes: nextConfig.experimental.largePageDataBytes,\n    serverActions: nextConfig.experimental.serverActions,\n    serverComponents: enabledDirectories.app,\n    nextFontManifest: require(\n      join(distDir, 'server', `${NEXT_FONT_MANIFEST}.json`)\n    ),\n    images: nextConfig.images,\n    ...(enabledDirectories.app\n      ? {\n          serverActionsManifest,\n        }\n      : {}),\n    strictNextHead: nextConfig.experimental.strictNextHead ?? true,\n    deploymentId: nextConfig.deploymentId,\n    experimental: {\n      clientTraceMetadata: nextConfig.experimental.clientTraceMetadata,\n      swrDelta: nextConfig.swrDelta,\n      after: nextConfig.experimental.after ?? false,\n    },\n  }\n\n  const { serverRuntimeConfig, publicRuntimeConfig } = nextConfig\n\n  if (Object.keys(publicRuntimeConfig).length > 0) {\n    renderOpts.runtimeConfig = publicRuntimeConfig\n  }\n\n  // We need this for server rendering the Link component.\n  ;(globalThis as any).__NEXT_DATA__ = {\n    nextExport: true,\n  }\n\n  const exportPathMap = await span\n    .traceChild('run-export-path-map')\n    .traceAsyncFn(async () => {\n      const exportMap = await nextConfig.exportPathMap(defaultPathMap, {\n        dev: false,\n        dir,\n        outDir,\n        distDir,\n        buildId,\n      })\n      return exportMap\n    })\n\n  // only add missing 404 page when `buildExport` is false\n  if (!options.buildExport) {\n    // only add missing /404 if not specified in `exportPathMap`\n    if (!exportPathMap['/404']) {\n      exportPathMap['/404'] = { page: '/_error' }\n    }\n\n    /**\n     * exports 404.html for backwards compat\n     * E.g. GitHub Pages, GitLab Pages, Cloudflare Pages, Netlify\n     */\n    if (!exportPathMap['/404.html']) {\n      // alias /404.html to /404 to be compatible with custom 404 / _error page\n      exportPathMap['/404.html'] = exportPathMap['/404']\n    }\n  }\n\n  // make sure to prevent duplicates\n  const exportPaths = [\n    ...new Set(\n      Object.keys(exportPathMap).map((path) =>\n        denormalizePagePath(normalizePagePath(path))\n      )\n    ),\n  ]\n\n  const filteredPaths = exportPaths.filter(\n    (route) =>\n      exportPathMap[route]._isAppDir ||\n      // Remove API routes\n      !isAPIRoute(exportPathMap[route].page)\n  )\n\n  if (filteredPaths.length !== exportPaths.length) {\n    hasApiRoutes = true\n  }\n\n  if (filteredPaths.length === 0) {\n    return null\n  }\n\n  if (prerenderManifest && !options.buildExport) {\n    const fallbackEnabledPages = new Set()\n\n    for (const path of Object.keys(exportPathMap)) {\n      const page = exportPathMap[path].page\n      const prerenderInfo = prerenderManifest.dynamicRoutes[page]\n\n      if (prerenderInfo && prerenderInfo.fallback !== false) {\n        fallbackEnabledPages.add(page)\n      }\n    }\n\n    if (fallbackEnabledPages.size > 0) {\n      throw new ExportError(\n        `Found pages with \\`fallback\\` enabled:\\n${[\n          ...fallbackEnabledPages,\n        ].join('\\n')}\\n${SSG_FALLBACK_EXPORT_ERROR}\\n`\n      )\n    }\n  }\n  let hasMiddleware = false\n\n  if (!options.buildExport) {\n    try {\n      const middlewareManifest = require(\n        join(distDir, SERVER_DIRECTORY, MIDDLEWARE_MANIFEST)\n      ) as MiddlewareManifest\n\n      hasMiddleware = Object.keys(middlewareManifest.middleware).length > 0\n    } catch {}\n\n    // Warn if the user defines a path for an API page\n    if (hasApiRoutes || hasMiddleware) {\n      if (nextConfig.output === 'export') {\n        Log.warn(\n          yellow(\n            `Statically exporting a Next.js application via \\`next export\\` disables API routes and middleware.`\n          ) +\n            `\\n` +\n            yellow(\n              `This command is meant for static-only hosts, and is` +\n                ' ' +\n                bold(`not necessary to make your application static.`)\n            ) +\n            `\\n` +\n            yellow(\n              `Pages in your application without server-side data dependencies will be automatically statically exported by \\`next build\\`, including pages powered by \\`getStaticProps\\`.`\n            ) +\n            `\\n` +\n            yellow(\n              `Learn more: https://nextjs.org/docs/messages/api-routes-static-export`\n            )\n        )\n      }\n    }\n  }\n\n  const progress =\n    !options.silent &&\n    createProgress(filteredPaths.length, options.statusMessage || 'Exporting')\n  const pagesDataDir = options.buildExport\n    ? outDir\n    : join(outDir, '_next/data', buildId)\n\n  const ampValidations: AmpPageStatus = {}\n\n  const publicDir = join(dir, CLIENT_PUBLIC_FILES_PATH)\n  // Copy public directory\n  if (!options.buildExport && existsSync(publicDir)) {\n    if (!options.silent) {\n      Log.info('Copying \"public\" directory')\n    }\n    await span.traceChild('copy-public-directory').traceAsyncFn(() =>\n      recursiveCopy(publicDir, outDir, {\n        filter(path) {\n          // Exclude paths used by pages\n          return !exportPathMap[path]\n        },\n      })\n    )\n  }\n\n  const failedExportAttemptsByPage: Map<string, number> = new Map()\n  const maxAttempts = nextConfig.experimental.staticGenerationRetryCount ?? 1\n  const results = await Promise.all(\n    filteredPaths.map(async (path) => {\n      const pathMap = exportPathMap[path]\n      const exportPage = pathMap._isAppDir\n        ? options.exportAppPageWorker\n        : options.exportPageWorker\n\n      if (!exportPage) {\n        throw new Error(\n          'Invariant: Undefined export worker for app dir, this is a bug in Next.js.'\n        )\n      }\n\n      const pageExportSpan = span.traceChild('export-page')\n      pageExportSpan.setAttribute('path', path)\n      const { page } = exportPathMap[path]\n      const pageKey = page !== path ? `${page}: ${path}` : path\n\n      let result\n\n      for (let attempt = 0; attempt < maxAttempts; attempt++) {\n        try {\n          result = await pageExportSpan.traceAsyncFn(async () => {\n            return await exportPage({\n              dir,\n              path,\n              pathMap,\n              distDir,\n              outDir,\n              pagesDataDir,\n              renderOpts,\n              ampValidatorPath:\n                nextConfig.experimental.amp?.validator || undefined,\n              trailingSlash: nextConfig.trailingSlash,\n              serverRuntimeConfig,\n              subFolders,\n              buildExport: options.buildExport,\n              optimizeFonts: nextConfig.optimizeFonts as FontConfig,\n              optimizeCss: nextConfig.experimental.optimizeCss,\n              disableOptimizedLoading:\n                nextConfig.experimental.disableOptimizedLoading,\n              parentSpanId: pageExportSpan.getId(),\n              httpAgentOptions: nextConfig.httpAgentOptions,\n              debugOutput: options.debugOutput,\n              cacheMaxMemorySize: nextConfig.cacheMaxMemorySize,\n              fetchCache: true,\n              fetchCacheKeyPrefix: nextConfig.experimental.fetchCacheKeyPrefix,\n              cacheHandler: nextConfig.cacheHandler,\n              enableExperimentalReact: needsExperimentalReact(nextConfig),\n              enabledDirectories,\n            })\n          })\n\n          // If there was an error in the export, throw it immediately. In the catch block, we might retry the export,\n          // or immediately fail the build, depending on user configuration. We might also continue on and attempt other pages.\n          if (result && 'error' in result) {\n            throw new ExportError()\n          }\n\n          // If the export succeeds, break out of the retry loop\n          break\n        } catch (err) {\n          // The only error that should be caught here is an ExportError, as `exportPage` doesn't throw and instead returns an object with an `error` property.\n          // This is an overly cautious check to ensure that we don't accidentally catch an unexpected error.\n          if (!(err instanceof ExportError)) {\n            throw err\n          }\n\n          const currentCount = failedExportAttemptsByPage.get(pageKey) ?? 0\n          failedExportAttemptsByPage.set(pageKey, currentCount + 1)\n\n          // We've reached the maximum number of attempts\n          if (attempt >= maxAttempts - 1) {\n            // Log a message if we've reached the maximum number of attempts.\n            // We only care to do this if maxAttempts was configured.\n            if (maxAttempts > 0) {\n              Log.info(\n                `Failed to build ${pageKey} after ${maxAttempts} attempts.`\n              )\n            }\n            // If prerenderEarlyExit is enabled, we'll exit the build immediately.\n            if (nextConfig.experimental.prerenderEarlyExit) {\n              throw new ExportError(\n                `Export encountered an error on ${pageKey}, exiting the build.`\n              )\n            } else {\n              // Otherwise, this is a no-op. The build will continue, and a summary of failed pages will be displayed at the end.\n            }\n          } else {\n            // Otherwise, we have more attempts to make. Wait before retrying\n            Log.info(\n              `Failed to build ${pageKey} (attempt ${attempt + 1} of ${maxAttempts}). Retrying again shortly.`\n            )\n            await new Promise((r) => setTimeout(r, Math.random() * 500))\n          }\n        }\n      }\n\n      // if we eventually succeeded, remove the page from the failed attempts map\n      if (\n        failedExportAttemptsByPage.has(pageKey) &&\n        result &&\n        !('error' in result)\n      ) {\n        failedExportAttemptsByPage.delete(pageKey)\n      }\n\n      if (progress) progress()\n\n      return { result, path }\n    })\n  )\n\n  let hadValidationError = false\n\n  const collector: ExportAppResult = {\n    byPath: new Map(),\n    byPage: new Map(),\n    ssgNotFoundPaths: new Set(),\n    turborepoAccessTraceResults: new Map(),\n  }\n\n  for (const { result, path } of results) {\n    if (!result || 'error' in result) continue\n\n    const { page } = exportPathMap[path]\n\n    if (result.turborepoAccessTraceResult) {\n      collector.turborepoAccessTraceResults?.set(\n        path,\n        TurborepoAccessTraceResult.fromSerialized(\n          result.turborepoAccessTraceResult\n        )\n      )\n    }\n\n    // Capture any amp validations.\n    if (result.ampValidations) {\n      for (const validation of result.ampValidations) {\n        ampValidations[validation.page] = validation.result\n        hadValidationError ||= validation.result.errors.length > 0\n      }\n    }\n\n    if (options.buildExport) {\n      // Update path info by path.\n      const info = collector.byPath.get(path) ?? {}\n      if (typeof result.revalidate !== 'undefined') {\n        info.revalidate = validateRevalidate(result.revalidate, path)\n      }\n      if (typeof result.metadata !== 'undefined') {\n        info.metadata = result.metadata\n      }\n\n      if (typeof result.hasEmptyPrelude !== 'undefined') {\n        info.hasEmptyPrelude = result.hasEmptyPrelude\n      }\n\n      if (typeof result.hasPostponed !== 'undefined') {\n        info.hasPostponed = result.hasPostponed\n      }\n\n      collector.byPath.set(path, info)\n\n      // Update not found.\n      if (result.ssgNotFound === true) {\n        collector.ssgNotFoundPaths.add(path)\n      }\n\n      // Update durations.\n      const durations = collector.byPage.get(page) ?? {\n        durationsByPath: new Map<string, number>(),\n      }\n      durations.durationsByPath.set(path, result.duration)\n      collector.byPage.set(page, durations)\n    }\n  }\n\n  // Export mode provide static outputs that are not compatible with PPR mode.\n  if (!options.buildExport && nextConfig.experimental.ppr) {\n    // TODO: add message\n    throw new Error('Invariant: PPR cannot be enabled in export mode')\n  }\n\n  // copy prerendered routes to outDir\n  if (!options.buildExport && prerenderManifest) {\n    await Promise.all(\n      Object.keys(prerenderManifest.routes).map(async (route) => {\n        const { srcRoute } = prerenderManifest!.routes[route]\n        const appPageName = mapAppRouteToPage.get(srcRoute || '')\n        const pageName = appPageName || srcRoute || route\n        const isAppPath = Boolean(appPageName)\n        const isAppRouteHandler = appPageName && isAppRouteRoute(appPageName)\n\n        // returning notFound: true from getStaticProps will not\n        // output html/json files during the build\n        if (prerenderManifest!.notFoundRoutes.includes(route)) {\n          return\n        }\n        route = normalizePagePath(route)\n\n        const pagePath = getPagePath(pageName, distDir, undefined, isAppPath)\n        const distPagesDir = join(\n          pagePath,\n          // strip leading / and then recurse number of nested dirs\n          // to place from base folder\n          pageName\n            .slice(1)\n            .split('/')\n            .map(() => '..')\n            .join('/')\n        )\n\n        const orig = join(distPagesDir, route)\n        const handlerSrc = `${orig}.body`\n        const handlerDest = join(outDir, route)\n\n        if (isAppRouteHandler && existsSync(handlerSrc)) {\n          await fs.mkdir(dirname(handlerDest), { recursive: true })\n          await fs.copyFile(handlerSrc, handlerDest)\n          return\n        }\n\n        const htmlDest = join(\n          outDir,\n          `${route}${\n            subFolders && route !== '/index' ? `${sep}index` : ''\n          }.html`\n        )\n        const ampHtmlDest = join(\n          outDir,\n          `${route}.amp${subFolders ? `${sep}index` : ''}.html`\n        )\n        const jsonDest = isAppPath\n          ? join(\n              outDir,\n              `${route}${\n                subFolders && route !== '/index' ? `${sep}index` : ''\n              }.txt`\n            )\n          : join(pagesDataDir, `${route}.json`)\n\n        await fs.mkdir(dirname(htmlDest), { recursive: true })\n        await fs.mkdir(dirname(jsonDest), { recursive: true })\n\n        const htmlSrc = `${orig}.html`\n        const jsonSrc = `${orig}${isAppPath ? RSC_SUFFIX : '.json'}`\n\n        await fs.copyFile(htmlSrc, htmlDest)\n        await fs.copyFile(jsonSrc, jsonDest)\n\n        if (existsSync(`${orig}.amp.html`)) {\n          await fs.mkdir(dirname(ampHtmlDest), { recursive: true })\n          await fs.copyFile(`${orig}.amp.html`, ampHtmlDest)\n        }\n      })\n    )\n  }\n\n  if (Object.keys(ampValidations).length) {\n    console.log(formatAmpMessages(ampValidations))\n  }\n  if (hadValidationError) {\n    throw new ExportError(\n      `AMP Validation caused the export to fail. https://nextjs.org/docs/messages/amp-export-validation`\n    )\n  }\n\n  if (failedExportAttemptsByPage.size > 0) {\n    const failedPages = Array.from(failedExportAttemptsByPage.keys())\n    throw new ExportError(\n      `Export encountered errors on following paths:\\n\\t${failedPages\n        .sort()\n        .join('\\n\\t')}`\n    )\n  }\n\n  await fs.writeFile(\n    join(distDir, EXPORT_DETAIL),\n    formatManifest({\n      version: 1,\n      outDirectory: outDir,\n      success: true,\n    }),\n    'utf8'\n  )\n\n  if (telemetry) {\n    await telemetry.flush()\n  }\n\n  await options.endWorker()\n\n  return collector\n}\n\nexport default async function exportApp(\n  dir: string,\n  options: ExportAppOptions,\n  span: Span\n): Promise<ExportAppResult | null> {\n  const nextExportSpan = span.traceChild('next-export')\n\n  return nextExportSpan.traceAsyncFn(async () => {\n    return await exportAppImpl(dir, options, nextExportSpan)\n  })\n}\n"],"names":["ExportError","exportApp","exportAppImpl","Error","code","dir","options","span","nextConfig","resolve","traceChild","traceFn","loadEnvConfig","Log","enabledDirectories","traceAsyncFn","loadConfig","PHASE_EXPORT","distDir","join","telemetry","buildExport","Telemetry","record","eventCliSession","webpackVersion","cliCommand","isSrcDir","hasNowJson","findUp","cwd","isCustomServer","turboFlag","pagesDir","appDir","subFolders","trailingSlash","silent","info","buildIdFile","BUILD_ID_FILE","existsSync","customRoutes","filter","config","hasNextSupport","length","warn","buildId","fs","readFile","pagesManifest","pages","require","SERVER_DIRECTORY","PAGES_MANIFEST","prerenderManifest","PRERENDER_MANIFEST","appRoutePathManifest","APP_PATH_ROUTES_MANIFEST","err","isError","undefined","excludedPrerenderRoutes","Set","Object","keys","defaultPathMap","hasApiRoutes","page","isAPIRoute","dynamicRoutes","add","mapAppRouteToPage","Map","pageName","routePath","entries","set","isAppPageRoute","routes","_isAppDir","outDir","outdir","rm","recursive","force","mkdir","writeFile","EXPORT_DETAIL","formatManifest","version","outDirectory","success","recursiveCopy","CLIENT_STATIC_FILES_PATH","exportPathMap","defaultMap","i18n","images","loader","unoptimized","isNextImageImported","EXPORT_MARKER","then","text","JSON","parse","catch","serverActionsManifest","app","SERVER_REFERENCE_MANIFEST","output","node","edge","renderOpts","previewProps","preview","nextExport","assetPrefix","replace","dev","basePath","canonicalBase","amp","ampSkipValidation","experimental","skipValidation","ampOptimizerConfig","optimizer","locales","locale","defaultLocale","domainLocales","domains","disableOptimizedLoading","supportsDynamicResponse","crossOrigin","optimizeCss","nextConfigOutput","nextScriptWorkers","optimizeFonts","largePageDataBytes","serverActions","serverComponents","nextFontManifest","NEXT_FONT_MANIFEST","strictNextHead","deploymentId","clientTraceMetadata","swrDelta","after","serverRuntimeConfig","publicRuntimeConfig","runtimeConfig","globalThis","__NEXT_DATA__","exportMap","exportPaths","map","path","denormalizePagePath","normalizePagePath","filteredPaths","route","fallbackEnabledPages","prerenderInfo","fallback","size","SSG_FALLBACK_EXPORT_ERROR","hasMiddleware","middlewareManifest","MIDDLEWARE_MANIFEST","middleware","yellow","bold","progress","createProgress","statusMessage","pagesDataDir","ampValidations","publicDir","CLIENT_PUBLIC_FILES_PATH","failedExportAttemptsByPage","maxAttempts","staticGenerationRetryCount","results","Promise","all","pathMap","exportPage","exportAppPageWorker","exportPageWorker","pageExportSpan","setAttribute","pageKey","result","attempt","ampValidatorPath","validator","parentSpanId","getId","httpAgentOptions","debugOutput","cacheMaxMemorySize","fetchCache","fetchCacheKeyPrefix","cacheHandler","enableExperimentalReact","needsExperimentalReact","currentCount","get","prerenderEarlyExit","r","setTimeout","Math","random","has","delete","hadValidationError","collector","byPath","byPage","ssgNotFoundPaths","turborepoAccessTraceResults","turborepoAccessTraceResult","TurborepoAccessTraceResult","fromSerialized","validation","errors","revalidate","validateRevalidate","metadata","hasEmptyPrelude","hasPostponed","ssgNotFound","durations","durationsByPath","duration","ppr","srcRoute","appPageName","isAppPath","Boolean","isAppRouteHandler","isAppRouteRoute","notFoundRoutes","includes","pagePath","getPagePath","distPagesDir","slice","split","orig","handlerSrc","handlerDest","dirname","copyFile","htmlDest","sep","ampHtmlDest","jsonDest","htmlSrc","jsonSrc","RSC_SUFFIX","console","log","formatAmpMessages","failedPages","Array","from","sort","flush","endWorker","nextExportSpan"],"mappings":"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"}