{"version":3,"sources":["../../../src/trace/report/index.ts"],"sourcesContent":["import type { TraceEvent } from '../types'\nimport reportToTelemetry from './to-telemetry'\nimport reportToJson from './to-json'\nimport type { Reporter } from './types'\n\nclass MultiReporter implements Reporter {\n  private reporters: Reporter[] = []\n\n  constructor(reporters: Reporter[]) {\n    this.reporters = reporters\n  }\n\n  async flushAll() {\n    await Promise.all(this.reporters.map((reporter) => reporter.flushAll()))\n  }\n\n  report(event: TraceEvent) {\n    this.reporters.forEach((reporter) => reporter.report(event))\n  }\n}\n\n// JSON is always reported to allow for diagnostics\nexport const reporter = new MultiReporter([reportToJson, reportToTelemetry])\n"],"names":["reporter","MultiReporter","constructor","reporters","flushAll","Promise","all","map","report","event","forEach","reportToJson","reportToTelemetry"],"mappings":";;;;+BAsBaA;;;eAAAA;;;oEArBiB;+DACL;;;;;;AAGzB,MAAMC;IAGJC,YAAYC,SAAqB,CAAE;aAF3BA,YAAwB,EAAE;QAGhC,IAAI,CAACA,SAAS,GAAGA;IACnB;IAEA,MAAMC,WAAW;QACf,MAAMC,QAAQC,GAAG,CAAC,IAAI,CAACH,SAAS,CAACI,GAAG,CAAC,CAACP,WAAaA,SAASI,QAAQ;IACtE;IAEAI,OAAOC,KAAiB,EAAE;QACxB,IAAI,CAACN,SAAS,CAACO,OAAO,CAAC,CAACV,WAAaA,SAASQ,MAAM,CAACC;IACvD;AACF;AAGO,MAAMT,WAAW,IAAIC,cAAc;IAACU,eAAY;IAAEC,oBAAiB;CAAC"}