{"version":3,"sources":["../../../../../src/client/components/router-reducer/reducers/server-action-reducer.ts"],"sourcesContent":["import type {\n  ActionFlightResponse,\n  ActionResult,\n  FlightData,\n} from '../../../../server/app-render/types'\nimport { callServer } from '../../../app-call-server'\nimport {\n  ACTION_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_URL,\n  RSC_CONTENT_TYPE_HEADER,\n} from '../../app-router-headers'\n// // eslint-disable-next-line import/no-extraneous-dependencies\n// import { createFromFetch } from 'react-server-dom-webpack/client'\n// // eslint-disable-next-line import/no-extraneous-dependencies\n// import { encodeReply } from 'react-server-dom-webpack/client'\nconst { createFromFetch, encodeReply } = (\n  !!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')\n) as typeof import('react-server-dom-webpack/client')\n\nimport type {\n  ReadonlyReducerState,\n  ReducerState,\n  ServerActionAction,\n  ServerActionMutable,\n} from '../router-reducer-types'\nimport { addBasePath } from '../../../add-base-path'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { handleMutable } from '../handle-mutable'\nimport { fillLazyItemsTillLeafWithHead } from '../fill-lazy-items-till-leaf-with-head'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { hasInterceptionRouteInCurrentTree } from './has-interception-route-in-current-tree'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\nimport { refreshInactiveParallelSegments } from '../refetch-inactive-parallel-segments'\n\ntype FetchServerActionResult = {\n  redirectLocation: URL | undefined\n  actionResult?: ActionResult\n  actionFlightData?: FlightData | undefined | null\n  revalidatedParts: {\n    tag: boolean\n    cookie: boolean\n    paths: string[]\n  }\n}\n\nasync function fetchServerAction(\n  state: ReadonlyReducerState,\n  nextUrl: ReadonlyReducerState['nextUrl'],\n  { actionId, actionArgs }: ServerActionAction\n): Promise<FetchServerActionResult> {\n  const body = await encodeReply(actionArgs)\n\n  const res = await fetch('', {\n    method: 'POST',\n    headers: {\n      Accept: RSC_CONTENT_TYPE_HEADER,\n      [ACTION_HEADER]: actionId,\n      [NEXT_ROUTER_STATE_TREE_HEADER]: encodeURIComponent(\n        JSON.stringify(state.tree)\n      ),\n      ...(process.env.NEXT_DEPLOYMENT_ID\n        ? {\n            'x-deployment-id': process.env.NEXT_DEPLOYMENT_ID,\n          }\n        : {}),\n      ...(nextUrl\n        ? {\n            [NEXT_URL]: nextUrl,\n          }\n        : {}),\n    },\n    body,\n  })\n\n  const location = res.headers.get('x-action-redirect')\n  let revalidatedParts: FetchServerActionResult['revalidatedParts']\n  try {\n    const revalidatedHeader = JSON.parse(\n      res.headers.get('x-action-revalidated') || '[[],0,0]'\n    )\n    revalidatedParts = {\n      paths: revalidatedHeader[0] || [],\n      tag: !!revalidatedHeader[1],\n      cookie: revalidatedHeader[2],\n    }\n  } catch (e) {\n    revalidatedParts = {\n      paths: [],\n      tag: false,\n      cookie: false,\n    }\n  }\n\n  const redirectLocation = location\n    ? new URL(\n        addBasePath(location),\n        // Ensure relative redirects in Server Actions work, e.g. redirect('./somewhere-else')\n        new URL(state.canonicalUrl, window.location.href)\n      )\n    : undefined\n\n  const contentType = res.headers.get('content-type')\n\n  if (contentType === RSC_CONTENT_TYPE_HEADER) {\n    const response: ActionFlightResponse = await createFromFetch(\n      Promise.resolve(res),\n      {\n        callServer,\n      }\n    )\n\n    if (location) {\n      // if it was a redirection, then result is just a regular RSC payload\n      return {\n        actionFlightData: response.f,\n        redirectLocation,\n        revalidatedParts,\n      }\n    }\n\n    return {\n      actionResult: response.a,\n      actionFlightData: response.f,\n      redirectLocation,\n      revalidatedParts,\n    }\n  }\n\n  // Handle invalid server action responses\n  if (res.status >= 400) {\n    // The server can respond with a text/plain error message, but we'll fallback to something generic\n    // if there isn't one.\n    const error =\n      contentType === 'text/plain'\n        ? await res.text()\n        : 'An unexpected response was received from the server.'\n\n    throw new Error(error)\n  }\n\n  return {\n    redirectLocation,\n    revalidatedParts,\n  }\n}\n\n/*\n * This reducer is responsible for calling the server action and processing any side-effects from the server action.\n * It does not mutate the state by itself but rather delegates to other reducers to do the actual mutation.\n */\nexport function serverActionReducer(\n  state: ReadonlyReducerState,\n  action: ServerActionAction\n): ReducerState {\n  const { resolve, reject } = action\n  const mutable: ServerActionMutable = {}\n  const href = state.canonicalUrl\n\n  let currentTree = state.tree\n\n  mutable.preserveCustomHistoryState = false\n\n  // only pass along the `nextUrl` param (used for interception routes) if the current route was intercepted.\n  // If the route has been intercepted, the action should be as well.\n  // Otherwise the server action might be intercepted with the wrong action id\n  // (ie, one that corresponds with the intercepted route)\n  const nextUrl =\n    state.nextUrl && hasInterceptionRouteInCurrentTree(state.tree)\n      ? state.nextUrl\n      : null\n\n  return fetchServerAction(state, nextUrl, action).then(\n    async ({\n      actionResult,\n      actionFlightData: flightData,\n      redirectLocation,\n    }) => {\n      // Make sure the redirection is a push instead of a replace.\n      // Issue: https://github.com/vercel/next.js/issues/53911\n      if (redirectLocation) {\n        state.pushRef.pendingPush = true\n        mutable.pendingPush = true\n      }\n\n      if (!flightData) {\n        resolve(actionResult)\n\n        // If there is a redirect but no flight data we need to do a mpaNavigation.\n        if (redirectLocation) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            redirectLocation.href,\n            state.pushRef.pendingPush\n          )\n        }\n        return state\n      }\n\n      if (typeof flightData === 'string') {\n        // Handle case when navigating to page in `pages` from `app`\n        return handleExternalUrl(\n          state,\n          mutable,\n          flightData,\n          state.pushRef.pendingPush\n        )\n      }\n\n      if (redirectLocation) {\n        const newHref = createHrefFromUrl(redirectLocation, false)\n        mutable.canonicalUrl = newHref\n      }\n\n      for (const flightDataPath of flightData) {\n        // FlightDataPath with more than two items means unexpected Flight data was returned\n        if (flightDataPath.length !== 3) {\n          // TODO-APP: handle this case better\n          console.log('SERVER ACTION APPLY FAILED')\n          return state\n        }\n\n        // Given the path can only have two items the items are only the router state and rsc for the root.\n        const [treePatch] = flightDataPath\n        const newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          [''],\n          currentTree,\n          treePatch,\n          redirectLocation\n            ? createHrefFromUrl(redirectLocation)\n            : state.canonicalUrl\n        )\n\n        if (newTree === null) {\n          return handleSegmentMismatch(state, action, treePatch)\n        }\n\n        if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            href,\n            state.pushRef.pendingPush\n          )\n        }\n\n        // The one before last item is the router state tree patch\n        const [cacheNodeSeedData, head] = flightDataPath.slice(-2)\n        const rsc = cacheNodeSeedData !== null ? cacheNodeSeedData[2] : null\n\n        // Handles case where prefetch only returns the router tree patch without rendered components.\n        if (rsc !== null) {\n          const cache: CacheNode = createEmptyCacheNode()\n          cache.rsc = rsc\n          cache.prefetchRsc = null\n          cache.loading = cacheNodeSeedData[3]\n          fillLazyItemsTillLeafWithHead(\n            cache,\n            // Existing cache is not passed in as `router.refresh()` has to invalidate the entire cache.\n            undefined,\n            treePatch,\n            cacheNodeSeedData,\n            head\n          )\n\n          await refreshInactiveParallelSegments({\n            state,\n            updatedTree: newTree,\n            updatedCache: cache,\n            includeNextUrl: Boolean(nextUrl),\n            canonicalUrl: mutable.canonicalUrl || state.canonicalUrl,\n          })\n\n          mutable.cache = cache\n          mutable.prefetchCache = new Map()\n        }\n\n        mutable.patchedTree = newTree\n        currentTree = newTree\n      }\n\n      resolve(actionResult)\n\n      return handleMutable(state, mutable)\n    },\n    (e: any) => {\n      // When the server action is rejected we don't update the state and instead call the reject handler of the promise.\n      reject(e)\n\n      return state\n    }\n  )\n}\n"],"names":["serverActionReducer","createFromFetch","encodeReply","process","env","NEXT_RUNTIME","require","fetchServerAction","state","nextUrl","actionId","actionArgs","body","res","fetch","method","headers","Accept","RSC_CONTENT_TYPE_HEADER","ACTION_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","encodeURIComponent","JSON","stringify","tree","NEXT_DEPLOYMENT_ID","NEXT_URL","location","get","revalidatedParts","revalidatedHeader","parse","paths","tag","cookie","e","redirectLocation","URL","addBasePath","canonicalUrl","window","href","undefined","contentType","response","Promise","resolve","callServer","actionFlightData","f","actionResult","a","status","error","text","Error","action","reject","mutable","currentTree","preserveCustomHistoryState","hasInterceptionRouteInCurrentTree","then","flightData","pushRef","pendingPush","handleExternalUrl","newHref","createHrefFromUrl","flightDataPath","length","console","log","treePatch","newTree","applyRouterStatePatchToTree","handleSegmentMismatch","isNavigatingToNewRootLayout","cacheNodeSeedData","head","slice","rsc","cache","createEmptyCacheNode","prefetchRsc","loading","fillLazyItemsTillLeafWithHead","refreshInactiveParallelSegments","updatedTree","updatedCache","includeNextUrl","Boolean","prefetchCache","Map","patchedTree","handleMutable"],"mappings":"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"}