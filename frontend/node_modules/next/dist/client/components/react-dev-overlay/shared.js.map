{"version":3,"sources":["../../../../src/client/components/react-dev-overlay/shared.ts"],"sourcesContent":["import { useReducer } from 'react'\n\nimport type { StackFrame } from 'next/dist/compiled/stacktrace-parser'\nimport type { VersionInfo } from '../../../server/dev/parse-version-info'\nimport type { SupportedErrorEvent } from './internal/container/Errors'\nimport type { ComponentStackFrame } from './internal/helpers/parse-component-stack'\n\ntype FastRefreshState =\n  /** No refresh in progress. */\n  | { type: 'idle' }\n  /** The refresh process has been triggered, but the new code has not been executed yet. */\n  | { type: 'pending'; errors: SupportedErrorEvent[] }\n\nexport interface OverlayState {\n  nextId: number\n  buildError: string | null\n  errors: SupportedErrorEvent[]\n  refreshState: FastRefreshState\n  rootLayoutMissingTags: typeof window.__next_root_layout_missing_tags\n  versionInfo: VersionInfo\n  notFound: boolean\n}\n\nexport const ACTION_BUILD_OK = 'build-ok'\nexport const ACTION_BUILD_ERROR = 'build-error'\nexport const ACTION_BEFORE_REFRESH = 'before-fast-refresh'\nexport const ACTION_REFRESH = 'fast-refresh'\nexport const ACTION_VERSION_INFO = 'version-info'\nexport const ACTION_UNHANDLED_ERROR = 'unhandled-error'\nexport const ACTION_UNHANDLED_REJECTION = 'unhandled-rejection'\n\ninterface BuildOkAction {\n  type: typeof ACTION_BUILD_OK\n}\ninterface BuildErrorAction {\n  type: typeof ACTION_BUILD_ERROR\n  message: string\n}\ninterface BeforeFastRefreshAction {\n  type: typeof ACTION_BEFORE_REFRESH\n}\ninterface FastRefreshAction {\n  type: typeof ACTION_REFRESH\n}\n\nexport interface UnhandledErrorAction {\n  type: typeof ACTION_UNHANDLED_ERROR\n  reason: Error\n  frames: StackFrame[]\n  componentStackFrames?: ComponentStackFrame[]\n  warning?: [string, string, string]\n}\nexport interface UnhandledRejectionAction {\n  type: typeof ACTION_UNHANDLED_REJECTION\n  reason: Error\n  frames: StackFrame[]\n}\n\ninterface VersionInfoAction {\n  type: typeof ACTION_VERSION_INFO\n  versionInfo: VersionInfo\n}\n\nexport type BusEvent =\n  | BuildOkAction\n  | BuildErrorAction\n  | BeforeFastRefreshAction\n  | FastRefreshAction\n  | UnhandledErrorAction\n  | UnhandledRejectionAction\n  | VersionInfoAction\n\nfunction pushErrorFilterDuplicates(\n  errors: SupportedErrorEvent[],\n  err: SupportedErrorEvent\n): SupportedErrorEvent[] {\n  return [\n    ...errors.filter((e) => {\n      // Filter out duplicate errors\n      return e.event.reason !== err.event.reason\n    }),\n    err,\n  ]\n}\n\nexport const INITIAL_OVERLAY_STATE: OverlayState = {\n  nextId: 1,\n  buildError: null,\n  errors: [],\n  notFound: false,\n  refreshState: { type: 'idle' },\n  rootLayoutMissingTags: [],\n  versionInfo: { installed: '0.0.0', staleness: 'unknown' },\n}\n\nexport function useErrorOverlayReducer() {\n  return useReducer((_state: OverlayState, action: BusEvent): OverlayState => {\n    switch (action.type) {\n      case ACTION_BUILD_OK: {\n        return { ..._state, buildError: null }\n      }\n      case ACTION_BUILD_ERROR: {\n        return { ..._state, buildError: action.message }\n      }\n      case ACTION_BEFORE_REFRESH: {\n        return { ..._state, refreshState: { type: 'pending', errors: [] } }\n      }\n      case ACTION_REFRESH: {\n        return {\n          ..._state,\n          buildError: null,\n          errors:\n            // Errors can come in during updates. In this case, UNHANDLED_ERROR\n            // and UNHANDLED_REJECTION events might be dispatched between the\n            // BEFORE_REFRESH and the REFRESH event. We want to keep those errors\n            // around until the next refresh. Otherwise we run into a race\n            // condition where those errors would be cleared on refresh completion\n            // before they can be displayed.\n            _state.refreshState.type === 'pending'\n              ? _state.refreshState.errors\n              : [],\n          refreshState: { type: 'idle' },\n        }\n      }\n      case ACTION_UNHANDLED_ERROR:\n      case ACTION_UNHANDLED_REJECTION: {\n        switch (_state.refreshState.type) {\n          case 'idle': {\n            return {\n              ..._state,\n              nextId: _state.nextId + 1,\n              errors: pushErrorFilterDuplicates(_state.errors, {\n                id: _state.nextId,\n                event: action,\n              }),\n            }\n          }\n          case 'pending': {\n            return {\n              ..._state,\n              nextId: _state.nextId + 1,\n              refreshState: {\n                ..._state.refreshState,\n                errors: pushErrorFilterDuplicates(_state.refreshState.errors, {\n                  id: _state.nextId,\n                  event: action,\n                }),\n              },\n            }\n          }\n          default:\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const _: never = _state.refreshState\n            return _state\n        }\n      }\n      case ACTION_VERSION_INFO: {\n        return { ..._state, versionInfo: action.versionInfo }\n      }\n      default: {\n        return _state\n      }\n    }\n  }, INITIAL_OVERLAY_STATE)\n}\n\nexport const REACT_REFRESH_FULL_RELOAD_FROM_ERROR =\n  '[Fast Refresh] performing full reload because your application had an unrecoverable error'\n"],"names":["ACTION_BEFORE_REFRESH","ACTION_BUILD_ERROR","ACTION_BUILD_OK","ACTION_REFRESH","ACTION_UNHANDLED_ERROR","ACTION_UNHANDLED_REJECTION","ACTION_VERSION_INFO","INITIAL_OVERLAY_STATE","REACT_REFRESH_FULL_RELOAD_FROM_ERROR","useErrorOverlayReducer","pushErrorFilterDuplicates","errors","err","filter","e","event","reason","nextId","buildError","notFound","refreshState","type","rootLayoutMissingTags","versionInfo","installed","staleness","useReducer","_state","action","message","id","_"],"mappings":"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"}