{"version":3,"sources":["../../../../../../src/client/components/react-dev-overlay/internal/helpers/parse-component-stack.ts"],"sourcesContent":["export type ComponentStackFrame = {\n  canOpenInEditor: boolean\n  component: string\n  file?: string\n  lineNumber?: number\n  column?: number\n}\n\nenum LocationType {\n  FILE = 'file',\n  WEBPACK_INTERNAL = 'webpack-internal',\n  HTTP = 'http',\n  PROTOCOL_RELATIVE = 'protocol-relative',\n  UNKNOWN = 'unknown',\n}\n\n/**\n * Get the type of frame line based on the location\n */\nfunction getLocationType(location: string): LocationType {\n  if (location.startsWith('file://')) {\n    return LocationType.FILE\n  }\n  if (location.startsWith('webpack-internal://')) {\n    return LocationType.WEBPACK_INTERNAL\n  }\n  if (location.startsWith('http://') || location.startsWith('https://')) {\n    return LocationType.HTTP\n  }\n  if (location.startsWith('//')) {\n    return LocationType.PROTOCOL_RELATIVE\n  }\n  return LocationType.UNKNOWN\n}\n\nfunction parseStackFrameLocation(\n  location: string\n): Omit<ComponentStackFrame, 'component'> {\n  const locationType = getLocationType(location)\n\n  const modulePath = location?.replace(\n    /^(webpack-internal:\\/\\/\\/|file:\\/\\/)(\\(.*\\)\\/)?/,\n    ''\n  )\n  const [, file, lineNumber, column] =\n    modulePath?.match(/^(.+):(\\d+):(\\d+)/) ?? []\n\n  switch (locationType) {\n    case LocationType.FILE:\n    case LocationType.WEBPACK_INTERNAL:\n      return {\n        canOpenInEditor: true,\n        file,\n        lineNumber: lineNumber ? Number(lineNumber) : undefined,\n        column: column ? Number(column) : undefined,\n      }\n    // When the location is a URL we only show the file\n    // TODO: Resolve http(s) URLs through sourcemaps\n    case LocationType.HTTP:\n    case LocationType.PROTOCOL_RELATIVE:\n    case LocationType.UNKNOWN:\n    default: {\n      return {\n        canOpenInEditor: false,\n      }\n    }\n  }\n}\n\nexport function parseComponentStack(\n  componentStack: string\n): ComponentStackFrame[] {\n  const componentStackFrames: ComponentStackFrame[] = []\n  for (const line of componentStack.trim().split('\\n')) {\n    // Get component and file from the component stack line\n    const match = /at ([^ ]+)( \\((.*)\\))?/.exec(line)\n    if (match?.[1]) {\n      const component = match[1]\n      const location = match[3]\n\n      if (!location) {\n        componentStackFrames.push({\n          canOpenInEditor: false,\n          component,\n        })\n        continue\n      }\n\n      // Stop parsing the component stack if we reach a Next.js component\n      if (location?.includes('next/dist')) {\n        break\n      }\n\n      const frameLocation = parseStackFrameLocation(location)\n      componentStackFrames.push({\n        component,\n        ...frameLocation,\n      })\n    }\n  }\n\n  return componentStackFrames\n}\n"],"names":["parseComponentStack","LocationType","getLocationType","location","startsWith","parseStackFrameLocation","locationType","modulePath","replace","file","lineNumber","column","match","canOpenInEditor","Number","undefined","componentStack","componentStackFrames","line","trim","split","exec","component","push","includes","frameLocation"],"mappings":";;;;+BAqEgBA;;;eAAAA;;;;UA7DXC;;;;;;GAAAA,iBAAAA;AAQL;;CAEC,GACD,SAASC,gBAAgBC,QAAgB;IACvC,IAAIA,SAASC,UAAU,CAAC,YAAY;QAClC;IACF;IACA,IAAID,SAASC,UAAU,CAAC,wBAAwB;QAC9C;IACF;IACA,IAAID,SAASC,UAAU,CAAC,cAAcD,SAASC,UAAU,CAAC,aAAa;QACrE;IACF;IACA,IAAID,SAASC,UAAU,CAAC,OAAO;QAC7B;IACF;IACA;AACF;AAEA,SAASC,wBACPF,QAAgB;IAEhB,MAAMG,eAAeJ,gBAAgBC;IAErC,MAAMI,aAAaJ,4BAAAA,SAAUK,OAAO,CAClC,mDACA;QAGAD;IADF,MAAM,GAAGE,MAAMC,YAAYC,OAAO,GAChCJ,CAAAA,oBAAAA,8BAAAA,WAAYK,KAAK,CAAC,gCAAlBL,oBAA0C,EAAE;IAE9C,OAAQD;QACN;QACA;YACE,OAAO;gBACLO,iBAAiB;gBACjBJ;gBACAC,YAAYA,aAAaI,OAAOJ,cAAcK;gBAC9CJ,QAAQA,SAASG,OAAOH,UAAUI;YACpC;QACF,mDAAmD;QACnD,gDAAgD;QAChD;QACA;QACA;QACA;YAAS;gBACP,OAAO;oBACLF,iBAAiB;gBACnB;YACF;IACF;AACF;AAEO,SAASb,oBACdgB,cAAsB;IAEtB,MAAMC,uBAA8C,EAAE;IACtD,KAAK,MAAMC,QAAQF,eAAeG,IAAI,GAAGC,KAAK,CAAC,MAAO;QACpD,uDAAuD;QACvD,MAAMR,QAAQ,yBAAyBS,IAAI,CAACH;QAC5C,IAAIN,yBAAAA,KAAO,CAAC,EAAE,EAAE;YACd,MAAMU,YAAYV,KAAK,CAAC,EAAE;YAC1B,MAAMT,WAAWS,KAAK,CAAC,EAAE;YAEzB,IAAI,CAACT,UAAU;gBACbc,qBAAqBM,IAAI,CAAC;oBACxBV,iBAAiB;oBACjBS;gBACF;gBACA;YACF;YAEA,mEAAmE;YACnE,IAAInB,4BAAAA,SAAUqB,QAAQ,CAAC,cAAc;gBACnC;YACF;YAEA,MAAMC,gBAAgBpB,wBAAwBF;YAC9Cc,qBAAqBM,IAAI,CAAC;gBACxBD;gBACA,GAAGG,aAAa;YAClB;QACF;IACF;IAEA,OAAOR;AACT"}