{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/pages/websocket.ts"],"sourcesContent":["import type { HMR_ACTION_TYPES } from '../../../../server/dev/hot-reloader-types'\n\nlet source: WebSocket\n\ntype ActionCallback = (action: HMR_ACTION_TYPES) => void\n\nconst eventCallbacks: Array<ActionCallback> = []\n\nfunction getSocketProtocol(assetPrefix: string): string {\n  let protocol = location.protocol\n\n  try {\n    // assetPrefix is a url\n    protocol = new URL(assetPrefix).protocol\n  } catch {}\n\n  return protocol === 'http:' ? 'ws' : 'wss'\n}\n\nexport function addMessageListener(callback: ActionCallback) {\n  eventCallbacks.push(callback)\n}\n\nexport function sendMessage(data: string) {\n  if (!source || source.readyState !== source.OPEN) return\n  return source.send(data)\n}\n\nlet reconnections = 0\n\nexport function connectHMR(options: { path: string; assetPrefix: string }) {\n  function init() {\n    if (source) source.close()\n\n    function handleOnline() {\n      reconnections = 0\n      window.console.log('[HMR] connected')\n    }\n\n    function handleMessage(event: MessageEvent<string>) {\n      // Coerce into HMR_ACTION_TYPES as that is the format.\n      const msg: HMR_ACTION_TYPES = JSON.parse(event.data)\n      for (const eventCallback of eventCallbacks) {\n        eventCallback(msg)\n      }\n    }\n\n    let timer: ReturnType<typeof setTimeout>\n    function handleDisconnect() {\n      source.onerror = null\n      source.onclose = null\n      source.close()\n      reconnections++\n      // After 25 reconnects we'll want to reload the page as it indicates the dev server is no longer running.\n      if (reconnections > 25) {\n        window.location.reload()\n        return\n      }\n\n      clearTimeout(timer)\n      // Try again after 5 seconds\n      timer = setTimeout(init, reconnections > 5 ? 5000 : 1000)\n    }\n\n    const { hostname, port } = location\n    const protocol = getSocketProtocol(options.assetPrefix || '')\n    const assetPrefix = options.assetPrefix.replace(/^\\/+/, '')\n\n    let url = `${protocol}://${hostname}:${port}${\n      assetPrefix ? `/${assetPrefix}` : ''\n    }`\n\n    if (assetPrefix.startsWith('http')) {\n      url = `${protocol}://${assetPrefix.split('://', 2)[1]}`\n    }\n\n    source = new window.WebSocket(`${url}${options.path}`)\n    source.onopen = handleOnline\n    source.onerror = handleDisconnect\n    source.onclose = handleDisconnect\n    source.onmessage = handleMessage\n  }\n\n  init()\n}\n"],"names":["addMessageListener","connectHMR","sendMessage","source","eventCallbacks","getSocketProtocol","assetPrefix","protocol","location","URL","callback","push","data","readyState","OPEN","send","reconnections","options","init","close","handleOnline","window","console","log","handleMessage","event","msg","JSON","parse","eventCallback","timer","handleDisconnect","onerror","onclose","reload","clearTimeout","setTimeout","hostname","port","replace","url","startsWith","split","WebSocket","path","onopen","onmessage"],"mappings":";;;;;;;;;;;;;;;;IAmBgBA,kBAAkB;eAAlBA;;IAWAC,UAAU;eAAVA;;IAPAC,WAAW;eAAXA;;;AArBhB,IAAIC;AAIJ,MAAMC,iBAAwC,EAAE;AAEhD,SAASC,kBAAkBC,WAAmB;IAC5C,IAAIC,WAAWC,SAASD,QAAQ;IAEhC,IAAI;QACF,uBAAuB;QACvBA,WAAW,IAAIE,IAAIH,aAAaC,QAAQ;IAC1C,EAAE,UAAM,CAAC;IAET,OAAOA,aAAa,UAAU,OAAO;AACvC;AAEO,SAASP,mBAAmBU,QAAwB;IACzDN,eAAeO,IAAI,CAACD;AACtB;AAEO,SAASR,YAAYU,IAAY;IACtC,IAAI,CAACT,UAAUA,OAAOU,UAAU,KAAKV,OAAOW,IAAI,EAAE;IAClD,OAAOX,OAAOY,IAAI,CAACH;AACrB;AAEA,IAAII,gBAAgB;AAEb,SAASf,WAAWgB,OAA8C;IACvE,SAASC;QACP,IAAIf,QAAQA,OAAOgB,KAAK;QAExB,SAASC;YACPJ,gBAAgB;YAChBK,OAAOC,OAAO,CAACC,GAAG,CAAC;QACrB;QAEA,SAASC,cAAcC,KAA2B;YAChD,sDAAsD;YACtD,MAAMC,MAAwBC,KAAKC,KAAK,CAACH,MAAMb,IAAI;YACnD,KAAK,MAAMiB,iBAAiBzB,eAAgB;gBAC1CyB,cAAcH;YAChB;QACF;QAEA,IAAII;QACJ,SAASC;YACP5B,OAAO6B,OAAO,GAAG;YACjB7B,OAAO8B,OAAO,GAAG;YACjB9B,OAAOgB,KAAK;YACZH;YACA,yGAAyG;YACzG,IAAIA,gBAAgB,IAAI;gBACtBK,OAAOb,QAAQ,CAAC0B,MAAM;gBACtB;YACF;YAEAC,aAAaL;YACb,4BAA4B;YAC5BA,QAAQM,WAAWlB,MAAMF,gBAAgB,IAAI,OAAO;QACtD;QAEA,MAAM,EAAEqB,QAAQ,EAAEC,IAAI,EAAE,GAAG9B;QAC3B,MAAMD,WAAWF,kBAAkBY,QAAQX,WAAW,IAAI;QAC1D,MAAMA,cAAcW,QAAQX,WAAW,CAACiC,OAAO,CAAC,QAAQ;QAExD,IAAIC,MAAM,AAAGjC,WAAS,QAAK8B,WAAS,MAAGC,OACrChC,CAAAA,cAAc,AAAC,MAAGA,cAAgB,EAAC;QAGrC,IAAIA,YAAYmC,UAAU,CAAC,SAAS;YAClCD,MAAM,AAAGjC,WAAS,QAAKD,YAAYoC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE;QACvD;QAEAvC,SAAS,IAAIkB,OAAOsB,SAAS,CAAC,AAAC,KAAEH,MAAMvB,QAAQ2B,IAAI;QACnDzC,OAAO0C,MAAM,GAAGzB;QAChBjB,OAAO6B,OAAO,GAAGD;QACjB5B,OAAO8B,OAAO,GAAGF;QACjB5B,OAAO2C,SAAS,GAAGtB;IACrB;IAEAN;AACF"}