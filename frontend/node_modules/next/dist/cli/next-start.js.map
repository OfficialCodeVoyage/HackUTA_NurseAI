{"version":3,"sources":["../../src/cli/next-start.ts"],"sourcesContent":["#!/usr/bin/env node\n\nimport '../server/lib/cpu-profile'\nimport { startServer } from '../server/lib/start-server'\nimport { printAndExit } from '../server/lib/utils'\nimport { getProjectDir } from '../lib/get-project-dir'\nimport {\n  getReservedPortExplanation,\n  isPortIsReserved,\n} from '../lib/helpers/get-reserved-port'\n\ntype NextStartOptions = {\n  port: number\n  hostname?: string\n  keepAliveTimeout?: number\n}\n\nconst nextStart = async (options: NextStartOptions, directory?: string) => {\n  const dir = getProjectDir(directory)\n  const host = options.hostname\n  const port = options.port\n  let keepAliveTimeout = options.keepAliveTimeout\n\n  if (isPortIsReserved(port)) {\n    printAndExit(getReservedPortExplanation(port), 1)\n  }\n\n  await startServer({\n    dir,\n    isDev: false,\n    hostname: host,\n    port,\n    keepAliveTimeout,\n  })\n}\n\nexport { nextStart }\n"],"names":["nextStart","options","directory","dir","getProjectDir","host","hostname","port","keepAliveTimeout","isPortIsReserved","printAndExit","getReservedPortExplanation","startServer","isDev"],"mappings":";;;;;+BAoCSA;;;eAAAA;;;QAlCF;6BACqB;uBACC;+BACC;iCAIvB;AAQP,MAAMA,YAAY,OAAOC,SAA2BC;IAClD,MAAMC,MAAMC,IAAAA,4BAAa,EAACF;IAC1B,MAAMG,OAAOJ,QAAQK,QAAQ;IAC7B,MAAMC,OAAON,QAAQM,IAAI;IACzB,IAAIC,mBAAmBP,QAAQO,gBAAgB;IAE/C,IAAIC,IAAAA,iCAAgB,EAACF,OAAO;QAC1BG,IAAAA,mBAAY,EAACC,IAAAA,2CAA0B,EAACJ,OAAO;IACjD;IAEA,MAAMK,IAAAA,wBAAW,EAAC;QAChBT;QACAU,OAAO;QACPP,UAAUD;QACVE;QACAC;IACF;AACF"}