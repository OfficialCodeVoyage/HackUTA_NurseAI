{"version":3,"sources":["../../../src/server/app-render/create-component-styles-and-scripts.tsx"],"sourcesContent":["import React from 'react'\nimport { interopDefault } from './interop-default'\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags'\nimport type { AppRenderContext } from './app-render'\nimport { getAssetQueryString } from './get-asset-query-string'\nimport { encodeURIPath } from '../../shared/lib/encode-uri-path'\n\nexport async function createComponentStylesAndScripts({\n  filePath,\n  getComponent,\n  injectedCSS,\n  injectedJS,\n  ctx,\n}: {\n  filePath: string\n  getComponent: () => any\n  injectedCSS: Set<string>\n  injectedJS: Set<string>\n  ctx: AppRenderContext\n}): Promise<[React.ComponentType<any>, React.ReactNode, React.ReactNode]> {\n  const { styles: cssHrefs, scripts: jsHrefs } = getLinkAndScriptTags(\n    ctx.clientReferenceManifest,\n    filePath,\n    injectedCSS,\n    injectedJS\n  )\n\n  const styles = cssHrefs\n    ? cssHrefs.map((href, index) => {\n        const fullHref = `${ctx.assetPrefix}/_next/${encodeURIPath(\n          href\n        )}${getAssetQueryString(ctx, true)}`\n\n        // `Precedence` is an opt-in signal for React to handle resource\n        // loading and deduplication, etc. It's also used as the key to sort\n        // resources so they will be injected in the correct order.\n        // During HMR, it's critical to use different `precedence` values\n        // for different stylesheets, so their order will be kept.\n        // https://github.com/facebook/react/pull/25060\n        const precedence =\n          process.env.NODE_ENV === 'development' ? 'next_' + href : 'next'\n\n        return (\n          <link\n            rel=\"stylesheet\"\n            href={fullHref}\n            // @ts-ignore\n            precedence={precedence}\n            crossOrigin={ctx.renderOpts.crossOrigin}\n            key={index}\n          />\n        )\n      })\n    : null\n\n  const scripts = jsHrefs\n    ? jsHrefs.map((href) => (\n        <script\n          src={`${ctx.assetPrefix}/_next/${encodeURIPath(\n            href\n          )}${getAssetQueryString(ctx, true)}`}\n          async={true}\n        />\n      ))\n    : null\n\n  const Comp = interopDefault(await getComponent())\n\n  return [Comp, styles, scripts]\n}\n"],"names":["React","interopDefault","getLinkAndScriptTags","getAssetQueryString","encodeURIPath","createComponentStylesAndScripts","filePath","getComponent","injectedCSS","injectedJS","ctx","styles","cssHrefs","scripts","jsHrefs","clientReferenceManifest","map","href","index","fullHref","assetPrefix","precedence","process","env","NODE_ENV","link","rel","crossOrigin","renderOpts","script","src","async","Comp"],"mappings":";AAAA,OAAOA,WAAW,QAAO;AACzB,SAASC,cAAc,QAAQ,oBAAmB;AAClD,SAASC,oBAAoB,QAAQ,8BAA6B;AAElE,SAASC,mBAAmB,QAAQ,2BAA0B;AAC9D,SAASC,aAAa,QAAQ,mCAAkC;AAEhE,OAAO,eAAeC,gCAAgC,EACpDC,QAAQ,EACRC,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,GAAG,EAOJ;IACC,MAAM,EAAEC,QAAQC,QAAQ,EAAEC,SAASC,OAAO,EAAE,GAAGZ,qBAC7CQ,IAAIK,uBAAuB,EAC3BT,UACAE,aACAC;IAGF,MAAME,SAASC,WACXA,SAASI,GAAG,CAAC,CAACC,MAAMC;QAClB,MAAMC,WAAW,CAAC,EAAET,IAAIU,WAAW,CAAC,OAAO,EAAEhB,cAC3Ca,MACA,EAAEd,oBAAoBO,KAAK,MAAM,CAAC;QAEpC,gEAAgE;QAChE,oEAAoE;QACpE,2DAA2D;QAC3D,iEAAiE;QACjE,0DAA0D;QAC1D,+CAA+C;QAC/C,MAAMW,aACJC,QAAQC,GAAG,CAACC,QAAQ,KAAK,gBAAgB,UAAUP,OAAO;QAE5D,qBACE,KAACQ;YACCC,KAAI;YACJT,MAAME;YACN,aAAa;YACbE,YAAYA;YACZM,aAAajB,IAAIkB,UAAU,CAACD,WAAW;WAClCT;IAGX,KACA;IAEJ,MAAML,UAAUC,UACZA,QAAQE,GAAG,CAAC,CAACC,qBACX,KAACY;YACCC,KAAK,CAAC,EAAEpB,IAAIU,WAAW,CAAC,OAAO,EAAEhB,cAC/Ba,MACA,EAAEd,oBAAoBO,KAAK,MAAM,CAAC;YACpCqB,OAAO;cAGX;IAEJ,MAAMC,OAAO/B,eAAe,MAAMM;IAElC,OAAO;QAACyB;QAAMrB;QAAQE;KAAQ;AAChC"}