{"version":3,"sources":["../../../src/server/app-render/get-layer-assets.tsx"],"sourcesContent":["import React from 'react'\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags'\nimport { getPreloadableFonts } from './get-preloadable-fonts'\nimport type { AppRenderContext } from './app-render'\nimport { getAssetQueryString } from './get-asset-query-string'\nimport { encodeURIPath } from '../../shared/lib/encode-uri-path'\nimport type { PreloadCallbacks } from './types'\n\nexport function getLayerAssets({\n  ctx,\n  layoutOrPagePath,\n  injectedCSS: injectedCSSWithCurrentLayout,\n  injectedJS: injectedJSWithCurrentLayout,\n  injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n  preloadCallbacks,\n}: {\n  layoutOrPagePath: string | undefined\n  injectedCSS: Set<string>\n  injectedJS: Set<string>\n  injectedFontPreloadTags: Set<string>\n  ctx: AppRenderContext\n  preloadCallbacks: PreloadCallbacks\n}): React.ReactNode {\n  const { styles: styleTags, scripts: scriptTags } = layoutOrPagePath\n    ? getLinkAndScriptTags(\n        ctx.clientReferenceManifest,\n        layoutOrPagePath,\n        injectedCSSWithCurrentLayout,\n        injectedJSWithCurrentLayout,\n        true\n      )\n    : { styles: [], scripts: [] }\n\n  const preloadedFontFiles = layoutOrPagePath\n    ? getPreloadableFonts(\n        ctx.renderOpts.nextFontManifest,\n        layoutOrPagePath,\n        injectedFontPreloadTagsWithCurrentLayout\n      )\n    : null\n\n  if (preloadedFontFiles) {\n    if (preloadedFontFiles.length) {\n      for (let i = 0; i < preloadedFontFiles.length; i++) {\n        const fontFilename = preloadedFontFiles[i]\n        const ext = /\\.(woff|woff2|eot|ttf|otf)$/.exec(fontFilename)![1]\n        const type = `font/${ext}`\n        const href = `${ctx.assetPrefix}/_next/${encodeURIPath(fontFilename)}`\n\n        preloadCallbacks.push(() => {\n          ctx.componentMod.preloadFont(\n            href,\n            type,\n            ctx.renderOpts.crossOrigin,\n            ctx.nonce\n          )\n        })\n      }\n    } else {\n      try {\n        let url = new URL(ctx.assetPrefix)\n        preloadCallbacks.push(() => {\n          ctx.componentMod.preconnect(url.origin, 'anonymous', ctx.nonce)\n        })\n      } catch (error) {\n        // assetPrefix must not be a fully qualified domain name. We assume\n        // we should preconnect to same origin instead\n        preloadCallbacks.push(() => {\n          ctx.componentMod.preconnect('/', 'anonymous', ctx.nonce)\n        })\n      }\n    }\n  }\n\n  const styles = styleTags\n    ? styleTags.map((href, index) => {\n        // In dev, Safari and Firefox will cache the resource during HMR:\n        // - https://github.com/vercel/next.js/issues/5860\n        // - https://bugs.webkit.org/show_bug.cgi?id=187726\n        // Because of this, we add a `?v=` query to bypass the cache during\n        // development. We need to also make sure that the number is always\n        // increasing.\n        const fullHref = `${ctx.assetPrefix}/_next/${encodeURIPath(\n          href\n        )}${getAssetQueryString(ctx, true)}`\n\n        // `Precedence` is an opt-in signal for React to handle resource\n        // loading and deduplication, etc. It's also used as the key to sort\n        // resources so they will be injected in the correct order.\n        // During HMR, it's critical to use different `precedence` values\n        // for different stylesheets, so their order will be kept.\n        // https://github.com/facebook/react/pull/25060\n        const precedence =\n          process.env.NODE_ENV === 'development' ? 'next_' + href : 'next'\n\n        preloadCallbacks.push(() => {\n          ctx.componentMod.preloadStyle(\n            fullHref,\n            ctx.renderOpts.crossOrigin,\n            ctx.nonce\n          )\n        })\n        return (\n          <link\n            rel=\"stylesheet\"\n            href={fullHref}\n            // @ts-ignore\n            precedence={precedence}\n            crossOrigin={ctx.renderOpts.crossOrigin}\n            key={index}\n            nonce={ctx.nonce}\n          />\n        )\n      })\n    : []\n\n  const scripts = scriptTags\n    ? scriptTags.map((href, index) => {\n        const fullSrc = `${ctx.assetPrefix}/_next/${encodeURIPath(\n          href\n        )}${getAssetQueryString(ctx, true)}`\n\n        return (\n          <script\n            src={fullSrc}\n            async={true}\n            key={`script-${index}`}\n            nonce={ctx.nonce}\n          />\n        )\n      })\n    : []\n\n  return styles.length || scripts.length ? [...styles, ...scripts] : null\n}\n"],"names":["React","getLinkAndScriptTags","getPreloadableFonts","getAssetQueryString","encodeURIPath","getLayerAssets","ctx","layoutOrPagePath","injectedCSS","injectedCSSWithCurrentLayout","injectedJS","injectedJSWithCurrentLayout","injectedFontPreloadTags","injectedFontPreloadTagsWithCurrentLayout","preloadCallbacks","styles","styleTags","scripts","scriptTags","clientReferenceManifest","preloadedFontFiles","renderOpts","nextFontManifest","length","i","fontFilename","ext","exec","type","href","assetPrefix","push","componentMod","preloadFont","crossOrigin","nonce","url","URL","preconnect","origin","error","map","index","fullHref","precedence","process","env","NODE_ENV","preloadStyle","link","rel","fullSrc","script","src","async"],"mappings":"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"}