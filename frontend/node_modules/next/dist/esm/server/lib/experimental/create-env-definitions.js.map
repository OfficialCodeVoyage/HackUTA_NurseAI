{"version":3,"sources":["../../../../src/server/lib/experimental/create-env-definitions.ts"],"sourcesContent":["import type { Env } from '@next/env'\nimport { join } from 'node:path'\nimport { writeFile } from 'node:fs/promises'\n\nexport async function createEnvDefinitions({\n  distDir,\n  env,\n}: {\n  distDir: string\n  env: Env\n}) {\n  const envKeysStr = Object.keys(env)\n    .map((key) => `      ${key}?: string`)\n    .join('\\n')\n\n  const definitionStr = `// Type definitions for Next.js environment variables\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n${envKeysStr}\n    }\n  }\n}\nexport {}`\n\n  if (process.env.NODE_ENV === 'test') {\n    return definitionStr\n  }\n\n  try {\n    // we expect the types directory to already exist\n    const envDtsPath = join(distDir, 'types', 'env.d.ts')\n    // do not await, this is not essential for further process\n    writeFile(envDtsPath, definitionStr, 'utf-8')\n  } catch (e) {\n    console.error('Failed to write env.d.ts:', e)\n  }\n}\n"],"names":["join","writeFile","createEnvDefinitions","distDir","env","envKeysStr","Object","keys","map","key","definitionStr","process","NODE_ENV","envDtsPath","e","console","error"],"mappings":"AACA,SAASA,IAAI,QAAQ,YAAW;AAChC,SAASC,SAAS,QAAQ,mBAAkB;AAE5C,OAAO,eAAeC,qBAAqB,EACzCC,OAAO,EACPC,GAAG,EAIJ;IACC,MAAMC,aAAaC,OAAOC,IAAI,CAACH,KAC5BI,GAAG,CAAC,CAACC,MAAQ,CAAC,MAAM,EAAEA,IAAI,SAAS,CAAC,EACpCT,IAAI,CAAC;IAER,MAAMU,gBAAgB,CAAC;;;;AAIzB,EAAEL,WAAW;;;;SAIJ,CAAC;IAER,IAAIM,QAAQP,GAAG,CAACQ,QAAQ,KAAK,QAAQ;QACnC,OAAOF;IACT;IAEA,IAAI;QACF,iDAAiD;QACjD,MAAMG,aAAab,KAAKG,SAAS,SAAS;QAC1C,0DAA0D;QAC1DF,UAAUY,YAAYH,eAAe;IACvC,EAAE,OAAOI,GAAG;QACVC,QAAQC,KAAK,CAAC,6BAA6BF;IAC7C;AACF"}