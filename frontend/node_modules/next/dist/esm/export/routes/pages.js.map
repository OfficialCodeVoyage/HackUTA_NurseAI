{"version":3,"sources":["../../../src/export/routes/pages.ts"],"sourcesContent":["import type { ExportRouteResult, FileWriter } from '../types'\nimport type { RenderOpts } from '../../server/render'\nimport type { LoadComponentsReturnType } from '../../server/load-components'\nimport type { AmpValidation } from '../types'\nimport type { NextParsedUrlQuery } from '../../server/request-meta'\n\nimport RenderResult from '../../server/render-result'\nimport { join } from 'path'\nimport type {\n  MockedRequest,\n  MockedResponse,\n} from '../../server/lib/mock-request'\nimport { isInAmpMode } from '../../shared/lib/amp-mode'\nimport {\n  NEXT_DATA_SUFFIX,\n  SERVER_PROPS_EXPORT_ERROR,\n} from '../../lib/constants'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport AmpHtmlValidator from 'next/dist/compiled/amphtml-validator'\nimport { FileType, fileExists } from '../../lib/file-exists'\nimport { lazyRenderPagesPage } from '../../server/route-modules/pages/module.render'\n\nexport const enum ExportedPagesFiles {\n  HTML = 'HTML',\n  DATA = 'DATA',\n  AMP_HTML = 'AMP_HTML',\n  AMP_DATA = 'AMP_PAGE_DATA',\n}\n\nexport async function exportPages(\n  req: MockedRequest,\n  res: MockedResponse,\n  path: string,\n  page: string,\n  query: NextParsedUrlQuery,\n  htmlFilepath: string,\n  htmlFilename: string,\n  ampPath: string,\n  subFolders: boolean,\n  outDir: string,\n  ampValidatorPath: string | undefined,\n  pagesDataDir: string,\n  buildExport: boolean,\n  isDynamic: boolean,\n  hasOrigQueryValues: boolean,\n  renderOpts: RenderOpts,\n  components: LoadComponentsReturnType,\n  fileWriter: FileWriter\n): Promise<ExportRouteResult | undefined> {\n  const ampState = {\n    ampFirst: components.pageConfig?.amp === true,\n    hasQuery: Boolean(query.amp),\n    hybrid: components.pageConfig?.amp === 'hybrid',\n  }\n\n  const inAmpMode = isInAmpMode(ampState)\n  const hybridAmp = ampState.hybrid\n\n  if (components.getServerSideProps) {\n    throw new Error(`Error for page ${page}: ${SERVER_PROPS_EXPORT_ERROR}`)\n  }\n\n  // for non-dynamic SSG pages we should have already\n  // prerendered the file\n  if (!buildExport && components.getStaticProps && !isDynamic) {\n    return\n  }\n\n  if (components.getStaticProps && !htmlFilepath.endsWith('.html')) {\n    // make sure it ends with .html if the name contains a dot\n    htmlFilepath += '.html'\n    htmlFilename += '.html'\n  }\n\n  let renderResult: RenderResult | undefined\n\n  if (typeof components.Component === 'string') {\n    renderResult = RenderResult.fromStatic(components.Component)\n\n    if (hasOrigQueryValues) {\n      throw new Error(\n        `\\nError: you provided query values for ${path} which is an auto-exported page. These can not be applied since the page can no longer be re-rendered on the server. To disable auto-export for this page add \\`getInitialProps\\`\\n`\n      )\n    }\n  } else {\n    /**\n     * This sets environment variable to be used at the time of static export by head.tsx.\n     * Using this from process.env allows targeting SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_FONTS`.\n     * TODO(prateekbh@): Remove this when experimental.optimizeFonts are being cleaned up.\n     */\n    if (renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(\n        renderOpts.optimizeFonts\n      )\n    }\n    if (renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n    try {\n      renderResult = await lazyRenderPagesPage(\n        req,\n        res,\n        page,\n        query,\n        renderOpts\n      )\n    } catch (err) {\n      if (!isBailoutToCSRError(err)) throw err\n    }\n  }\n\n  const ssgNotFound = renderResult?.metadata.isNotFound\n\n  const ampValidations: AmpValidation[] = []\n\n  const validateAmp = async (\n    rawAmpHtml: string,\n    ampPageName: string,\n    validatorPath: string | undefined\n  ) => {\n    const validator = await AmpHtmlValidator.getInstance(validatorPath)\n    const result = validator.validateString(rawAmpHtml)\n    const errors = result.errors.filter((e) => e.severity === 'ERROR')\n    const warnings = result.errors.filter((e) => e.severity !== 'ERROR')\n\n    if (warnings.length || errors.length) {\n      ampValidations.push({\n        page: ampPageName,\n        result: {\n          errors,\n          warnings,\n        },\n      })\n    }\n  }\n\n  const html =\n    renderResult && !renderResult.isNull ? renderResult.toUnchunkedString() : ''\n\n  let ampRenderResult: RenderResult | undefined\n\n  if (inAmpMode && !renderOpts.ampSkipValidation) {\n    if (!ssgNotFound) {\n      await validateAmp(html, path, ampValidatorPath)\n    }\n  } else if (hybridAmp) {\n    const ampHtmlFilename = subFolders\n      ? join(ampPath, 'index.html')\n      : `${ampPath}.html`\n\n    const ampHtmlFilepath = join(outDir, ampHtmlFilename)\n\n    const exists = await fileExists(ampHtmlFilepath, FileType.File)\n    if (!exists) {\n      try {\n        ampRenderResult = await lazyRenderPagesPage(\n          req,\n          res,\n          page,\n          { ...query, amp: '1' },\n          renderOpts\n        )\n      } catch (err) {\n        if (!isBailoutToCSRError(err)) throw err\n      }\n\n      const ampHtml =\n        ampRenderResult && !ampRenderResult.isNull\n          ? ampRenderResult.toUnchunkedString()\n          : ''\n      if (!renderOpts.ampSkipValidation) {\n        await validateAmp(ampHtml, page + '?amp=1', ampValidatorPath)\n      }\n\n      await fileWriter(\n        ExportedPagesFiles.AMP_HTML,\n        ampHtmlFilepath,\n        ampHtml,\n        'utf8'\n      )\n    }\n  }\n\n  const metadata = renderResult?.metadata || ampRenderResult?.metadata || {}\n  if (metadata.pageData) {\n    const dataFile = join(\n      pagesDataDir,\n      htmlFilename.replace(/\\.html$/, NEXT_DATA_SUFFIX)\n    )\n\n    await fileWriter(\n      ExportedPagesFiles.DATA,\n      dataFile,\n      JSON.stringify(metadata.pageData),\n      'utf8'\n    )\n\n    if (hybridAmp) {\n      await fileWriter(\n        ExportedPagesFiles.AMP_DATA,\n        dataFile.replace(/\\.json$/, '.amp.json'),\n        JSON.stringify(metadata.pageData),\n        'utf8'\n      )\n    }\n  }\n\n  if (!ssgNotFound) {\n    // don't attempt writing to disk if getStaticProps returned not found\n    await fileWriter(ExportedPagesFiles.HTML, htmlFilepath, html, 'utf8')\n  }\n\n  return {\n    ampValidations,\n    revalidate: metadata.revalidate ?? false,\n    ssgNotFound,\n  }\n}\n"],"names":["RenderResult","join","isInAmpMode","NEXT_DATA_SUFFIX","SERVER_PROPS_EXPORT_ERROR","isBailoutToCSRError","AmpHtmlValidator","FileType","fileExists","lazyRenderPagesPage","ExportedPagesFiles","exportPages","req","res","path","page","query","htmlFilepath","htmlFilename","ampPath","subFolders","outDir","ampValidatorPath","pagesDataDir","buildExport","isDynamic","hasOrigQueryValues","renderOpts","components","fileWriter","ampState","ampFirst","pageConfig","amp","hasQuery","Boolean","hybrid","inAmpMode","hybridAmp","getServerSideProps","Error","getStaticProps","endsWith","renderResult","Component","fromStatic","optimizeFonts","process","env","__NEXT_OPTIMIZE_FONTS","JSON","stringify","optimizeCss","__NEXT_OPTIMIZE_CSS","err","ssgNotFound","metadata","isNotFound","ampValidations","validateAmp","rawAmpHtml","ampPageName","validatorPath","validator","getInstance","result","validateString","errors","filter","e","severity","warnings","length","push","html","isNull","toUnchunkedString","ampRenderResult","ampSkipValidation","ampHtmlFilename","ampHtmlFilepath","exists","File","ampHtml","pageData","dataFile","replace","revalidate"],"mappings":"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"}