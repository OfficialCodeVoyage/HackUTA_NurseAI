{"version":3,"sources":["../../../src/client/components/headers.ts"],"sourcesContent":["import {\n  type ReadonlyRequestCookies,\n  RequestCookiesAdapter,\n} from '../../server/web/spec-extension/adapters/request-cookies'\nimport { HeadersAdapter } from '../../server/web/spec-extension/adapters/headers'\nimport { RequestCookies } from '../../server/web/spec-extension/cookies'\nimport { actionAsyncStorage } from './action-async-storage.external'\nimport { DraftMode } from './draft-mode'\nimport { trackDynamicDataAccessed } from '../../server/app-render/dynamic-rendering'\nimport { staticGenerationAsyncStorage } from './static-generation-async-storage.external'\nimport { getExpectedRequestStore } from './request-async-storage.external'\n\n/**\n * This function allows you to read the HTTP incoming request headers in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers) and\n * [Middleware](https://nextjs.org/docs/app/building-your-application/routing/middleware).\n *\n * Read more: [Next.js Docs: `headers`](https://nextjs.org/docs/app/api-reference/functions/headers)\n */\nexport function headers() {\n  const callingExpression = 'headers'\n  const staticGenerationStore = staticGenerationAsyncStorage.getStore()\n\n  if (staticGenerationStore) {\n    if (staticGenerationStore.forceStatic) {\n      // When we are forcing static we don't mark this as a Dynamic read and we return an empty headers object\n      return HeadersAdapter.seal(new Headers({}))\n    } else {\n      // We will return a real headers object below so we mark this call as reading from a dynamic data source\n      trackDynamicDataAccessed(staticGenerationStore, callingExpression)\n    }\n  }\n\n  return getExpectedRequestStore(callingExpression).headers\n}\n\nexport function cookies() {\n  const callingExpression = 'cookies'\n  const staticGenerationStore = staticGenerationAsyncStorage.getStore()\n\n  if (staticGenerationStore) {\n    if (staticGenerationStore.forceStatic) {\n      // When we are forcing static we don't mark this as a Dynamic read and we return an empty cookies object\n      return RequestCookiesAdapter.seal(new RequestCookies(new Headers({})))\n    } else {\n      // We will return a real headers object below so we mark this call as reading from a dynamic data source\n      trackDynamicDataAccessed(staticGenerationStore, callingExpression)\n    }\n  }\n\n  const requestStore = getExpectedRequestStore(callingExpression)\n\n  const asyncActionStore = actionAsyncStorage.getStore()\n  if (asyncActionStore?.isAction || asyncActionStore?.isAppRoute) {\n    // We can't conditionally return different types here based on the context.\n    // To avoid confusion, we always return the readonly type here.\n    return requestStore.mutableCookies as unknown as ReadonlyRequestCookies\n  }\n\n  return requestStore.cookies\n}\n\nexport function draftMode() {\n  const callingExpression = 'draftMode'\n  const requestStore = getExpectedRequestStore(callingExpression)\n\n  return new DraftMode(requestStore.draftMode)\n}\n"],"names":["RequestCookiesAdapter","HeadersAdapter","RequestCookies","actionAsyncStorage","DraftMode","trackDynamicDataAccessed","staticGenerationAsyncStorage","getExpectedRequestStore","headers","callingExpression","staticGenerationStore","getStore","forceStatic","seal","Headers","cookies","requestStore","asyncActionStore","isAction","isAppRoute","mutableCookies","draftMode"],"mappings":"AAAA,SAEEA,qBAAqB,QAChB,2DAA0D;AACjE,SAASC,cAAc,QAAQ,mDAAkD;AACjF,SAASC,cAAc,QAAQ,0CAAyC;AACxE,SAASC,kBAAkB,QAAQ,kCAAiC;AACpE,SAASC,SAAS,QAAQ,eAAc;AACxC,SAASC,wBAAwB,QAAQ,4CAA2C;AACpF,SAASC,4BAA4B,QAAQ,6CAA4C;AACzF,SAASC,uBAAuB,QAAQ,mCAAkC;AAE1E;;;;;;;;CAQC,GACD,OAAO,SAASC;IACd,MAAMC,oBAAoB;IAC1B,MAAMC,wBAAwBJ,6BAA6BK,QAAQ;IAEnE,IAAID,uBAAuB;QACzB,IAAIA,sBAAsBE,WAAW,EAAE;YACrC,wGAAwG;YACxG,OAAOX,eAAeY,IAAI,CAAC,IAAIC,QAAQ,CAAC;QAC1C,OAAO;YACL,wGAAwG;YACxGT,yBAAyBK,uBAAuBD;QAClD;IACF;IAEA,OAAOF,wBAAwBE,mBAAmBD,OAAO;AAC3D;AAEA,OAAO,SAASO;IACd,MAAMN,oBAAoB;IAC1B,MAAMC,wBAAwBJ,6BAA6BK,QAAQ;IAEnE,IAAID,uBAAuB;QACzB,IAAIA,sBAAsBE,WAAW,EAAE;YACrC,wGAAwG;YACxG,OAAOZ,sBAAsBa,IAAI,CAAC,IAAIX,eAAe,IAAIY,QAAQ,CAAC;QACpE,OAAO;YACL,wGAAwG;YACxGT,yBAAyBK,uBAAuBD;QAClD;IACF;IAEA,MAAMO,eAAeT,wBAAwBE;IAE7C,MAAMQ,mBAAmBd,mBAAmBQ,QAAQ;IACpD,IAAIM,CAAAA,oCAAAA,iBAAkBC,QAAQ,MAAID,oCAAAA,iBAAkBE,UAAU,GAAE;QAC9D,2EAA2E;QAC3E,+DAA+D;QAC/D,OAAOH,aAAaI,cAAc;IACpC;IAEA,OAAOJ,aAAaD,OAAO;AAC7B;AAEA,OAAO,SAASM;IACd,MAAMZ,oBAAoB;IAC1B,MAAMO,eAAeT,wBAAwBE;IAE7C,OAAO,IAAIL,UAAUY,aAAaK,SAAS;AAC7C"}