{"version":3,"sources":["../../../src/client/components/not-found-boundary.tsx"],"sourcesContent":["'use client'\n\nimport React, { useContext } from 'react'\nimport { usePathname } from './navigation'\nimport { isNotFoundError } from './not-found'\nimport { warnOnce } from '../../shared/lib/utils/warn-once'\nimport { MissingSlotContext } from '../../shared/lib/app-router-context.shared-runtime'\n\ninterface NotFoundBoundaryProps {\n  notFound?: React.ReactNode\n  notFoundStyles?: React.ReactNode\n  asNotFound?: boolean\n  children: React.ReactNode\n  missingSlots?: Set<string>\n}\n\ninterface NotFoundErrorBoundaryProps extends NotFoundBoundaryProps {\n  pathname: string\n  missingSlots?: Set<string>\n}\n\ninterface NotFoundErrorBoundaryState {\n  notFoundTriggered: boolean\n  previousPathname: string\n}\n\nclass NotFoundErrorBoundary extends React.Component<\n  NotFoundErrorBoundaryProps,\n  NotFoundErrorBoundaryState\n> {\n  constructor(props: NotFoundErrorBoundaryProps) {\n    super(props)\n    this.state = {\n      notFoundTriggered: !!props.asNotFound,\n      previousPathname: props.pathname,\n    }\n  }\n\n  componentDidCatch(): void {\n    if (\n      process.env.NODE_ENV === 'development' &&\n      this.props.missingSlots &&\n      // A missing children slot is the typical not-found case, so no need to warn\n      !this.props.missingSlots.has('children')\n    ) {\n      let warningMessage =\n        'No default component was found for a parallel route rendered on this page. Falling back to nearest NotFound boundary.\\n' +\n        'Learn more: https://nextjs.org/docs/app/building-your-application/routing/parallel-routes#defaultjs\\n\\n'\n\n      if (this.props.missingSlots.size > 0) {\n        const formattedSlots = Array.from(this.props.missingSlots)\n          .sort((a, b) => a.localeCompare(b))\n          .map((slot) => `@${slot}`)\n          .join(', ')\n\n        warningMessage += 'Missing slots: ' + formattedSlots\n      }\n\n      warnOnce(warningMessage)\n    }\n  }\n\n  static getDerivedStateFromError(error: any) {\n    if (isNotFoundError(error)) {\n      return {\n        notFoundTriggered: true,\n      }\n    }\n    // Re-throw if error is not for 404\n    throw error\n  }\n\n  static getDerivedStateFromProps(\n    props: NotFoundErrorBoundaryProps,\n    state: NotFoundErrorBoundaryState\n  ): NotFoundErrorBoundaryState | null {\n    /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */\n    if (props.pathname !== state.previousPathname && state.notFoundTriggered) {\n      return {\n        notFoundTriggered: false,\n        previousPathname: props.pathname,\n      }\n    }\n    return {\n      notFoundTriggered: state.notFoundTriggered,\n      previousPathname: props.pathname,\n    }\n  }\n\n  render() {\n    if (this.state.notFoundTriggered) {\n      return (\n        <>\n          <meta name=\"robots\" content=\"noindex\" />\n          {process.env.NODE_ENV === 'development' && (\n            <meta name=\"next-error\" content=\"not-found\" />\n          )}\n          {this.props.notFoundStyles}\n          {this.props.notFound}\n        </>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport function NotFoundBoundary({\n  notFound,\n  notFoundStyles,\n  asNotFound,\n  children,\n}: NotFoundBoundaryProps) {\n  const pathname = usePathname()\n  const missingSlots = useContext(MissingSlotContext)\n  return notFound ? (\n    <NotFoundErrorBoundary\n      pathname={pathname}\n      notFound={notFound}\n      notFoundStyles={notFoundStyles}\n      asNotFound={asNotFound}\n      missingSlots={missingSlots}\n    >\n      {children}\n    </NotFoundErrorBoundary>\n  ) : (\n    <>{children}</>\n  )\n}\n"],"names":["React","useContext","usePathname","isNotFoundError","warnOnce","MissingSlotContext","NotFoundErrorBoundary","Component","componentDidCatch","process","env","NODE_ENV","props","missingSlots","has","warningMessage","size","formattedSlots","Array","from","sort","a","b","localeCompare","map","slot","join","getDerivedStateFromError","error","notFoundTriggered","getDerivedStateFromProps","state","pathname","previousPathname","render","meta","name","content","notFoundStyles","notFound","children","constructor","asNotFound","NotFoundBoundary"],"mappings":"AAAA;;AAEA,OAAOA,SAASC,UAAU,QAAQ,QAAO;AACzC,SAASC,WAAW,QAAQ,eAAc;AAC1C,SAASC,eAAe,QAAQ,cAAa;AAC7C,SAASC,QAAQ,QAAQ,mCAAkC;AAC3D,SAASC,kBAAkB,QAAQ,qDAAoD;AAoBvF,MAAMC,8BAA8BN,MAAMO,SAAS;IAYjDC,oBAA0B;QACxB,IACEC,QAAQC,GAAG,CAACC,QAAQ,KAAK,iBACzB,IAAI,CAACC,KAAK,CAACC,YAAY,IACvB,4EAA4E;QAC5E,CAAC,IAAI,CAACD,KAAK,CAACC,YAAY,CAACC,GAAG,CAAC,aAC7B;YACA,IAAIC,iBACF,4HACA;YAEF,IAAI,IAAI,CAACH,KAAK,CAACC,YAAY,CAACG,IAAI,GAAG,GAAG;gBACpC,MAAMC,iBAAiBC,MAAMC,IAAI,CAAC,IAAI,CAACP,KAAK,CAACC,YAAY,EACtDO,IAAI,CAAC,CAACC,GAAGC,IAAMD,EAAEE,aAAa,CAACD,IAC/BE,GAAG,CAAC,CAACC,OAAS,AAAC,MAAGA,MAClBC,IAAI,CAAC;gBAERX,kBAAkB,oBAAoBE;YACxC;YAEAb,SAASW;QACX;IACF;IAEA,OAAOY,yBAAyBC,KAAU,EAAE;QAC1C,IAAIzB,gBAAgByB,QAAQ;YAC1B,OAAO;gBACLC,mBAAmB;YACrB;QACF;QACA,mCAAmC;QACnC,MAAMD;IACR;IAEA,OAAOE,yBACLlB,KAAiC,EACjCmB,KAAiC,EACE;QACnC;;;;;KAKC,GACD,IAAInB,MAAMoB,QAAQ,KAAKD,MAAME,gBAAgB,IAAIF,MAAMF,iBAAiB,EAAE;YACxE,OAAO;gBACLA,mBAAmB;gBACnBI,kBAAkBrB,MAAMoB,QAAQ;YAClC;QACF;QACA,OAAO;YACLH,mBAAmBE,MAAMF,iBAAiB;YAC1CI,kBAAkBrB,MAAMoB,QAAQ;QAClC;IACF;IAEAE,SAAS;QACP,IAAI,IAAI,CAACH,KAAK,CAACF,iBAAiB,EAAE;YAChC,qBACE;;kCACE,KAACM;wBAAKC,MAAK;wBAASC,SAAQ;;oBAC3B5B,QAAQC,GAAG,CAACC,QAAQ,KAAK,+BACxB,KAACwB;wBAAKC,MAAK;wBAAaC,SAAQ;;oBAEjC,IAAI,CAACzB,KAAK,CAAC0B,cAAc;oBACzB,IAAI,CAAC1B,KAAK,CAAC2B,QAAQ;;;QAG1B;QAEA,OAAO,IAAI,CAAC3B,KAAK,CAAC4B,QAAQ;IAC5B;IA/EAC,YAAY7B,KAAiC,CAAE;QAC7C,KAAK,CAACA;QACN,IAAI,CAACmB,KAAK,GAAG;YACXF,mBAAmB,CAAC,CAACjB,MAAM8B,UAAU;YACrCT,kBAAkBrB,MAAMoB,QAAQ;QAClC;IACF;AA0EF;AAEA,OAAO,SAASW,iBAAiB,KAKT;IALS,IAAA,EAC/BJ,QAAQ,EACRD,cAAc,EACdI,UAAU,EACVF,QAAQ,EACc,GALS;IAM/B,MAAMR,WAAW9B;IACjB,MAAMW,eAAeZ,WAAWI;IAChC,OAAOkC,yBACL,KAACjC;QACC0B,UAAUA;QACVO,UAAUA;QACVD,gBAAgBA;QAChBI,YAAYA;QACZ7B,cAAcA;kBAEb2B;uBAGH;kBAAGA;;AAEP"}