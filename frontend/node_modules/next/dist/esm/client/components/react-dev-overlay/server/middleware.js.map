{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/server/middleware.ts"],"sourcesContent":["import { constants as FS, promises as fs } from 'fs'\nimport path from 'path'\nimport { SourceMapConsumer } from 'next/dist/compiled/source-map08'\nimport type { StackFrame } from 'next/dist/compiled/stacktrace-parser'\nimport { getRawSourceMap } from '../internal/helpers/getRawSourceMap'\nimport { launchEditor } from '../internal/helpers/launchEditor'\nimport {\n  badRequest,\n  findSourcePackage,\n  getOriginalCodeFrame,\n  internalServerError,\n  json,\n  noContent,\n  type OriginalStackFrameResponse,\n} from './shared'\nexport { getServerError } from '../internal/helpers/nodeStackFrames'\nexport { parseStack } from '../internal/helpers/parseStack'\n\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type webpack from 'webpack'\n\ntype Source = { map: () => any } | null\n\nfunction getModuleId(compilation: any, module: any) {\n  return compilation.chunkGraph.getModuleId(module)\n}\n\nfunction getModuleById(\n  id: string | undefined,\n  compilation: webpack.Compilation\n) {\n  return [...compilation.modules].find(\n    (searchModule) => getModuleId(compilation, searchModule) === id\n  )\n}\n\nfunction findModuleNotFoundFromError(errorMessage: string | undefined) {\n  return errorMessage?.match(/'([^']+)' module/)?.[1]\n}\n\nfunction getModuleSource(compilation: any, module: any): any {\n  if (!module) return null\n  return (\n    compilation.codeGenerationResults.get(module)?.sources.get('javascript') ??\n    null\n  )\n}\n\nfunction getSourcePath(source: string) {\n  return source.replace(/^(webpack:\\/\\/\\/|webpack:\\/\\/|webpack:\\/\\/_N_E\\/)/, '')\n}\n\nasync function findOriginalSourcePositionAndContent(\n  webpackSource: any,\n  position: { line: number; column: number | null }\n) {\n  const consumer = await new SourceMapConsumer(webpackSource.map())\n  try {\n    const sourcePosition = consumer.originalPositionFor({\n      line: position.line,\n      column: position.column ?? 0,\n    })\n\n    if (!sourcePosition.source) {\n      return null\n    }\n\n    const sourceContent: string | null =\n      consumer.sourceContentFor(\n        sourcePosition.source,\n        /* returnNullOnMissing */ true\n      ) ?? null\n\n    return {\n      sourcePosition,\n      sourceContent,\n    }\n  } finally {\n    consumer.destroy()\n  }\n}\n\nfunction findOriginalSourcePositionAndContentFromCompilation(\n  moduleId: string | undefined,\n  importedModule: string,\n  compilation: webpack.Compilation\n) {\n  const module = getModuleById(moduleId, compilation)\n  return module?.buildInfo?.importLocByPath?.get(importedModule) ?? null\n}\n\nexport async function createOriginalStackFrame({\n  source,\n  moduleId,\n  modulePath,\n  rootDirectory,\n  frame,\n  errorMessage,\n  compilation,\n}: {\n  source: any\n  moduleId?: string\n  modulePath?: string\n  rootDirectory: string\n  frame: StackFrame\n  errorMessage?: string\n  compilation?: webpack.Compilation\n}): Promise<OriginalStackFrameResponse | null> {\n  const { lineNumber, column } = frame\n  const moduleNotFound = findModuleNotFoundFromError(errorMessage)\n  const result = await (async () => {\n    if (moduleNotFound) {\n      if (!compilation) return null\n\n      return findOriginalSourcePositionAndContentFromCompilation(\n        moduleId,\n        moduleNotFound,\n        compilation\n      )\n    }\n    // This returns 1-based lines and 0-based columns\n    return await findOriginalSourcePositionAndContent(source, {\n      line: lineNumber ?? 1,\n      column,\n    })\n  })()\n\n  if (!result?.sourcePosition.source) return null\n\n  const { sourcePosition, sourceContent } = result\n\n  const filePath = path.resolve(\n    rootDirectory,\n    getSourcePath(\n      // When sourcePosition.source is the loader path the modulePath is generally better.\n      (sourcePosition.source.includes('|')\n        ? modulePath\n        : sourcePosition.source) || modulePath\n    )\n  )\n\n  const traced = {\n    file: sourceContent\n      ? path.relative(rootDirectory, filePath)\n      : sourcePosition.source,\n    lineNumber: sourcePosition.line,\n    column: (sourcePosition.column ?? 0) + 1,\n    methodName:\n      sourcePosition.name ||\n      // default is not a valid identifier in JS so webpack uses a custom variable when it's an unnamed default export\n      // Resolve it back to `default` for the method name if the source position didn't have the method.\n      frame.methodName\n        ?.replace('__WEBPACK_DEFAULT_EXPORT__', 'default')\n        ?.replace('__webpack_exports__.', ''),\n    arguments: [],\n  } satisfies StackFrame\n\n  return {\n    originalStackFrame: traced,\n    originalCodeFrame: getOriginalCodeFrame(traced, sourceContent),\n    sourcePackage: findSourcePackage(traced),\n  }\n}\n\nexport async function getSourceById(\n  isFile: boolean,\n  id: string,\n  compilation?: webpack.Compilation\n): Promise<Source> {\n  if (isFile) {\n    const fileContent: string | null = await fs\n      .readFile(id, 'utf-8')\n      .catch(() => null)\n\n    if (fileContent == null) {\n      return null\n    }\n\n    const map = getRawSourceMap(fileContent)\n    if (map == null) {\n      return null\n    }\n\n    return {\n      map() {\n        return map\n      },\n    }\n  }\n\n  try {\n    if (!compilation) {\n      return null\n    }\n\n    const module = getModuleById(id, compilation)\n    const moduleSource = getModuleSource(compilation, module)\n    return moduleSource\n  } catch (err) {\n    console.error(`Failed to lookup module by ID (\"${id}\"):`, err)\n    return null\n  }\n}\n\nexport function getOverlayMiddleware(options: {\n  rootDirectory: string\n  stats(): webpack.Stats | null\n  serverStats(): webpack.Stats | null\n  edgeServerStats(): webpack.Stats | null\n}) {\n  return async function (\n    req: IncomingMessage,\n    res: ServerResponse,\n    next: Function\n  ) {\n    const { pathname, searchParams } = new URL(`http://n${req.url}`)\n\n    const frame = {\n      file: searchParams.get('file') as string,\n      methodName: searchParams.get('methodName') as string,\n      lineNumber: parseInt(searchParams.get('lineNumber') ?? '0', 10) || 0,\n      column: parseInt(searchParams.get('column') ?? '0', 10) || 0,\n      arguments: searchParams.getAll('arguments').filter(Boolean),\n    } satisfies StackFrame\n\n    const isServer = searchParams.get('isServer') === 'true'\n    const isEdgeServer = searchParams.get('isEdgeServer') === 'true'\n    const isAppDirectory = searchParams.get('isAppDirectory') === 'true'\n\n    if (pathname === '/__nextjs_original-stack-frame') {\n      const isClient = !isServer && !isEdgeServer\n\n      let sourcePackage = findSourcePackage(frame)\n\n      if (\n        !(\n          /^(webpack-internal:\\/\\/\\/|(file|webpack):\\/\\/)/.test(frame.file) &&\n          frame.lineNumber\n        )\n      ) {\n        if (sourcePackage) return json(res, { sourcePackage })\n        return badRequest(res)\n      }\n\n      const moduleId: string = frame.file.replace(\n        /^(webpack-internal:\\/\\/\\/|file:\\/\\/|webpack:\\/\\/(_N_E\\/)?)/,\n        ''\n      )\n      const modulePath = frame.file.replace(\n        /^(webpack-internal:\\/\\/\\/|file:\\/\\/|webpack:\\/\\/(_N_E\\/)?)(\\(.*\\)\\/?)/,\n        ''\n      )\n\n      let source: Source = null\n\n      let compilation: webpack.Compilation | undefined\n\n      const isFile = frame.file.startsWith('file:')\n\n      try {\n        if (isClient || isAppDirectory) {\n          compilation = options.stats()?.compilation\n          // Try Client Compilation first\n          // In `pages` we leverage `isClientError` to check\n          // In `app` it depends on if it's a server / client component and when the code throws. E.g. during HTML rendering it's the server/edge compilation.\n          source = await getSourceById(isFile, moduleId, compilation)\n        }\n        // Try Server Compilation\n        // In `pages` this could be something imported in getServerSideProps/getStaticProps as the code for those is tree-shaken.\n        // In `app` this finds server components and code that was imported from a server component. It also covers when client component code throws during HTML rendering.\n        if ((isServer || isAppDirectory) && source === null) {\n          compilation = options.serverStats()?.compilation\n          source = await getSourceById(isFile, moduleId, compilation)\n        }\n        // Try Edge Server Compilation\n        // Both cases are the same as Server Compilation, main difference is that it covers `runtime: 'edge'` pages/app routes.\n        if ((isEdgeServer || isAppDirectory) && source === null) {\n          compilation = options.edgeServerStats()?.compilation\n          source = await getSourceById(isFile, moduleId, compilation)\n        }\n      } catch (err) {\n        console.log('Failed to get source map:', err)\n        return internalServerError(res)\n      }\n\n      if (!source) {\n        if (sourcePackage) return json(res, { sourcePackage })\n        return noContent(res)\n      }\n\n      try {\n        const originalStackFrameResponse = await createOriginalStackFrame({\n          frame,\n          source,\n          moduleId,\n          modulePath,\n          rootDirectory: options.rootDirectory,\n          compilation,\n        })\n\n        if (originalStackFrameResponse === null) {\n          if (sourcePackage) return json(res, { sourcePackage })\n          return noContent(res)\n        }\n\n        return json(res, originalStackFrameResponse)\n      } catch (err) {\n        console.log('Failed to parse source map:', err)\n        return internalServerError(res)\n      }\n    } else if (pathname === '/__nextjs_launch-editor') {\n      if (!frame.file) return badRequest(res)\n\n      // frame files may start with their webpack layer, like (middleware)/middleware.js\n      const filePath = path.resolve(\n        options.rootDirectory,\n        frame.file.replace(/^\\([^)]+\\)\\//, '')\n      )\n      const fileExists = await fs.access(filePath, FS.F_OK).then(\n        () => true,\n        () => false\n      )\n      if (!fileExists) return noContent(res)\n\n      try {\n        await launchEditor(filePath, frame.lineNumber, frame.column ?? 1)\n      } catch (err) {\n        console.log('Failed to launch editor:', err)\n        return internalServerError(res)\n      }\n\n      return noContent(res)\n    }\n    return next()\n  }\n}\n"],"names":["constants","FS","promises","fs","path","SourceMapConsumer","getRawSourceMap","launchEditor","badRequest","findSourcePackage","getOriginalCodeFrame","internalServerError","json","noContent","getServerError","parseStack","getModuleId","compilation","module","chunkGraph","getModuleById","id","modules","find","searchModule","findModuleNotFoundFromError","errorMessage","match","getModuleSource","codeGenerationResults","get","sources","getSourcePath","source","replace","findOriginalSourcePositionAndContent","webpackSource","position","consumer","map","sourcePosition","originalPositionFor","line","column","sourceContent","sourceContentFor","destroy","findOriginalSourcePositionAndContentFromCompilation","moduleId","importedModule","buildInfo","importLocByPath","createOriginalStackFrame","modulePath","rootDirectory","frame","lineNumber","moduleNotFound","result","filePath","resolve","includes","traced","file","relative","methodName","name","arguments","originalStackFrame","originalCodeFrame","sourcePackage","getSourceById","isFile","fileContent","readFile","catch","moduleSource","err","console","error","getOverlayMiddleware","options","req","res","next","pathname","searchParams","URL","url","parseInt","getAll","filter","Boolean","isServer","isEdgeServer","isAppDirectory","isClient","test","startsWith","stats","serverStats","edgeServerStats","log","originalStackFrameResponse","fileExists","access","F_OK","then"],"mappings":"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"}