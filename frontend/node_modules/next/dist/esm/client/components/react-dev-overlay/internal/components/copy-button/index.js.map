{"version":3,"sources":["../../../../../../../src/client/components/react-dev-overlay/internal/components/copy-button/index.tsx"],"sourcesContent":["import * as React from 'react'\n\ntype CopyState =\n  | {\n      state: 'initial'\n    }\n  | {\n      state: 'error'\n      error: unknown\n    }\n  | { state: 'success' }\n\nexport function CopyButton({\n  actionLabel,\n  successLabel,\n  content,\n  ...props\n}: React.HTMLProps<HTMLButtonElement> & {\n  actionLabel: string\n  successLabel: string\n  content: string\n}) {\n  const [copyState, dispatch, isPending] = React.useActionState(\n    (\n      state: CopyState,\n      action: 'reset' | 'copy'\n    ): CopyState | Promise<CopyState> => {\n      if (action === 'reset') {\n        return { state: 'initial' }\n      }\n      if (action === 'copy') {\n        if (!navigator.clipboard) {\n          return {\n            state: 'error',\n            error: new Error(\n              'Copy to clipboard is not supported in this browser'\n            ),\n          }\n        }\n        return navigator.clipboard.writeText(content).then(\n          () => {\n            return { state: 'success' }\n          },\n          (error) => {\n            return { state: 'error', error }\n          }\n        )\n      }\n      return state\n    },\n    {\n      state: 'initial',\n    }\n  )\n\n  const error = copyState.state === 'error' ? copyState.error : null\n  React.useEffect(() => {\n    if (error !== null) {\n      // Additional console.error to get the stack.\n      console.error(error)\n    }\n  }, [error])\n  React.useEffect(() => {\n    if (copyState.state === 'success') {\n      const timeoutId = setTimeout(() => {\n        dispatch('reset')\n      }, 2000)\n\n      return () => {\n        clearTimeout(timeoutId)\n      }\n    }\n  }, [\n    isPending,\n    copyState.state,\n    // TODO: `dispatch` from `useActionState` is not reactive.\n    // Remove from dependencies once https://github.com/facebook/react/pull/29665 is released.\n    dispatch,\n  ])\n  const isDisabled = isPending\n  const label = copyState.state === 'success' ? successLabel : actionLabel\n  const title = label\n  const icon =\n    copyState.state === 'success' ? <CopySuccessIcon /> : <CopyIcon />\n\n  return (\n    <button\n      {...props}\n      type=\"button\"\n      title={title}\n      aria-label={label}\n      aria-disabled={isDisabled}\n      data-nextjs-data-runtime-error-copy-stack\n      className={`nextjs-data-runtime-error-copy-stack nextjs-data-runtime-error-copy-stack--${copyState.state}`}\n      onClick={() => {\n        if (!isDisabled) {\n          React.startTransition(() => {\n            dispatch('copy')\n          })\n        }\n      }}\n    >\n      {icon}\n      {copyState.state === 'error' ? ` ${copyState.error}` : null}\n    </button>\n  )\n}\n\nfunction CopyIcon() {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"transparent\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <rect width=\"14\" height=\"14\" x=\"8\" y=\"8\" rx=\"2\" ry=\"2\" />\n      <path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\" />\n    </svg>\n  )\n}\n\nfunction CopySuccessIcon() {\n  return (\n    <svg\n      height=\"16\"\n      xlinkTitle=\"copied\"\n      viewBox=\"0 0 16 16\"\n      width=\"16\"\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\" />\n    </svg>\n  )\n}\n"],"names":["React","CopyButton","actionLabel","successLabel","content","props","copyState","dispatch","isPending","useActionState","state","action","navigator","clipboard","error","Error","writeText","then","useEffect","console","timeoutId","setTimeout","clearTimeout","isDisabled","label","title","icon","CopySuccessIcon","CopyIcon","button","type","aria-label","aria-disabled","data-nextjs-data-runtime-error-copy-stack","className","onClick","startTransition","svg","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","rect","x","y","rx","ry","path","d","xlinkTitle"],"mappings":";AAAA,YAAYA,WAAW,QAAO;AAY9B,OAAO,SAASC,WAAW,KAS1B;IAT0B,IAAA,EACzBC,WAAW,EACXC,YAAY,EACZC,OAAO,EACP,GAAGC,OAKJ,GAT0B;IAUzB,MAAM,CAACC,WAAWC,UAAUC,UAAU,GAAGR,MAAMS,cAAc,CAC3D,CACEC,OACAC;QAEA,IAAIA,WAAW,SAAS;YACtB,OAAO;gBAAED,OAAO;YAAU;QAC5B;QACA,IAAIC,WAAW,QAAQ;YACrB,IAAI,CAACC,UAAUC,SAAS,EAAE;gBACxB,OAAO;oBACLH,OAAO;oBACPI,OAAO,IAAIC,MACT;gBAEJ;YACF;YACA,OAAOH,UAAUC,SAAS,CAACG,SAAS,CAACZ,SAASa,IAAI,CAChD;gBACE,OAAO;oBAAEP,OAAO;gBAAU;YAC5B,GACA,CAACI;gBACC,OAAO;oBAAEJ,OAAO;oBAASI;gBAAM;YACjC;QAEJ;QACA,OAAOJ;IACT,GACA;QACEA,OAAO;IACT;IAGF,MAAMI,QAAQR,UAAUI,KAAK,KAAK,UAAUJ,UAAUQ,KAAK,GAAG;IAC9Dd,MAAMkB,SAAS,CAAC;QACd,IAAIJ,UAAU,MAAM;YAClB,6CAA6C;YAC7CK,QAAQL,KAAK,CAACA;QAChB;IACF,GAAG;QAACA;KAAM;IACVd,MAAMkB,SAAS,CAAC;QACd,IAAIZ,UAAUI,KAAK,KAAK,WAAW;YACjC,MAAMU,YAAYC,WAAW;gBAC3Bd,SAAS;YACX,GAAG;YAEH,OAAO;gBACLe,aAAaF;YACf;QACF;IACF,GAAG;QACDZ;QACAF,UAAUI,KAAK;QACf,0DAA0D;QAC1D,0FAA0F;QAC1FH;KACD;IACD,MAAMgB,aAAaf;IACnB,MAAMgB,QAAQlB,UAAUI,KAAK,KAAK,YAAYP,eAAeD;IAC7D,MAAMuB,QAAQD;IACd,MAAME,OACJpB,UAAUI,KAAK,KAAK,0BAAY,KAACiB,qCAAqB,KAACC;IAEzD,qBACE,MAACC;QACE,GAAGxB,KAAK;QACTyB,MAAK;QACLL,OAAOA;QACPM,cAAYP;QACZQ,iBAAeT;QACfU,2CAAyC;QACzCC,WAAW,AAAC,gFAA6E5B,UAAUI,KAAK;QACxGyB,SAAS;YACP,IAAI,CAACZ,YAAY;gBACfvB,MAAMoC,eAAe,CAAC;oBACpB7B,SAAS;gBACX;YACF;QACF;;YAECmB;YACApB,UAAUI,KAAK,KAAK,UAAU,AAAC,MAAGJ,UAAUQ,KAAK,GAAK;;;AAG7D;AAEA,SAASc;IACP,qBACE,MAACS;QACCC,OAAM;QACNC,QAAO;QACPC,SAAQ;QACRC,MAAK;QACLC,QAAO;QACPC,aAAY;QACZC,eAAc;QACdC,gBAAe;;0BAEf,KAACC;gBAAKR,OAAM;gBAAKC,QAAO;gBAAKQ,GAAE;gBAAIC,GAAE;gBAAIC,IAAG;gBAAIC,IAAG;;0BACnD,KAACC;gBAAKC,GAAE;;;;AAGd;AAEA,SAASzB;IACP,qBACE,KAACU;QACCE,QAAO;QACPc,YAAW;QACXb,SAAQ;QACRF,OAAM;QACNI,QAAO;QACPD,MAAK;kBAEL,cAAA,KAACU;YAAKC,GAAE;;;AAGd"}