{"version":3,"sources":["../../src/client/link.tsx"],"sourcesContent":["'use client'\n\nimport type {\n  NextRouter,\n  PrefetchOptions as RouterPrefetchOptions,\n} from '../shared/lib/router/router'\n\nimport React from 'react'\nimport type { UrlObject } from 'url'\nimport { resolveHref } from './resolve-href'\nimport { isLocalURL } from '../shared/lib/router/utils/is-local-url'\nimport { formatUrl } from '../shared/lib/router/utils/format-url'\nimport { isAbsoluteUrl } from '../shared/lib/utils'\nimport { addLocale } from './add-locale'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\nimport { AppRouterContext } from '../shared/lib/app-router-context.shared-runtime'\nimport type {\n  AppRouterInstance,\n  PrefetchOptions as AppRouterPrefetchOptions,\n} from '../shared/lib/app-router-context.shared-runtime'\nimport { useIntersection } from './use-intersection'\nimport { getDomainLocale } from './get-domain-locale'\nimport { addBasePath } from './add-base-path'\nimport { PrefetchKind } from './components/router-reducer/router-reducer-types'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype InternalLinkProps = {\n  /**\n   * The path or URL to navigate to. It can also be an object.\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#with-url-object\n   */\n  href: Url\n  /**\n   * Optional decorator for the path that will be shown in the browser URL bar. Before Next.js 9.5.3 this was used for dynamic routes, check our [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes) to see how it worked. Note: when this path differs from the one provided in `href` the previous `href`/`as` behavior is used as shown in the [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes).\n   */\n  as?: Url\n  /**\n   * Replace the current `history` state instead of adding a new url into the stack.\n   *\n   * @defaultValue `false`\n   */\n  replace?: boolean\n  /**\n   * Whether to override the default scroll behavior\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#disable-scrolling-to-the-top-of-the-page\n   *\n   * @defaultValue `true`\n   */\n  scroll?: boolean\n  /**\n   * Update the path of the current page without rerunning [`getStaticProps`](/docs/pages/building-your-application/data-fetching/get-static-props), [`getServerSideProps`](/docs/pages/building-your-application/data-fetching/get-server-side-props) or [`getInitialProps`](/docs/pages/api-reference/functions/get-initial-props).\n   *\n   * @defaultValue `false`\n   */\n  shallow?: boolean\n  /**\n   * Forces `Link` to send the `href` property to its child.\n   *\n   * @defaultValue `false`\n   */\n  passHref?: boolean\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be preloaded.\n   * Prefetch can be disabled by passing `prefetch={false}`. When `prefetch` is set to `false`, prefetching will still occur on hover in pages router but not in app router. Pages using [Static Generation](/docs/basic-features/data-fetching/get-static-props.md) will preload `JSON` files with the data for faster page transitions. Prefetching is only enabled in production.\n   *\n   * @defaultValue `true`\n   */\n  prefetch?: boolean\n  /**\n   * The active locale is automatically prepended. `locale` allows for providing a different locale.\n   * When `false` `href` has to include the locale as the default behavior is disabled.\n   */\n  locale?: string | false\n  /**\n   * Enable legacy link behavior.\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n  /**\n   * Optional event handler for when the mouse pointer is moved onto Link\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<InternalLinkProps>\n\nconst prefetched = new Set<string>()\n\ntype PrefetchOptions = RouterPrefetchOptions & {\n  /**\n   * bypassPrefetchedCheck will bypass the check to see if the `href` has\n   * already been fetched.\n   */\n  bypassPrefetchedCheck?: boolean\n}\n\nfunction prefetch(\n  router: NextRouter | AppRouterInstance,\n  href: string,\n  as: string,\n  options: PrefetchOptions,\n  appOptions: AppRouterPrefetchOptions,\n  isAppRouter: boolean\n): void {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n  if (!isAppRouter && !isLocalURL(href)) {\n    return\n  }\n\n  // We should only dedupe requests when experimental.optimisticClientCache is\n  // disabled.\n  if (!options.bypassPrefetchedCheck) {\n    const locale =\n      // Let the link's locale prop override the default router locale.\n      typeof options.locale !== 'undefined'\n        ? options.locale\n        : // Otherwise fallback to the router's locale.\n          'locale' in router\n          ? router.locale\n          : undefined\n\n    const prefetchedKey = href + '%' + as + '%' + locale\n\n    // If we've already fetched the key, then don't prefetch it again!\n    if (prefetched.has(prefetchedKey)) {\n      return\n    }\n\n    // Mark this URL as prefetched.\n    prefetched.add(prefetchedKey)\n  }\n\n  const doPrefetch = async () => {\n    if (isAppRouter) {\n      // note that `appRouter.prefetch()` is currently sync,\n      // so we have to wrap this call in an async function to be able to catch() errors below.\n      return (router as AppRouterInstance).prefetch(href, appOptions)\n    } else {\n      return (router as NextRouter).prefetch(href, as, options)\n    }\n  }\n\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  doPrefetch().catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter | AppRouterInstance,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean,\n  locale?: string | false,\n  isAppRouter?: boolean\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (\n    isAnchorNodeName &&\n    (isModifiedEvent(e) ||\n      // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n      (!isAppRouter && !isLocalURL(href)))\n  ) {\n    // ignore click for browserâ€™s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    // If the router is an NextRouter instance it will have `beforePopState`\n    const routerScroll = scroll ?? true\n    if ('beforePopState' in router) {\n      router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        locale,\n        scroll: routerScroll,\n      })\n    } else {\n      router[replace ? 'replace' : 'push'](as || href, {\n        scroll: routerScroll,\n      })\n    }\n  }\n\n  if (isAppRouter) {\n    React.startTransition(navigate)\n  } else {\n    navigate()\n  }\n}\n\ntype LinkPropsReal = React.PropsWithChildren<\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof LinkProps> &\n    LinkProps\n>\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation between routes.\n *\n * It is the primary way to navigate between routes in Next.js.\n *\n * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)\n */\nconst Link = React.forwardRef<HTMLAnchorElement, LinkPropsReal>(\n  function LinkComponent(props, forwardedRef) {\n    let children: React.ReactNode\n\n    const {\n      href: hrefProp,\n      as: asProp,\n      children: childrenProp,\n      prefetch: prefetchProp = null,\n      passHref,\n      replace,\n      shallow,\n      scroll,\n      locale,\n      onClick,\n      onMouseEnter: onMouseEnterProp,\n      onTouchStart: onTouchStartProp,\n      legacyBehavior = false,\n      ...restProps\n    } = props\n\n    children = childrenProp\n\n    if (\n      legacyBehavior &&\n      (typeof children === 'string' || typeof children === 'number')\n    ) {\n      children = <a>{children}</a>\n    }\n\n    const pagesRouter = React.useContext(RouterContext)\n    const appRouter = React.useContext(AppRouterContext)\n    const router = pagesRouter ?? appRouter\n\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter\n\n    const prefetchEnabled = prefetchProp !== false\n    /**\n     * The possible states for prefetch are:\n     * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n     * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n     * - false: we will not prefetch if in the viewport at all\n     */\n    const appPrefetchKind =\n      prefetchProp === null ? PrefetchKind.AUTO : PrefetchKind.FULL\n\n    if (process.env.NODE_ENV !== 'production') {\n      function createPropError(args: {\n        key: string\n        expected: string\n        actual: string\n      }) {\n        return new Error(\n          `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n            (typeof window !== 'undefined'\n              ? \"\\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n\n      // TypeScript trick for type-guarding:\n      const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n        href: true,\n      } as const\n      const requiredProps: LinkPropsRequired[] = Object.keys(\n        requiredPropsGuard\n      ) as LinkPropsRequired[]\n      requiredProps.forEach((key: LinkPropsRequired) => {\n        if (key === 'href') {\n          if (\n            props[key] == null ||\n            (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n          ) {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: props[key] === null ? 'null' : typeof props[key],\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n\n      // TypeScript trick for type-guarding:\n      const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n        as: true,\n        replace: true,\n        scroll: true,\n        shallow: true,\n        passHref: true,\n        prefetch: true,\n        locale: true,\n        onClick: true,\n        onMouseEnter: true,\n        onTouchStart: true,\n        legacyBehavior: true,\n      } as const\n      const optionalProps: LinkPropsOptional[] = Object.keys(\n        optionalPropsGuard\n      ) as LinkPropsOptional[]\n      optionalProps.forEach((key: LinkPropsOptional) => {\n        const valType = typeof props[key]\n\n        if (key === 'as') {\n          if (props[key] && valType !== 'string' && valType !== 'object') {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: valType,\n            })\n          }\n        } else if (key === 'locale') {\n          if (props[key] && valType !== 'string') {\n            throw createPropError({\n              key,\n              expected: '`string`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'onClick' ||\n          key === 'onMouseEnter' ||\n          key === 'onTouchStart'\n        ) {\n          if (props[key] && valType !== 'function') {\n            throw createPropError({\n              key,\n              expected: '`function`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'replace' ||\n          key === 'scroll' ||\n          key === 'shallow' ||\n          key === 'passHref' ||\n          key === 'prefetch' ||\n          key === 'legacyBehavior'\n        ) {\n          if (props[key] != null && valType !== 'boolean') {\n            throw createPropError({\n              key,\n              expected: '`boolean`',\n              actual: valType,\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n\n      // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const hasWarned = React.useRef(false)\n      if (props.prefetch && !hasWarned.current && !isAppRouter) {\n        hasWarned.current = true\n        console.warn(\n          'Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated'\n        )\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isAppRouter && !asProp) {\n        let href: string | undefined\n        if (typeof hrefProp === 'string') {\n          href = hrefProp\n        } else if (\n          typeof hrefProp === 'object' &&\n          typeof hrefProp.pathname === 'string'\n        ) {\n          href = hrefProp.pathname\n        }\n\n        if (href) {\n          const hasDynamicSegment = href\n            .split('/')\n            .some((segment) => segment.startsWith('[') && segment.endsWith(']'))\n\n          if (hasDynamicSegment) {\n            throw new Error(\n              `Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`\n            )\n          }\n        }\n      }\n    }\n\n    const { href, as } = React.useMemo(() => {\n      if (!pagesRouter) {\n        const resolvedHref = formatStringOrUrl(hrefProp)\n        return {\n          href: resolvedHref,\n          as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n        }\n      }\n\n      const [resolvedHref, resolvedAs] = resolveHref(\n        pagesRouter,\n        hrefProp,\n        true\n      )\n\n      return {\n        href: resolvedHref,\n        as: asProp\n          ? resolveHref(pagesRouter, asProp)\n          : resolvedAs || resolvedHref,\n      }\n    }, [pagesRouter, hrefProp, asProp])\n\n    const previousHref = React.useRef<string>(href)\n    const previousAs = React.useRef<string>(as)\n\n    // This will return the first child, if multiple are provided it will throw an error\n    let child: any\n    if (legacyBehavior) {\n      if (process.env.NODE_ENV === 'development') {\n        if (onClick) {\n          console.warn(\n            `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n          )\n        }\n        if (onMouseEnterProp) {\n          console.warn(\n            `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n          )\n        }\n        try {\n          child = React.Children.only(children)\n        } catch (err) {\n          if (!children) {\n            throw new Error(\n              `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n            )\n          }\n          throw new Error(\n            `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n              (typeof window !== 'undefined'\n                ? \" \\nOpen your browser's console to view the Component stack trace.\"\n                : '')\n          )\n        }\n      } else {\n        child = React.Children.only(children)\n      }\n    } else {\n      if (process.env.NODE_ENV === 'development') {\n        if ((children as any)?.type === 'a') {\n          throw new Error(\n            'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n          )\n        }\n      }\n    }\n\n    const childRef: any = legacyBehavior\n      ? child && typeof child === 'object' && child.ref\n      : forwardedRef\n\n    const [setIntersectionRef, isVisible, resetVisible] = useIntersection({\n      rootMargin: '200px',\n    })\n\n    const setRef = React.useCallback(\n      (el: Element) => {\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n          resetVisible()\n          previousAs.current = as\n          previousHref.current = href\n        }\n\n        setIntersectionRef(el)\n        if (childRef) {\n          if (typeof childRef === 'function') childRef(el)\n          else if (typeof childRef === 'object') {\n            childRef.current = el\n          }\n        }\n      },\n      [as, childRef, href, resetVisible, setIntersectionRef]\n    )\n\n    // Prefetch the URL if we haven't already and it's visible.\n    React.useEffect(() => {\n      // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n      if (process.env.NODE_ENV !== 'production') {\n        return\n      }\n\n      if (!router) {\n        return\n      }\n\n      // If we don't need to prefetch the URL, don't do prefetch.\n      if (!isVisible || !prefetchEnabled) {\n        return\n      }\n\n      // Prefetch the URL.\n      prefetch(\n        router,\n        href,\n        as,\n        { locale },\n        {\n          kind: appPrefetchKind,\n        },\n        isAppRouter\n      )\n    }, [\n      as,\n      href,\n      isVisible,\n      locale,\n      prefetchEnabled,\n      pagesRouter?.locale,\n      router,\n      isAppRouter,\n      appPrefetchKind,\n    ])\n\n    const childProps: {\n      onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n      onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n      onClick: React.MouseEventHandler<HTMLAnchorElement>\n      href?: string\n      ref?: any\n    } = {\n      ref: setRef,\n      onClick(e) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!e) {\n            throw new Error(\n              `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n            )\n          }\n        }\n\n        if (!legacyBehavior && typeof onClick === 'function') {\n          onClick(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onClick === 'function'\n        ) {\n          child.props.onClick(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        if (e.defaultPrevented) {\n          return\n        }\n\n        linkClicked(\n          e,\n          router,\n          href,\n          as,\n          replace,\n          shallow,\n          scroll,\n          locale,\n          isAppRouter\n        )\n      },\n      onMouseEnter(e) {\n        if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n          onMouseEnterProp(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onMouseEnter === 'function'\n        ) {\n          child.props.onMouseEnter(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        if (\n          (!prefetchEnabled || process.env.NODE_ENV === 'development') &&\n          isAppRouter\n        ) {\n          return\n        }\n\n        prefetch(\n          router,\n          href,\n          as,\n          {\n            locale,\n            priority: true,\n            // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n            bypassPrefetchedCheck: true,\n          },\n          {\n            kind: appPrefetchKind,\n          },\n          isAppRouter\n        )\n      },\n      onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n        ? undefined\n        : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n              onTouchStartProp(e)\n            }\n\n            if (\n              legacyBehavior &&\n              child.props &&\n              typeof child.props.onTouchStart === 'function'\n            ) {\n              child.props.onTouchStart(e)\n            }\n\n            if (!router) {\n              return\n            }\n\n            if (!prefetchEnabled && isAppRouter) {\n              return\n            }\n\n            prefetch(\n              router,\n              href,\n              as,\n              {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true,\n              },\n              {\n                kind: appPrefetchKind,\n              },\n              isAppRouter\n            )\n          },\n    }\n\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n    if (isAbsoluteUrl(as)) {\n      childProps.href = as\n    } else if (\n      !legacyBehavior ||\n      passHref ||\n      (child.type === 'a' && !('href' in child.props))\n    ) {\n      const curLocale =\n        typeof locale !== 'undefined' ? locale : pagesRouter?.locale\n\n      // we only render domain locales if we are currently on a domain locale\n      // so that locale links are still visitable in development/preview envs\n      const localeDomain =\n        pagesRouter?.isLocaleDomain &&\n        getDomainLocale(\n          as,\n          curLocale,\n          pagesRouter?.locales,\n          pagesRouter?.domainLocales\n        )\n\n      childProps.href =\n        localeDomain ||\n        addBasePath(addLocale(as, curLocale, pagesRouter?.defaultLocale))\n    }\n\n    return legacyBehavior ? (\n      React.cloneElement(child, childProps)\n    ) : (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n)\n\nexport default Link\n"],"names":["React","resolveHref","isLocalURL","formatUrl","isAbsoluteUrl","addLocale","RouterContext","AppRouterContext","useIntersection","getDomainLocale","addBasePath","PrefetchKind","prefetched","Set","prefetch","router","href","as","options","appOptions","isAppRouter","window","bypassPrefetchedCheck","locale","undefined","prefetchedKey","has","add","doPrefetch","catch","err","process","env","NODE_ENV","isModifiedEvent","event","eventTarget","currentTarget","target","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","linkClicked","e","replace","shallow","scroll","nodeName","isAnchorNodeName","toUpperCase","preventDefault","navigate","routerScroll","startTransition","formatStringOrUrl","urlObjOrString","Link","forwardRef","LinkComponent","props","forwardedRef","children","hrefProp","asProp","childrenProp","prefetchProp","passHref","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","restProps","a","pagesRouter","useContext","appRouter","prefetchEnabled","appPrefetchKind","AUTO","FULL","createPropError","args","Error","key","expected","actual","requiredPropsGuard","requiredProps","Object","keys","forEach","_","optionalPropsGuard","optionalProps","valType","hasWarned","useRef","current","console","warn","pathname","hasDynamicSegment","split","some","segment","startsWith","endsWith","useMemo","resolvedHref","resolvedAs","previousHref","previousAs","child","Children","only","type","childRef","ref","setIntersectionRef","isVisible","resetVisible","rootMargin","setRef","useCallback","el","useEffect","kind","childProps","defaultPrevented","priority","__NEXT_LINK_NO_TOUCH_START","curLocale","localeDomain","isLocaleDomain","locales","domainLocales","defaultLocale","cloneElement"],"mappings":"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"}