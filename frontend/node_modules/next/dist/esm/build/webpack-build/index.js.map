{"version":3,"sources":["../../../src/build/webpack-build/index.ts"],"sourcesContent":["import type { COMPILER_INDEXES } from '../../shared/lib/constants'\nimport * as Log from '../output/log'\nimport { NextBuildContext } from '../build-context'\nimport type { BuildTraceContext } from '../webpack/plugins/next-trace-entrypoints-plugin'\nimport { Worker } from 'next/dist/compiled/jest-worker'\nimport origDebug from 'next/dist/compiled/debug'\nimport type { ChildProcess } from 'child_process'\nimport path from 'path'\nimport { exportTraceState, recordTraceEvents } from '../../trace'\n\nconst debug = origDebug('next:build:webpack-build')\n\nconst ORDERED_COMPILER_NAMES = [\n  'server',\n  'edge-server',\n  'client',\n] as (keyof typeof COMPILER_INDEXES)[]\n\nlet pluginState: Record<any, any> = {}\n\nfunction deepMerge(target: any, source: any) {\n  const result = { ...target, ...source }\n  for (const key of Object.keys(result)) {\n    result[key] = Array.isArray(target[key])\n      ? (target[key] = [...target[key], ...(source[key] || [])])\n      : typeof target[key] == 'object' && typeof source[key] == 'object'\n        ? deepMerge(target[key], source[key])\n        : result[key]\n  }\n  return result\n}\n\nasync function webpackBuildWithWorker(\n  compilerNamesArg: typeof ORDERED_COMPILER_NAMES | null\n) {\n  const compilerNames = compilerNamesArg || ORDERED_COMPILER_NAMES\n  const { nextBuildSpan, ...prunedBuildContext } = NextBuildContext\n\n  prunedBuildContext.pluginState = pluginState\n\n  const getWorker = (compilerName: string) => {\n    const _worker = new Worker(path.join(__dirname, 'impl.js'), {\n      exposedMethods: ['workerMain'],\n      numWorkers: 1,\n      maxRetries: 0,\n      forkOptions: {\n        env: {\n          ...process.env,\n          NEXT_PRIVATE_BUILD_WORKER: '1',\n        },\n      },\n    }) as Worker & typeof import('./impl')\n    _worker.getStderr().pipe(process.stderr)\n    _worker.getStdout().pipe(process.stdout)\n\n    for (const worker of ((_worker as any)._workerPool?._workers || []) as {\n      _child: ChildProcess\n    }[]) {\n      worker._child.on('exit', (code, signal) => {\n        if (code || (signal && signal !== 'SIGINT')) {\n          debug(\n            `Compiler ${compilerName} unexpectedly exited with code: ${code} and signal: ${signal}`\n          )\n        }\n      })\n    }\n\n    return _worker\n  }\n\n  const combinedResult = {\n    duration: 0,\n    buildTraceContext: {} as BuildTraceContext,\n  }\n\n  for (const compilerName of compilerNames) {\n    const worker = getWorker(compilerName)\n\n    const curResult = await worker.workerMain({\n      buildContext: prunedBuildContext,\n      compilerName,\n      traceState: {\n        ...exportTraceState(),\n        defaultParentSpanId: nextBuildSpan?.getId(),\n        shouldSaveTraceEvents: true,\n      },\n    })\n    if (nextBuildSpan && curResult.debugTraceEvents) {\n      recordTraceEvents(curResult.debugTraceEvents)\n    }\n    // destroy worker so it's not sticking around using memory\n    await worker.end()\n\n    // Update plugin state\n    pluginState = deepMerge(pluginState, curResult.pluginState)\n    prunedBuildContext.pluginState = pluginState\n\n    if (curResult.telemetryState) {\n      NextBuildContext.telemetryState = curResult.telemetryState\n    }\n\n    combinedResult.duration += curResult.duration\n\n    if (curResult.buildTraceContext?.entriesTrace) {\n      const { entryNameMap } = curResult.buildTraceContext.entriesTrace!\n\n      if (entryNameMap) {\n        combinedResult.buildTraceContext.entriesTrace =\n          curResult.buildTraceContext.entriesTrace\n        combinedResult.buildTraceContext.entriesTrace!.entryNameMap =\n          entryNameMap\n      }\n\n      if (curResult.buildTraceContext?.chunksTrace) {\n        const { entryNameFilesMap } = curResult.buildTraceContext.chunksTrace!\n\n        if (entryNameFilesMap) {\n          combinedResult.buildTraceContext.chunksTrace =\n            curResult.buildTraceContext.chunksTrace!\n\n          combinedResult.buildTraceContext.chunksTrace!.entryNameFilesMap =\n            entryNameFilesMap\n        }\n      }\n    }\n  }\n\n  if (compilerNames.length === 3) {\n    Log.event('Compiled successfully')\n  }\n\n  return combinedResult\n}\n\nexport function webpackBuild(\n  withWorker: boolean,\n  compilerNames: typeof ORDERED_COMPILER_NAMES | null\n): ReturnType<typeof webpackBuildWithWorker> {\n  if (withWorker) {\n    debug('using separate compiler workers')\n    return webpackBuildWithWorker(compilerNames)\n  } else {\n    debug('building all compilers in same process')\n    const webpackBuildImpl = require('./impl').webpackBuildImpl\n    return webpackBuildImpl(null, null)\n  }\n}\n"],"names":["Log","NextBuildContext","Worker","origDebug","path","exportTraceState","recordTraceEvents","debug","ORDERED_COMPILER_NAMES","pluginState","deepMerge","target","source","result","key","Object","keys","Array","isArray","webpackBuildWithWorker","compilerNamesArg","compilerNames","nextBuildSpan","prunedBuildContext","getWorker","compilerName","_worker","join","__dirname","exposedMethods","numWorkers","maxRetries","forkOptions","env","process","NEXT_PRIVATE_BUILD_WORKER","getStderr","pipe","stderr","getStdout","stdout","worker","_workerPool","_workers","_child","on","code","signal","combinedResult","duration","buildTraceContext","curResult","workerMain","buildContext","traceState","defaultParentSpanId","getId","shouldSaveTraceEvents","debugTraceEvents","end","telemetryState","entriesTrace","entryNameMap","chunksTrace","entryNameFilesMap","length","event","webpackBuild","withWorker","webpackBuildImpl","require"],"mappings":"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"}