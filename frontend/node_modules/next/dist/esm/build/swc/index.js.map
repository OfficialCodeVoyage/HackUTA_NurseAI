{"version":3,"sources":["../../../src/build/swc/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport path from 'path'\nimport { pathToFileURL } from 'url'\nimport { arch, platform } from 'os'\nimport { platformArchTriples } from 'next/dist/compiled/@napi-rs/triples'\nimport * as Log from '../output/log'\nimport { getParserOptions } from './options'\nimport { eventSwcLoadFailure } from '../../telemetry/events/swc-load-failure'\nimport { patchIncorrectLockfile } from '../../lib/patch-incorrect-lockfile'\nimport { downloadNativeNextSwc, downloadWasmSwc } from '../../lib/download-swc'\nimport type {\n  TurboRuleConfigItem,\n  NextConfigComplete,\n  TurboLoaderItem,\n  TurboRuleConfigItemOrShortcut,\n  TurboRuleConfigItemOptions,\n} from '../../server/config-shared'\nimport { isDeepStrictEqual } from 'util'\nimport {\n  type DefineEnvPluginOptions,\n  getDefineEnv,\n} from '../webpack/plugins/define-env-plugin'\nimport type { PageExtensions } from '../page-extensions-type'\nimport type { __ApiPreviewProps } from '../../server/api-utils'\nimport { getReactCompilerLoader } from '../get-babel-loader-config'\nimport { TurbopackInternalError } from '../../server/dev/turbopack-utils'\n\nconst nextVersion = process.env.__NEXT_VERSION as string\n\nconst ArchName = arch()\nconst PlatformName = platform()\n\nconst infoLog = (...args: any[]) => {\n  if (process.env.NEXT_PRIVATE_BUILD_WORKER) {\n    return\n  }\n  if (process.env.DEBUG) {\n    Log.info(...args)\n  }\n}\n\n/**\n * Based on napi-rs's target triples, returns triples that have corresponding next-swc binaries.\n */\nexport const getSupportedArchTriples: () => Record<string, any> = () => {\n  const { darwin, win32, linux, freebsd, android } = platformArchTriples\n\n  return {\n    darwin,\n    win32: {\n      arm64: win32.arm64,\n      ia32: win32.ia32.filter(\n        (triple: { abi: string }) => triple.abi === 'msvc'\n      ),\n      x64: win32.x64.filter((triple: { abi: string }) => triple.abi === 'msvc'),\n    },\n    linux: {\n      // linux[x64] includes `gnux32` abi, with x64 arch.\n      x64: linux.x64.filter(\n        (triple: { abi: string }) => triple.abi !== 'gnux32'\n      ),\n      arm64: linux.arm64,\n      // This target is being deprecated, however we keep it in `knownDefaultWasmFallbackTriples` for now\n      arm: linux.arm,\n    },\n    // Below targets are being deprecated, however we keep it in `knownDefaultWasmFallbackTriples` for now\n    freebsd: {\n      x64: freebsd.x64,\n    },\n    android: {\n      arm64: android.arm64,\n      arm: android.arm,\n    },\n  }\n}\n\nconst triples = (() => {\n  const supportedArchTriples = getSupportedArchTriples()\n  const targetTriple = supportedArchTriples[PlatformName]?.[ArchName]\n\n  // If we have supported triple, return it right away\n  if (targetTriple) {\n    return targetTriple\n  }\n\n  // If there isn't corresponding target triple in `supportedArchTriples`, check if it's excluded from original raw triples\n  // Otherwise, it is completely unsupported platforms.\n  let rawTargetTriple = platformArchTriples[PlatformName]?.[ArchName]\n\n  if (rawTargetTriple) {\n    Log.warn(\n      `Trying to load next-swc for target triple ${rawTargetTriple}, but there next-swc does not have native bindings support`\n    )\n  } else {\n    Log.warn(\n      `Trying to load next-swc for unsupported platforms ${PlatformName}/${ArchName}`\n    )\n  }\n\n  return []\n})()\n\n// Allow to specify an absolute path to the custom turbopack binary to load.\n// If one of env variables is set, `loadNative` will try to use specified\n// binary instead. This is thin, naive interface\n// - `loadBindings` will not validate neither path nor the binary.\n//\n// Note these are internal flag: there's no stability, feature guarantee.\nconst __INTERNAL_CUSTOM_TURBOPACK_BINDINGS =\n  process.env.__INTERNAL_CUSTOM_TURBOPACK_BINDINGS\n\nfunction checkVersionMismatch(pkgData: any) {\n  const version = pkgData.version\n\n  if (version && version !== nextVersion) {\n    Log.warn(\n      `Mismatching @next/swc version, detected: ${version} while Next.js is on ${nextVersion}. Please ensure these match`\n    )\n  }\n}\n\n// These are the platforms we'll try to load wasm bindings first,\n// only try to load native bindings if loading wasm binding somehow fails.\n// Fallback to native binding is for migration period only,\n// once we can verify loading-wasm-first won't cause visible regressions,\n// we'll not include native bindings for these platform at all.\nconst knownDefaultWasmFallbackTriples = [\n  'x86_64-unknown-freebsd',\n  'aarch64-linux-android',\n  'arm-linux-androideabi',\n  'armv7-unknown-linux-gnueabihf',\n  'i686-pc-windows-msvc',\n  // WOA targets are TBD, while current userbase is small we may support it in the future\n  //'aarch64-pc-windows-msvc',\n]\n\n// The last attempt's error code returned when cjs require to native bindings fails.\n// If node.js throws an error without error code, this should be `unknown` instead of undefined.\n// For the wasm-first targets (`knownDefaultWasmFallbackTriples`) this will be `unsupported_target`.\nlet lastNativeBindingsLoadErrorCode:\n  | 'unknown'\n  | 'unsupported_target'\n  | string\n  | undefined = undefined\nlet nativeBindings: Binding\nlet wasmBindings: any\nlet downloadWasmPromise: any\nlet pendingBindings: any\nlet swcTraceFlushGuard: any\nlet swcHeapProfilerFlushGuard: any\nlet downloadNativeBindingsPromise: Promise<void> | undefined = undefined\n\nexport const lockfilePatchPromise: { cur?: Promise<void> } = {}\n\nexport interface Binding {\n  isWasm: boolean\n  turbo: {\n    startTrace: any\n    nextBuild?: any\n    createTurboTasks?: any\n    entrypoints: {\n      stream: any\n      get: any\n    }\n    createProject: (\n      options: ProjectOptions,\n      turboEngineOptions?: TurboEngineOptions\n    ) => Promise<Project>\n    startTurbopackTraceServer: (path: string) => void\n  }\n  mdx: {\n    compile: any\n    compileSync: any\n  }\n  minify: any\n  minifySync: any\n  transform: any\n  transformSync: any\n  parse: any\n\n  getTargetTriple(): string | undefined\n\n  initCustomTraceSubscriber?: any\n  teardownTraceSubscriber?: any\n  initHeapProfiler?: any\n  teardownHeapProfiler?: any\n  css: {\n    lightning: {\n      transform(transformOptions: any): Promise<any>\n      transformStyleAttr(attrOptions: any): Promise<any>\n    }\n  }\n}\n\nexport async function loadBindings(\n  useWasmBinary: boolean = false\n): Promise<Binding> {\n  // Increase Rust stack size as some npm packages being compiled need more than the default.\n  if (!process.env.RUST_MIN_STACK) {\n    process.env.RUST_MIN_STACK = '8388608'\n  }\n\n  if (pendingBindings) {\n    return pendingBindings\n  }\n\n  // rust needs stdout to be blocking, otherwise it will throw an error (on macOS at least) when writing a lot of data (logs) to it\n  // see https://github.com/napi-rs/napi-rs/issues/1630\n  // and https://github.com/nodejs/node/blob/main/doc/api/process.md#a-note-on-process-io\n  if (process.stdout._handle != null) {\n    // @ts-ignore\n    process.stdout._handle.setBlocking?.(true)\n  }\n  if (process.stderr._handle != null) {\n    // @ts-ignore\n    process.stderr._handle.setBlocking?.(true)\n  }\n\n  pendingBindings = new Promise(async (resolve, _reject) => {\n    if (!lockfilePatchPromise.cur) {\n      // always run lockfile check once so that it gets patched\n      // even if it doesn't fail to load locally\n      lockfilePatchPromise.cur = patchIncorrectLockfile(process.cwd()).catch(\n        console.error\n      )\n    }\n\n    let attempts: any[] = []\n    const disableWasmFallback = process.env.NEXT_DISABLE_SWC_WASM\n    const unsupportedPlatform = triples.some(\n      (triple: any) =>\n        !!triple?.raw && knownDefaultWasmFallbackTriples.includes(triple.raw)\n    )\n    const isWebContainer = process.versions.webcontainer\n    // Normal execution relies on the param `useWasmBinary` flag to load, but\n    // in certain cases where there isn't a native binary we always load wasm fallback first.\n    const shouldLoadWasmFallbackFirst =\n      (!disableWasmFallback && useWasmBinary) ||\n      unsupportedPlatform ||\n      isWebContainer\n\n    if (!unsupportedPlatform && useWasmBinary) {\n      Log.warn(\n        `experimental.useWasmBinary is not an option for supported platform ${PlatformName}/${ArchName} and will be ignored.`\n      )\n    }\n\n    if (shouldLoadWasmFallbackFirst) {\n      lastNativeBindingsLoadErrorCode = 'unsupported_target'\n      const fallbackBindings = await tryLoadWasmWithFallback(attempts)\n      if (fallbackBindings) {\n        return resolve(fallbackBindings)\n      }\n    }\n\n    // Trickle down loading `fallback` bindings:\n    //\n    // - First, try to load native bindings installed in node_modules.\n    // - If that fails with `ERR_MODULE_NOT_FOUND`, treat it as case of https://github.com/npm/cli/issues/4828\n    // that host system where generated package lock is not matching to the guest system running on, try to manually\n    // download corresponding target triple and load it. This won't be triggered if native bindings are failed to load\n    // with other reasons than `ERR_MODULE_NOT_FOUND`.\n    // - Lastly, falls back to wasm binding where possible.\n    try {\n      return resolve(loadNative())\n    } catch (a) {\n      if (\n        Array.isArray(a) &&\n        a.every((m) => m.includes('it was not installed'))\n      ) {\n        let fallbackBindings = await tryLoadNativeWithFallback(attempts)\n\n        if (fallbackBindings) {\n          return resolve(fallbackBindings)\n        }\n      }\n\n      attempts = attempts.concat(a)\n    }\n\n    // For these platforms we already tried to load wasm and failed, skip reattempt\n    if (!shouldLoadWasmFallbackFirst && !disableWasmFallback) {\n      const fallbackBindings = await tryLoadWasmWithFallback(attempts)\n      if (fallbackBindings) {\n        return resolve(fallbackBindings)\n      }\n    }\n\n    logLoadFailure(attempts, true)\n  })\n  return pendingBindings\n}\n\nasync function tryLoadNativeWithFallback(attempts: Array<string>) {\n  const nativeBindingsDirectory = path.join(\n    path.dirname(require.resolve('next/package.json')),\n    'next-swc-fallback'\n  )\n\n  if (!downloadNativeBindingsPromise) {\n    downloadNativeBindingsPromise = downloadNativeNextSwc(\n      nextVersion,\n      nativeBindingsDirectory,\n      triples.map((triple: any) => triple.platformArchABI)\n    )\n  }\n  await downloadNativeBindingsPromise\n\n  try {\n    let bindings = loadNative(nativeBindingsDirectory)\n    return bindings\n  } catch (a: any) {\n    attempts.concat(a)\n  }\n  return undefined\n}\n\nasync function tryLoadWasmWithFallback(attempts: any) {\n  try {\n    let bindings = await loadWasm('')\n    // @ts-expect-error TODO: this event has a wrong type.\n    eventSwcLoadFailure({\n      wasm: 'enabled',\n      nativeBindingsErrorCode: lastNativeBindingsLoadErrorCode,\n    })\n    return bindings\n  } catch (a) {\n    attempts = attempts.concat(a)\n  }\n\n  try {\n    // if not installed already download wasm package on-demand\n    // we download to a custom directory instead of to node_modules\n    // as node_module import attempts are cached and can't be re-attempted\n    // x-ref: https://github.com/nodejs/modules/issues/307\n    const wasmDirectory = path.join(\n      path.dirname(require.resolve('next/package.json')),\n      'wasm'\n    )\n    if (!downloadWasmPromise) {\n      downloadWasmPromise = downloadWasmSwc(nextVersion, wasmDirectory)\n    }\n    await downloadWasmPromise\n    let bindings = await loadWasm(wasmDirectory)\n    // @ts-expect-error TODO: this event has a wrong type.\n    eventSwcLoadFailure({\n      wasm: 'fallback',\n      nativeBindingsErrorCode: lastNativeBindingsLoadErrorCode,\n    })\n\n    // still log native load attempts so user is\n    // aware it failed and should be fixed\n    for (const attempt of attempts) {\n      Log.warn(attempt)\n    }\n    return bindings\n  } catch (a) {\n    attempts = attempts.concat(a)\n  }\n}\n\nfunction loadBindingsSync() {\n  let attempts: any[] = []\n  try {\n    return loadNative()\n  } catch (a) {\n    attempts = attempts.concat(a)\n  }\n\n  // we can leverage the wasm bindings if they are already\n  // loaded\n  if (wasmBindings) {\n    return wasmBindings\n  }\n\n  logLoadFailure(attempts)\n}\n\nlet loggingLoadFailure = false\n\nfunction logLoadFailure(attempts: any, triedWasm = false) {\n  // make sure we only emit the event and log the failure once\n  if (loggingLoadFailure) return\n  loggingLoadFailure = true\n\n  for (let attempt of attempts) {\n    Log.warn(attempt)\n  }\n\n  // @ts-expect-error TODO: this event has a wrong type.\n  eventSwcLoadFailure({\n    wasm: triedWasm ? 'failed' : undefined,\n    nativeBindingsErrorCode: lastNativeBindingsLoadErrorCode,\n  })\n    .then(() => lockfilePatchPromise.cur || Promise.resolve())\n    .finally(() => {\n      Log.error(\n        `Failed to load SWC binary for ${PlatformName}/${ArchName}, see more info here: https://nextjs.org/docs/messages/failed-loading-swc`\n      )\n      process.exit(1)\n    })\n}\nexport interface ProjectOptions {\n  /**\n   * A root path from which all files must be nested under. Trying to access\n   * a file outside this root will fail. Think of this as a chroot.\n   */\n  rootPath: string\n\n  /**\n   * A path inside the root_path which contains the app/pages directories.\n   */\n  projectPath: string\n\n  /**\n   * The next.config.js contents.\n   */\n  nextConfig: NextConfigComplete\n\n  /**\n   * Jsconfig, or tsconfig contents.\n   *\n   * Next.js implicitly requires to read it to support few options\n   * https://nextjs.org/docs/architecture/nextjs-compiler#legacy-decorators\n   * https://nextjs.org/docs/architecture/nextjs-compiler#importsource\n   */\n  jsConfig: {\n    compilerOptions: object\n  }\n\n  /**\n   * A map of environment variables to use when compiling code.\n   */\n  env: Record<string, string>\n\n  defineEnv: DefineEnv\n\n  /**\n   * Whether to watch the filesystem for file changes.\n   */\n  watch: boolean\n\n  /**\n   * The mode in which Next.js is running.\n   */\n  dev: boolean\n\n  /**\n   * The server actions encryption key.\n   */\n  encryptionKey: string\n\n  /**\n   * The build id.\n   */\n  buildId: string\n\n  /**\n   * Options for draft mode.\n   */\n  previewProps: __ApiPreviewProps\n}\n\ntype RustifiedEnv = { name: string; value: string }[]\n\nexport interface DefineEnv {\n  client: RustifiedEnv\n  edge: RustifiedEnv\n  nodejs: RustifiedEnv\n}\n\nexport function createDefineEnv({\n  isTurbopack,\n  clientRouterFilters,\n  config,\n  dev,\n  distDir,\n  fetchCacheKeyPrefix,\n  hasRewrites,\n  middlewareMatchers,\n}: Omit<\n  DefineEnvPluginOptions,\n  'isClient' | 'isNodeOrEdgeCompilation' | 'isEdgeServer' | 'isNodeServer'\n>): DefineEnv {\n  let defineEnv: DefineEnv = {\n    client: [],\n    edge: [],\n    nodejs: [],\n  }\n\n  for (const variant of Object.keys(defineEnv) as (keyof typeof defineEnv)[]) {\n    defineEnv[variant] = rustifyEnv(\n      getDefineEnv({\n        isTurbopack,\n        clientRouterFilters,\n        config,\n        dev,\n        distDir,\n        fetchCacheKeyPrefix,\n        hasRewrites,\n        isClient: variant === 'client',\n        isEdgeServer: variant === 'edge',\n        isNodeOrEdgeCompilation: variant === 'nodejs' || variant === 'edge',\n        isNodeServer: variant === 'nodejs',\n        middlewareMatchers,\n      })\n    )\n  }\n\n  return defineEnv\n}\n\nexport interface TurboEngineOptions {\n  /**\n   * An upper bound of memory that turbopack will attempt to stay under.\n   */\n  memoryLimit?: number\n}\n\nexport type StyledString =\n  | {\n      type: 'text'\n      value: string\n    }\n  | {\n      type: 'code'\n      value: string\n    }\n  | {\n      type: 'strong'\n      value: string\n    }\n  | {\n      type: 'stack'\n      value: StyledString[]\n    }\n  | {\n      type: 'line'\n      value: StyledString[]\n    }\n\nexport interface Issue {\n  severity: string\n  stage: string\n  filePath: string\n  title: StyledString\n  description?: StyledString\n  detail?: StyledString\n  source?: {\n    source: {\n      ident: string\n      content?: string\n    }\n    range?: {\n      start: {\n        // 0-indexed\n        line: number\n        // 0-indexed\n        column: number\n      }\n      end: {\n        // 0-indexed\n        line: number\n        // 0-indexed\n        column: number\n      }\n    }\n  }\n  documentationLink: string\n  subIssues: Issue[]\n}\n\nexport interface Diagnostics {\n  category: string\n  name: string\n  payload: unknown\n}\n\nexport type TurbopackResult<T = {}> = T & {\n  issues: Issue[]\n  diagnostics: Diagnostics[]\n}\n\nexport interface Middleware {\n  endpoint: Endpoint\n}\n\nexport interface Instrumentation {\n  nodeJs: Endpoint\n  edge: Endpoint\n}\n\nexport interface Entrypoints {\n  routes: Map<string, Route>\n  middleware?: Middleware\n  instrumentation?: Instrumentation\n  pagesDocumentEndpoint: Endpoint\n  pagesAppEndpoint: Endpoint\n  pagesErrorEndpoint: Endpoint\n}\n\ninterface BaseUpdate {\n  resource: {\n    headers: unknown\n    path: string\n  }\n  diagnostics: unknown[]\n  issues: Issue[]\n}\n\ninterface IssuesUpdate extends BaseUpdate {\n  type: 'issues'\n}\n\ninterface EcmascriptMergedUpdate {\n  type: 'EcmascriptMergedUpdate'\n  chunks: { [moduleName: string]: { type: 'partial' } }\n  entries: { [moduleName: string]: { code: string; map: string; url: string } }\n}\n\ninterface PartialUpdate extends BaseUpdate {\n  type: 'partial'\n  instruction: {\n    type: 'ChunkListUpdate'\n    merged: EcmascriptMergedUpdate[] | undefined\n  }\n}\n\nexport type Update = IssuesUpdate | PartialUpdate\n\nexport interface HmrIdentifiers {\n  identifiers: string[]\n}\n\n/** @see https://github.com/vercel/next.js/blob/415cd74b9a220b6f50da64da68c13043e9b02995/packages/next-swc/crates/napi/src/next_api/project.rs#L824-L833 */\nexport interface TurbopackStackFrame {\n  isServer: boolean\n  isInternal?: boolean\n  file: string\n  /** 1-indexed, unlike source map tokens */\n  line?: number\n  /** 1-indexed, unlike source map tokens */\n  column?: number | null\n  methodName?: string\n}\n\nexport type UpdateMessage =\n  | {\n      updateType: 'start'\n    }\n  | {\n      updateType: 'end'\n      value: UpdateInfo\n    }\n\nexport interface UpdateInfo {\n  duration: number\n  tasks: number\n}\n\nexport interface Project {\n  update(options: Partial<ProjectOptions>): Promise<void>\n\n  entrypointsSubscribe(): AsyncIterableIterator<TurbopackResult<Entrypoints>>\n\n  hmrEvents(identifier: string): AsyncIterableIterator<TurbopackResult<Update>>\n\n  hmrIdentifiersSubscribe(): AsyncIterableIterator<\n    TurbopackResult<HmrIdentifiers>\n  >\n\n  getSourceForAsset(filePath: string): Promise<string | null>\n\n  traceSource(\n    stackFrame: TurbopackStackFrame\n  ): Promise<TurbopackStackFrame | null>\n\n  updateInfoSubscribe(\n    aggregationMs: number\n  ): AsyncIterableIterator<TurbopackResult<UpdateMessage>>\n\n  onExit(): Promise<void>\n}\n\nexport type Route =\n  | {\n      type: 'conflict'\n    }\n  | {\n      type: 'app-page'\n      pages: {\n        originalName: string\n        htmlEndpoint: Endpoint\n        rscEndpoint: Endpoint\n      }[]\n    }\n  | {\n      type: 'app-route'\n      originalName: string\n      endpoint: Endpoint\n    }\n  | {\n      type: 'page'\n      htmlEndpoint: Endpoint\n      dataEndpoint: Endpoint\n    }\n  | {\n      type: 'page-api'\n      endpoint: Endpoint\n    }\n\nexport interface Endpoint {\n  /** Write files for the endpoint to disk. */\n  writeToDisk(): Promise<TurbopackResult<WrittenEndpoint>>\n\n  /**\n   * Listen to client-side changes to the endpoint.\n   * After clientChanged() has been awaited it will listen to changes.\n   * The async iterator will yield for each change.\n   */\n  clientChanged(): Promise<AsyncIterableIterator<TurbopackResult>>\n\n  /**\n   * Listen to server-side changes to the endpoint.\n   * After serverChanged() has been awaited it will listen to changes.\n   * The async iterator will yield for each change.\n   */\n  serverChanged(\n    includeIssues: boolean\n  ): Promise<AsyncIterableIterator<TurbopackResult>>\n}\n\ninterface EndpointConfig {\n  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'\n  dynamicParams?: boolean\n  revalidate?: 'never' | 'force-cache' | number\n  fetchCache?:\n    | 'auto'\n    | 'default-cache'\n    | 'only-cache'\n    | 'force-cache'\n    | 'default-no-store'\n    | 'only-no-store'\n    | 'force-no-store'\n  runtime?: 'nodejs' | 'edge'\n  preferredRegion?: string\n}\n\nexport type ServerPath = {\n  path: string\n  contentHash: string\n}\n\nexport type WrittenEndpoint =\n  | {\n      type: 'nodejs'\n      /** The entry path for the endpoint. */\n      entryPath: string\n      /** All client paths that have been written for the endpoint. */\n      clientPaths: string[]\n      /** All server paths that have been written for the endpoint. */\n      serverPaths: ServerPath[]\n      config: EndpointConfig\n    }\n  | {\n      type: 'edge'\n      /** All client paths that have been written for the endpoint. */\n      clientPaths: string[]\n      /** All server paths that have been written for the endpoint. */\n      serverPaths: ServerPath[]\n      config: EndpointConfig\n    }\n\nfunction rustifyEnv(env: Record<string, string>): RustifiedEnv {\n  return Object.entries(env)\n    .filter(([_, value]) => value != null)\n    .map(([name, value]) => ({\n      name,\n      value,\n    }))\n}\n\n// TODO(sokra) Support wasm option.\nfunction bindingToApi(\n  binding: any,\n  _wasm: boolean\n): Binding['turbo']['createProject'] {\n  type NativeFunction<T> = (\n    callback: (err: Error, value: T) => void\n  ) => Promise<{ __napiType: 'RootTask' }>\n\n  const cancel = new (class Cancel extends Error {})()\n\n  /**\n   * Utility function to ensure all variants of an enum are handled.\n   */\n  function invariant(\n    never: never,\n    computeMessage: (arg: any) => string\n  ): never {\n    throw new Error(`Invariant: ${computeMessage(never)}`)\n  }\n\n  async function withErrorCause<T>(fn: () => Promise<T>): Promise<T> {\n    try {\n      return await fn()\n    } catch (nativeError: any) {\n      throw new TurbopackInternalError(nativeError.message, {\n        cause: nativeError,\n      })\n    }\n  }\n\n  /**\n   * Calls a native function and streams the result.\n   * If useBuffer is true, all values will be preserved, potentially buffered\n   * if consumed slower than produced. Else, only the latest value will be\n   * preserved.\n   */\n  function subscribe<T>(\n    useBuffer: boolean,\n    nativeFunction: NativeFunction<T>\n  ): AsyncIterableIterator<T> {\n    type BufferItem =\n      | { err: Error; value: undefined }\n      | { err: undefined; value: T }\n    // A buffer of produced items. This will only contain values if the\n    // consumer is slower than the producer.\n    let buffer: BufferItem[] = []\n    // A deferred value waiting for the next produced item. This will only\n    // exist if the consumer is faster than the producer.\n    let waiting:\n      | {\n          resolve: (value: T) => void\n          reject: (error: Error) => void\n        }\n      | undefined\n    let canceled = false\n\n    // The native function will call this every time it emits a new result. We\n    // either need to notify a waiting consumer, or buffer the new result until\n    // the consumer catches up.\n    const emitResult = (err: Error | undefined, value: T | undefined) => {\n      if (waiting) {\n        let { resolve, reject } = waiting\n        waiting = undefined\n        if (err) reject(err)\n        else resolve(value!)\n      } else {\n        const item = { err, value } as BufferItem\n        if (useBuffer) buffer.push(item)\n        else buffer[0] = item\n      }\n    }\n\n    const iterator = (async function* () {\n      const task = await withErrorCause(() => nativeFunction(emitResult))\n      try {\n        while (!canceled) {\n          if (buffer.length > 0) {\n            const item = buffer.shift()!\n            if (item.err) throw item.err\n            yield item.value\n          } else {\n            // eslint-disable-next-line no-loop-func\n            yield new Promise<T>((resolve, reject) => {\n              waiting = { resolve, reject }\n            })\n          }\n        }\n      } catch (e) {\n        if (e === cancel) return\n        throw e\n      } finally {\n        binding.rootTaskDispose(task)\n      }\n    })()\n    iterator.return = async () => {\n      canceled = true\n      if (waiting) waiting.reject(cancel)\n      return { value: undefined, done: true } as IteratorReturnResult<never>\n    }\n    return iterator\n  }\n\n  async function rustifyProjectOptions(\n    options: Partial<ProjectOptions>\n  ): Promise<any> {\n    return {\n      ...options,\n      nextConfig:\n        options.nextConfig &&\n        (await serializeNextConfig(options.nextConfig, options.projectPath!)),\n      jsConfig: options.jsConfig && JSON.stringify(options.jsConfig),\n      env: options.env && rustifyEnv(options.env),\n      defineEnv: options.defineEnv,\n    }\n  }\n\n  class ProjectImpl implements Project {\n    private _nativeProject: { __napiType: 'Project' }\n\n    constructor(nativeProject: { __napiType: 'Project' }) {\n      this._nativeProject = nativeProject\n    }\n\n    async update(options: Partial<ProjectOptions>) {\n      await withErrorCause(async () =>\n        binding.projectUpdate(\n          this._nativeProject,\n          await rustifyProjectOptions(options)\n        )\n      )\n    }\n\n    entrypointsSubscribe() {\n      type NapiEndpoint = { __napiType: 'Endpoint' }\n\n      type NapiEntrypoints = {\n        routes: NapiRoute[]\n        middleware?: NapiMiddleware\n        instrumentation?: NapiInstrumentation\n        pagesDocumentEndpoint: NapiEndpoint\n        pagesAppEndpoint: NapiEndpoint\n        pagesErrorEndpoint: NapiEndpoint\n      }\n\n      type NapiMiddleware = {\n        endpoint: NapiEndpoint\n        runtime: 'nodejs' | 'edge'\n        matcher?: string[]\n      }\n\n      type NapiInstrumentation = {\n        nodeJs: NapiEndpoint\n        edge: NapiEndpoint\n      }\n\n      type NapiRoute = {\n        pathname: string\n      } & (\n        | {\n            type: 'page'\n            htmlEndpoint: NapiEndpoint\n            dataEndpoint: NapiEndpoint\n          }\n        | {\n            type: 'page-api'\n            endpoint: NapiEndpoint\n          }\n        | {\n            type: 'app-page'\n            pages: {\n              originalName: string\n              htmlEndpoint: NapiEndpoint\n              rscEndpoint: NapiEndpoint\n            }[]\n          }\n        | {\n            type: 'app-route'\n            originalName: string\n            endpoint: NapiEndpoint\n          }\n        | {\n            type: 'conflict'\n          }\n      )\n\n      const subscription = subscribe<TurbopackResult<NapiEntrypoints>>(\n        false,\n        async (callback) =>\n          binding.projectEntrypointsSubscribe(this._nativeProject, callback)\n      )\n      return (async function* () {\n        for await (const entrypoints of subscription) {\n          const routes = new Map()\n          for (const { pathname, ...nativeRoute } of entrypoints.routes) {\n            let route: Route\n            const routeType = nativeRoute.type\n            switch (routeType) {\n              case 'page':\n                route = {\n                  type: 'page',\n                  htmlEndpoint: new EndpointImpl(nativeRoute.htmlEndpoint),\n                  dataEndpoint: new EndpointImpl(nativeRoute.dataEndpoint),\n                }\n                break\n              case 'page-api':\n                route = {\n                  type: 'page-api',\n                  endpoint: new EndpointImpl(nativeRoute.endpoint),\n                }\n                break\n              case 'app-page':\n                route = {\n                  type: 'app-page',\n                  pages: nativeRoute.pages.map((page) => ({\n                    originalName: page.originalName,\n                    htmlEndpoint: new EndpointImpl(page.htmlEndpoint),\n                    rscEndpoint: new EndpointImpl(page.rscEndpoint),\n                  })),\n                }\n                break\n              case 'app-route':\n                route = {\n                  type: 'app-route',\n                  originalName: nativeRoute.originalName,\n                  endpoint: new EndpointImpl(nativeRoute.endpoint),\n                }\n                break\n              case 'conflict':\n                route = {\n                  type: 'conflict',\n                }\n                break\n              default:\n                const _exhaustiveCheck: never = routeType\n                invariant(\n                  nativeRoute,\n                  () => `Unknown route type: ${_exhaustiveCheck}`\n                )\n            }\n            routes.set(pathname, route)\n          }\n          const napiMiddlewareToMiddleware = (middleware: NapiMiddleware) => ({\n            endpoint: new EndpointImpl(middleware.endpoint),\n            runtime: middleware.runtime,\n            matcher: middleware.matcher,\n          })\n          const middleware = entrypoints.middleware\n            ? napiMiddlewareToMiddleware(entrypoints.middleware)\n            : undefined\n          const napiInstrumentationToInstrumentation = (\n            instrumentation: NapiInstrumentation\n          ) => ({\n            nodeJs: new EndpointImpl(instrumentation.nodeJs),\n            edge: new EndpointImpl(instrumentation.edge),\n          })\n          const instrumentation = entrypoints.instrumentation\n            ? napiInstrumentationToInstrumentation(entrypoints.instrumentation)\n            : undefined\n          yield {\n            routes,\n            middleware,\n            instrumentation,\n            pagesDocumentEndpoint: new EndpointImpl(\n              entrypoints.pagesDocumentEndpoint\n            ),\n            pagesAppEndpoint: new EndpointImpl(entrypoints.pagesAppEndpoint),\n            pagesErrorEndpoint: new EndpointImpl(\n              entrypoints.pagesErrorEndpoint\n            ),\n            issues: entrypoints.issues,\n            diagnostics: entrypoints.diagnostics,\n          }\n        }\n      })()\n    }\n\n    hmrEvents(identifier: string) {\n      return subscribe<TurbopackResult<Update>>(true, async (callback) =>\n        binding.projectHmrEvents(this._nativeProject, identifier, callback)\n      )\n    }\n\n    hmrIdentifiersSubscribe() {\n      return subscribe<TurbopackResult<HmrIdentifiers>>(\n        false,\n        async (callback) =>\n          binding.projectHmrIdentifiersSubscribe(this._nativeProject, callback)\n      )\n    }\n\n    traceSource(\n      stackFrame: TurbopackStackFrame\n    ): Promise<TurbopackStackFrame | null> {\n      return binding.projectTraceSource(this._nativeProject, stackFrame)\n    }\n\n    getSourceForAsset(filePath: string): Promise<string | null> {\n      return binding.projectGetSourceForAsset(this._nativeProject, filePath)\n    }\n\n    updateInfoSubscribe(aggregationMs: number) {\n      const subscription = subscribe<TurbopackResult<UpdateMessage>>(\n        true,\n        async (callback) =>\n          binding.projectUpdateInfoSubscribe(\n            this._nativeProject,\n            aggregationMs,\n            callback\n          )\n      )\n      return subscription\n    }\n\n    onExit(): Promise<void> {\n      return binding.projectOnExit(this._nativeProject)\n    }\n  }\n\n  class EndpointImpl implements Endpoint {\n    private _nativeEndpoint: { __napiType: 'Endpoint' }\n\n    constructor(nativeEndpoint: { __napiType: 'Endpoint' }) {\n      this._nativeEndpoint = nativeEndpoint\n    }\n\n    async writeToDisk(): Promise<TurbopackResult<WrittenEndpoint>> {\n      return await withErrorCause(() =>\n        binding.endpointWriteToDisk(this._nativeEndpoint)\n      )\n    }\n\n    async clientChanged(): Promise<AsyncIterableIterator<TurbopackResult<{}>>> {\n      const clientSubscription = subscribe<TurbopackResult>(\n        false,\n        async (callback) =>\n          binding.endpointClientChangedSubscribe(\n            await this._nativeEndpoint,\n            callback\n          )\n      )\n      await clientSubscription.next()\n      return clientSubscription\n    }\n\n    async serverChanged(\n      includeIssues: boolean\n    ): Promise<AsyncIterableIterator<TurbopackResult<{}>>> {\n      const serverSubscription = subscribe<TurbopackResult>(\n        false,\n        async (callback) =>\n          binding.endpointServerChangedSubscribe(\n            await this._nativeEndpoint,\n            includeIssues,\n            callback\n          )\n      )\n      await serverSubscription.next()\n      return serverSubscription\n    }\n  }\n\n  /**\n   * Returns a new copy of next.js config object to avoid mutating the original.\n   *\n   * Also it does some augmentation to the configuration as well, for example set the\n   * turbopack's rules if `experimental.reactCompilerOptions` is set.\n   */\n  function augmentNextConfig(\n    originalNextConfig: NextConfigComplete,\n    projectPath: string\n  ): Record<string, any> {\n    let nextConfig = { ...(originalNextConfig as any) }\n\n    const reactCompilerOptions = nextConfig.experimental?.reactCompiler\n\n    // It is not easy to set the rules inside of rust as resolving, and passing the context identical to the webpack\n    // config is bit hard, also we can reuse same codes between webpack config in here.\n    if (reactCompilerOptions) {\n      const ruleKeys = ['*.ts', '*.js', '*.jsx', '*.tsx']\n      if (\n        Object.keys(nextConfig?.experimental?.turbo?.rules ?? []).some((key) =>\n          ruleKeys.includes(key)\n        )\n      ) {\n        Log.warn(\n          `The React Compiler cannot be enabled automatically because 'experimental.turbo' contains a rule for '*.ts', '*.js', '*.jsx', and '*.tsx'. Remove this rule, or add 'babel-loader' and 'babel-plugin-react-compiler' to the Turbopack configuration manually.`\n        )\n      } else {\n        if (!nextConfig.experimental.turbo) {\n          nextConfig.experimental.turbo = {}\n        }\n\n        if (!nextConfig.experimental.turbo.rules) {\n          nextConfig.experimental.turbo.rules = {}\n        }\n\n        for (const key of ['*.ts', '*.js', '*.jsx', '*.tsx']) {\n          nextConfig.experimental.turbo.rules[key] = {\n            browser: {\n              foreign: false,\n              loaders: [\n                getReactCompilerLoader(\n                  originalNextConfig.experimental.reactCompiler,\n                  projectPath,\n                  nextConfig.dev,\n                  false,\n                  undefined\n                ),\n              ],\n            },\n          }\n        }\n      }\n    }\n\n    return nextConfig\n  }\n\n  async function serializeNextConfig(\n    nextConfig: NextConfigComplete,\n    projectPath: string\n  ): Promise<string> {\n    // Avoid mutating the existing `nextConfig` object.\n    let nextConfigSerializable = augmentNextConfig(nextConfig, projectPath)\n\n    nextConfigSerializable.generateBuildId =\n      await nextConfig.generateBuildId?.()\n\n    // TODO: these functions takes arguments, have to be supported in a different way\n    nextConfigSerializable.exportPathMap = {}\n    nextConfigSerializable.webpack = nextConfig.webpack && {}\n\n    if (nextConfigSerializable.experimental?.turbo?.rules) {\n      ensureLoadersHaveSerializableOptions(\n        nextConfigSerializable.experimental.turbo?.rules\n      )\n    }\n\n    nextConfigSerializable.modularizeImports =\n      nextConfigSerializable.modularizeImports\n        ? Object.fromEntries(\n            Object.entries<any>(nextConfigSerializable.modularizeImports).map(\n              ([mod, config]) => [\n                mod,\n                {\n                  ...config,\n                  transform:\n                    typeof config.transform === 'string'\n                      ? config.transform\n                      : Object.entries(config.transform).map(([key, value]) => [\n                          key,\n                          value,\n                        ]),\n                },\n              ]\n            )\n          )\n        : undefined\n\n    // loaderFile is an absolute path, we need it to be relative for turbopack.\n    if (nextConfigSerializable.images.loaderFile) {\n      nextConfigSerializable.images = {\n        ...nextConfig.images,\n        loaderFile:\n          './' + path.relative(projectPath, nextConfig.images.loaderFile),\n      }\n    }\n\n    return JSON.stringify(nextConfigSerializable, null, 2)\n  }\n\n  function ensureLoadersHaveSerializableOptions(\n    turbopackRules: Record<string, TurboRuleConfigItemOrShortcut>\n  ) {\n    for (const [glob, rule] of Object.entries(turbopackRules)) {\n      if (Array.isArray(rule)) {\n        checkLoaderItems(rule, glob)\n      } else {\n        checkConfigItem(rule, glob)\n      }\n    }\n\n    function checkConfigItem(rule: TurboRuleConfigItem, glob: string) {\n      if (!rule) return\n      if ('loaders' in rule) {\n        checkLoaderItems((rule as TurboRuleConfigItemOptions).loaders, glob)\n      } else {\n        for (const key in rule) {\n          const inner = rule[key]\n          if (typeof inner === 'object' && inner) {\n            checkConfigItem(inner, glob)\n          }\n        }\n      }\n    }\n\n    function checkLoaderItems(loaderItems: TurboLoaderItem[], glob: string) {\n      for (const loaderItem of loaderItems) {\n        if (\n          typeof loaderItem !== 'string' &&\n          !isDeepStrictEqual(loaderItem, JSON.parse(JSON.stringify(loaderItem)))\n        ) {\n          throw new Error(\n            `loader ${loaderItem.loader} for match \"${glob}\" does not have serializable options. Ensure that options passed are plain JavaScript objects and values.`\n          )\n        }\n      }\n    }\n  }\n\n  const createProject: Binding['turbo']['createProject'] = async (\n    options,\n    turboEngineOptions\n  ) => {\n    return new ProjectImpl(\n      await binding.projectNew(\n        await rustifyProjectOptions(options),\n        turboEngineOptions || {}\n      )\n    )\n  }\n\n  return createProject\n}\n\nasync function loadWasm(importPath = '') {\n  if (wasmBindings) {\n    return wasmBindings\n  }\n\n  let attempts = []\n  for (let pkg of ['@next/swc-wasm-nodejs', '@next/swc-wasm-web']) {\n    try {\n      let pkgPath = pkg\n\n      if (importPath) {\n        // the import path must be exact when not in node_modules\n        pkgPath = path.join(importPath, pkg, 'wasm.js')\n      }\n      let bindings = await import(pathToFileURL(pkgPath).toString())\n      if (pkg === '@next/swc-wasm-web') {\n        bindings = await bindings.default()\n      }\n      infoLog('next-swc build: wasm build @next/swc-wasm-web')\n\n      // Note wasm binary does not support async intefaces yet, all async\n      // interface coereces to sync interfaces.\n      wasmBindings = {\n        isWasm: true,\n        transform(src: string, options: any) {\n          // TODO: we can remove fallback to sync interface once new stable version of next-swc gets published (current v12.2)\n          return bindings?.transform\n            ? bindings.transform(src.toString(), options)\n            : Promise.resolve(bindings.transformSync(src.toString(), options))\n        },\n        transformSync(src: string, options: any) {\n          return bindings.transformSync(src.toString(), options)\n        },\n        minify(src: string, options: any) {\n          return bindings?.minify\n            ? bindings.minify(src.toString(), options)\n            : Promise.resolve(bindings.minifySync(src.toString(), options))\n        },\n        minifySync(src: string, options: any) {\n          return bindings.minifySync(src.toString(), options)\n        },\n        parse(src: string, options: any) {\n          return bindings?.parse\n            ? bindings.parse(src.toString(), options)\n            : Promise.resolve(bindings.parseSync(src.toString(), options))\n        },\n        getTargetTriple() {\n          return undefined\n        },\n        turbo: {\n          startTrace: () => {\n            Log.error('Wasm binding does not support trace yet')\n          },\n          entrypoints: {\n            stream: (\n              turboTasks: any,\n              rootDir: string,\n              applicationDir: string,\n              pageExtensions: PageExtensions,\n              callbackFn: (err: Error, entrypoints: any) => void\n            ) => {\n              return bindings.streamEntrypoints(\n                turboTasks,\n                rootDir,\n                applicationDir,\n                pageExtensions,\n                callbackFn\n              )\n            },\n            get: (\n              turboTasks: any,\n              rootDir: string,\n              applicationDir: string,\n              pageExtensions: PageExtensions\n            ) => {\n              return bindings.getEntrypoints(\n                turboTasks,\n                rootDir,\n                applicationDir,\n                pageExtensions\n              )\n            },\n          },\n        },\n        mdx: {\n          compile: (src: string, options: any) =>\n            bindings.mdxCompile(src, getMdxOptions(options)),\n          compileSync: (src: string, options: any) =>\n            bindings.mdxCompileSync(src, getMdxOptions(options)),\n        },\n      }\n      return wasmBindings\n    } catch (e: any) {\n      // Only log attempts for loading wasm when loading as fallback\n      if (importPath) {\n        if (e?.code === 'ERR_MODULE_NOT_FOUND') {\n          attempts.push(`Attempted to load ${pkg}, but it was not installed`)\n        } else {\n          attempts.push(\n            `Attempted to load ${pkg}, but an error occurred: ${e.message ?? e}`\n          )\n        }\n      }\n    }\n  }\n\n  throw attempts\n}\n\nfunction loadNative(importPath?: string) {\n  if (nativeBindings) {\n    return nativeBindings\n  }\n\n  const customBindings = !!__INTERNAL_CUSTOM_TURBOPACK_BINDINGS\n    ? require(__INTERNAL_CUSTOM_TURBOPACK_BINDINGS)\n    : null\n  let bindings: any = customBindings\n  let attempts: any[] = []\n\n  const NEXT_TEST_NATIVE_DIR = process.env.NEXT_TEST_NATIVE_DIR\n  for (const triple of triples) {\n    if (NEXT_TEST_NATIVE_DIR) {\n      try {\n        // Use the binary directly to skip `pnpm pack` for testing as it's slow because of the large native binary.\n        bindings = require(\n          `${NEXT_TEST_NATIVE_DIR}/next-swc.${triple.platformArchABI}.node`\n        )\n        infoLog(\n          'next-swc build: local built @next/swc from NEXT_TEST_NATIVE_DIR'\n        )\n        break\n      } catch (e) {}\n    } else {\n      try {\n        bindings = require(\n          `@next/swc/native/next-swc.${triple.platformArchABI}.node`\n        )\n        infoLog('next-swc build: local built @next/swc')\n        break\n      } catch (e) {}\n    }\n  }\n\n  if (!bindings) {\n    for (const triple of triples) {\n      let pkg = importPath\n        ? path.join(\n            importPath,\n            `@next/swc-${triple.platformArchABI}`,\n            `next-swc.${triple.platformArchABI}.node`\n          )\n        : `@next/swc-${triple.platformArchABI}`\n      try {\n        bindings = require(pkg)\n        if (!importPath) {\n          checkVersionMismatch(require(`${pkg}/package.json`))\n        }\n        break\n      } catch (e: any) {\n        if (e?.code === 'MODULE_NOT_FOUND') {\n          attempts.push(`Attempted to load ${pkg}, but it was not installed`)\n        } else {\n          attempts.push(\n            `Attempted to load ${pkg}, but an error occurred: ${e.message ?? e}`\n          )\n        }\n        lastNativeBindingsLoadErrorCode = e?.code ?? 'unknown'\n      }\n    }\n  }\n\n  if (bindings) {\n    nativeBindings = {\n      isWasm: false,\n      transform(src: string, options: any) {\n        const isModule =\n          typeof src !== 'undefined' &&\n          typeof src !== 'string' &&\n          !Buffer.isBuffer(src)\n        options = options || {}\n\n        if (options?.jsc?.parser) {\n          options.jsc.parser.syntax = options.jsc.parser.syntax ?? 'ecmascript'\n        }\n\n        return bindings.transform(\n          isModule ? JSON.stringify(src) : src,\n          isModule,\n          toBuffer(options)\n        )\n      },\n\n      transformSync(src: string, options: any) {\n        if (typeof src === 'undefined') {\n          throw new Error(\n            \"transformSync doesn't implement reading the file from filesystem\"\n          )\n        } else if (Buffer.isBuffer(src)) {\n          throw new Error(\n            \"transformSync doesn't implement taking the source code as Buffer\"\n          )\n        }\n        const isModule = typeof src !== 'string'\n        options = options || {}\n\n        if (options?.jsc?.parser) {\n          options.jsc.parser.syntax = options.jsc.parser.syntax ?? 'ecmascript'\n        }\n\n        return bindings.transformSync(\n          isModule ? JSON.stringify(src) : src,\n          isModule,\n          toBuffer(options)\n        )\n      },\n\n      minify(src: string, options: any) {\n        return bindings.minify(toBuffer(src), toBuffer(options ?? {}))\n      },\n\n      minifySync(src: string, options: any) {\n        return bindings.minifySync(toBuffer(src), toBuffer(options ?? {}))\n      },\n\n      parse(src: string, options: any) {\n        return bindings.parse(src, toBuffer(options ?? {}))\n      },\n\n      getTargetTriple: bindings.getTargetTriple,\n      initCustomTraceSubscriber: bindings.initCustomTraceSubscriber,\n      teardownTraceSubscriber: bindings.teardownTraceSubscriber,\n      initHeapProfiler: bindings.initHeapProfiler,\n      teardownHeapProfiler: bindings.teardownHeapProfiler,\n      turbo: {\n        startTrace: (options = {}, turboTasks: unknown) => {\n          initHeapProfiler()\n          return (customBindings ?? bindings).runTurboTracing(\n            toBuffer({ exact: true, ...options }),\n            turboTasks\n          )\n        },\n        createTurboTasks: (memoryLimit?: number): unknown =>\n          bindings.createTurboTasks(memoryLimit),\n        entrypoints: {\n          stream: (\n            turboTasks: any,\n            rootDir: string,\n            applicationDir: string,\n            pageExtensions: PageExtensions,\n            fn: (entrypoints: any) => void\n          ) => {\n            return (customBindings ?? bindings).streamEntrypoints(\n              turboTasks,\n              rootDir,\n              applicationDir,\n              pageExtensions,\n              fn\n            )\n          },\n          get: (\n            turboTasks: any,\n            rootDir: string,\n            applicationDir: string,\n            pageExtensions: PageExtensions\n          ) => {\n            return (customBindings ?? bindings).getEntrypoints(\n              turboTasks,\n              rootDir,\n              applicationDir,\n              pageExtensions\n            )\n          },\n        },\n        createProject: bindingToApi(customBindings ?? bindings, false),\n        startTurbopackTraceServer: (traceFilePath) => {\n          Log.warn(\n            'Turbopack trace server started. View trace at https://turbo-trace-viewer.vercel.app/'\n          )\n          ;(customBindings ?? bindings).startTurbopackTraceServer(traceFilePath)\n        },\n      },\n      mdx: {\n        compile: (src: string, options: any) =>\n          bindings.mdxCompile(src, toBuffer(getMdxOptions(options))),\n        compileSync: (src: string, options: any) =>\n          bindings.mdxCompileSync(src, toBuffer(getMdxOptions(options))),\n      },\n      css: {\n        lightning: {\n          transform: (transformOptions: any) =>\n            bindings.lightningCssTransform(transformOptions),\n          transformStyleAttr: (transformAttrOptions: any) =>\n            bindings.lightningCssTransformStyleAttribute(transformAttrOptions),\n        },\n      },\n    }\n    return nativeBindings\n  }\n\n  throw attempts\n}\n\n/// Build a mdx options object contains default values that\n/// can be parsed with serde_wasm_bindgen.\nfunction getMdxOptions(options: any = {}) {\n  return {\n    ...options,\n    development: options.development ?? false,\n    jsx: options.jsx ?? false,\n    mdxType: options.mdxType ?? 'commonMark',\n  }\n}\n\nfunction toBuffer(t: any) {\n  return Buffer.from(JSON.stringify(t))\n}\n\nexport async function isWasm(): Promise<boolean> {\n  let bindings = await loadBindings()\n  return bindings.isWasm\n}\n\nexport async function transform(src: string, options?: any): Promise<any> {\n  let bindings = await loadBindings()\n  return bindings.transform(src, options)\n}\n\nexport function transformSync(src: string, options?: any): any {\n  let bindings = loadBindingsSync()\n  return bindings.transformSync(src, options)\n}\n\nexport async function minify(src: string, options: any): Promise<string> {\n  let bindings = await loadBindings()\n  return bindings.minify(src, options)\n}\n\nexport function minifySync(src: string, options: any): string {\n  let bindings = loadBindingsSync()\n  return bindings.minifySync(src, options)\n}\n\nexport async function parse(src: string, options: any): Promise<any> {\n  let bindings = await loadBindings()\n  let parserOptions = getParserOptions(options)\n  return bindings\n    .parse(src, parserOptions)\n    .then((astStr: any) => JSON.parse(astStr))\n}\n\nexport function getBinaryMetadata() {\n  let bindings\n  try {\n    bindings = loadNative()\n  } catch (e) {\n    // Suppress exceptions, this fn allows to fail to load native bindings\n  }\n\n  return {\n    target: bindings?.getTargetTriple?.(),\n  }\n}\n\n/**\n * Initialize trace subscriber to emit traces.\n *\n */\nexport const initCustomTraceSubscriber = (traceFileName?: string): void => {\n  if (!swcTraceFlushGuard) {\n    // Wasm binary doesn't support trace emission\n    let bindings = loadNative()\n    swcTraceFlushGuard = bindings.initCustomTraceSubscriber(traceFileName)\n  }\n}\n\n/**\n * Initialize heap profiler, if possible.\n * Note this is not available in release build of next-swc by default,\n * only available by manually building next-swc with specific flags.\n * Calling in release build will not do anything.\n */\nexport const initHeapProfiler = () => {\n  try {\n    if (!swcHeapProfilerFlushGuard) {\n      let bindings = loadNative()\n      swcHeapProfilerFlushGuard = bindings.initHeapProfiler()\n    }\n  } catch (_) {\n    // Suppress exceptions, this fn allows to fail to load native bindings\n  }\n}\n\n/**\n * Teardown heap profiler, if possible.\n *\n * Same as initialization, this is not available in release build of next-swc by default\n * and calling it will not do anything.\n */\nexport const teardownHeapProfiler = (() => {\n  let flushed = false\n  return (): void => {\n    if (!flushed) {\n      flushed = true\n      try {\n        let bindings = loadNative()\n        if (swcHeapProfilerFlushGuard) {\n          bindings.teardownHeapProfiler(swcHeapProfilerFlushGuard)\n        }\n      } catch (e) {\n        // Suppress exceptions, this fn allows to fail to load native bindings\n      }\n    }\n  }\n})()\n\n/**\n * Teardown swc's trace subscriber if there's an initialized flush guard exists.\n *\n * This is workaround to amend behavior with process.exit\n * (https://github.com/vercel/next.js/blob/4db8c49cc31e4fc182391fae6903fb5ef4e8c66e/packages/next/bin/next.ts#L134=)\n * seems preventing napi's cleanup hook execution (https://github.com/swc-project/swc/blob/main/crates/node/src/util.rs#L48-L51=),\n *\n * instead parent process manually drops guard when process gets signal to exit.\n */\nexport const teardownTraceSubscriber = (() => {\n  let flushed = false\n  return (): void => {\n    if (!flushed) {\n      flushed = true\n      try {\n        let bindings = loadNative()\n        if (swcTraceFlushGuard) {\n          bindings.teardownTraceSubscriber(swcTraceFlushGuard)\n        }\n      } catch (e) {\n        // Suppress exceptions, this fn allows to fail to load native bindings\n      }\n    }\n  }\n})()\n"],"names":["path","pathToFileURL","arch","platform","platformArchTriples","Log","getParserOptions","eventSwcLoadFailure","patchIncorrectLockfile","downloadNativeNextSwc","downloadWasmSwc","isDeepStrictEqual","getDefineEnv","getReactCompilerLoader","TurbopackInternalError","nextVersion","process","env","__NEXT_VERSION","ArchName","PlatformName","infoLog","args","NEXT_PRIVATE_BUILD_WORKER","DEBUG","info","getSupportedArchTriples","darwin","win32","linux","freebsd","android","arm64","ia32","filter","triple","abi","x64","arm","triples","supportedArchTriples","targetTriple","rawTargetTriple","warn","__INTERNAL_CUSTOM_TURBOPACK_BINDINGS","checkVersionMismatch","pkgData","version","knownDefaultWasmFallbackTriples","lastNativeBindingsLoadErrorCode","undefined","nativeBindings","wasmBindings","downloadWasmPromise","pendingBindings","swcTraceFlushGuard","swcHeapProfilerFlushGuard","downloadNativeBindingsPromise","lockfilePatchPromise","loadBindings","useWasmBinary","RUST_MIN_STACK","stdout","_handle","setBlocking","stderr","Promise","resolve","_reject","cur","cwd","catch","console","error","attempts","disableWasmFallback","NEXT_DISABLE_SWC_WASM","unsupportedPlatform","some","raw","includes","isWebContainer","versions","webcontainer","shouldLoadWasmFallbackFirst","fallbackBindings","tryLoadWasmWithFallback","loadNative","a","Array","isArray","every","m","tryLoadNativeWithFallback","concat","logLoadFailure","nativeBindingsDirectory","join","dirname","require","map","platformArchABI","bindings","loadWasm","wasm","nativeBindingsErrorCode","wasmDirectory","attempt","loadBindingsSync","loggingLoadFailure","triedWasm","then","finally","exit","createDefineEnv","isTurbopack","clientRouterFilters","config","dev","distDir","fetchCacheKeyPrefix","hasRewrites","middlewareMatchers","defineEnv","client","edge","nodejs","variant","Object","keys","rustifyEnv","isClient","isEdgeServer","isNodeOrEdgeCompilation","isNodeServer","entries","_","value","name","bindingToApi","binding","_wasm","cancel","Cancel","Error","invariant","never","computeMessage","withErrorCause","fn","nativeError","message","cause","subscribe","useBuffer","nativeFunction","buffer","waiting","canceled","emitResult","err","reject","item","push","iterator","task","length","shift","e","rootTaskDispose","return","done","rustifyProjectOptions","options","nextConfig","serializeNextConfig","projectPath","jsConfig","JSON","stringify","ProjectImpl","constructor","nativeProject","_nativeProject","update","projectUpdate","entrypointsSubscribe","subscription","callback","projectEntrypointsSubscribe","entrypoints","routes","Map","pathname","nativeRoute","route","routeType","type","htmlEndpoint","EndpointImpl","dataEndpoint","endpoint","pages","page","originalName","rscEndpoint","_exhaustiveCheck","set","napiMiddlewareToMiddleware","middleware","runtime","matcher","napiInstrumentationToInstrumentation","instrumentation","nodeJs","pagesDocumentEndpoint","pagesAppEndpoint","pagesErrorEndpoint","issues","diagnostics","hmrEvents","identifier","projectHmrEvents","hmrIdentifiersSubscribe","projectHmrIdentifiersSubscribe","traceSource","stackFrame","projectTraceSource","getSourceForAsset","filePath","projectGetSourceForAsset","updateInfoSubscribe","aggregationMs","projectUpdateInfoSubscribe","onExit","projectOnExit","nativeEndpoint","_nativeEndpoint","writeToDisk","endpointWriteToDisk","clientChanged","clientSubscription","endpointClientChangedSubscribe","next","serverChanged","includeIssues","serverSubscription","endpointServerChangedSubscribe","augmentNextConfig","originalNextConfig","reactCompilerOptions","experimental","reactCompiler","ruleKeys","turbo","rules","key","browser","foreign","loaders","nextConfigSerializable","generateBuildId","exportPathMap","webpack","ensureLoadersHaveSerializableOptions","modularizeImports","fromEntries","mod","transform","images","loaderFile","relative","turbopackRules","glob","rule","checkLoaderItems","checkConfigItem","inner","loaderItems","loaderItem","parse","loader","createProject","turboEngineOptions","projectNew","importPath","pkg","pkgPath","toString","default","isWasm","src","transformSync","minify","minifySync","parseSync","getTargetTriple","startTrace","stream","turboTasks","rootDir","applicationDir","pageExtensions","callbackFn","streamEntrypoints","get","getEntrypoints","mdx","compile","mdxCompile","getMdxOptions","compileSync","mdxCompileSync","code","customBindings","NEXT_TEST_NATIVE_DIR","isModule","Buffer","isBuffer","jsc","parser","syntax","toBuffer","initCustomTraceSubscriber","teardownTraceSubscriber","initHeapProfiler","teardownHeapProfiler","runTurboTracing","exact","createTurboTasks","memoryLimit","startTurbopackTraceServer","traceFilePath","css","lightning","transformOptions","lightningCssTransform","transformStyleAttr","transformAttrOptions","lightningCssTransformStyleAttribute","development","jsx","mdxType","t","from","parserOptions","astStr","getBinaryMetadata","target","traceFileName","flushed"],"mappings":"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"}