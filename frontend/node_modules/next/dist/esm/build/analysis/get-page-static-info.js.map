{"version":3,"sources":["../../../src/build/analysis/get-page-static-info.ts"],"sourcesContent":["import type { NextConfig } from '../../server/config-shared'\nimport type { Middleware, RouteHas } from '../../lib/load-custom-routes'\n\nimport { promises as fs } from 'fs'\nimport LRUCache from 'next/dist/compiled/lru-cache'\nimport picomatch from 'next/dist/compiled/picomatch'\nimport type { ServerRuntime } from '../../types'\nimport {\n  extractExportedConstValue,\n  UnsupportedValueError,\n} from './extract-const-value'\nimport { parseModule } from './parse-module'\nimport * as Log from '../output/log'\nimport { SERVER_RUNTIME } from '../../lib/constants'\nimport { checkCustomRoutes } from '../../lib/load-custom-routes'\nimport { tryToParsePath } from '../../lib/try-to-parse-path'\nimport { isAPIRoute } from '../../lib/is-api-route'\nimport { isEdgeRuntime } from '../../lib/is-edge-runtime'\nimport { RSC_MODULE_TYPES } from '../../shared/lib/constants'\nimport type { RSCMeta } from '../webpack/loaders/get-module-build-info'\nimport { PAGE_TYPES } from '../../lib/page-types'\n\n// TODO: migrate preferredRegion here\n// Don't forget to update the next-types-plugin file as well\nconst AUTHORIZED_EXTRA_ROUTER_PROPS = ['maxDuration']\n\nexport interface MiddlewareConfigParsed\n  extends Omit<MiddlewareConfig, 'matcher'> {\n  matchers?: MiddlewareMatcher[]\n}\n\n/**\n * This interface represents the exported `config` object in a `middleware.ts` file.\n *\n * Read more: [Next.js Docs: Middleware `config` object](https://nextjs.org/docs/app/api-reference/file-conventions/middleware#config-object-optional)\n */\nexport interface MiddlewareConfig {\n  /**\n   * Read more: [Next.js Docs: Middleware `matcher`](https://nextjs.org/docs/app/api-reference/file-conventions/middleware#matcher),\n   * [Next.js Docs: Middleware matching paths](https://nextjs.org/docs/app/building-your-application/routing/middleware#matching-paths)\n   */\n  matcher?: string | string[] | MiddlewareMatcher[]\n  unstable_allowDynamicGlobs?: string[]\n  regions?: string[] | string\n}\n\nexport interface MiddlewareMatcher {\n  regexp: string\n  locale?: false\n  has?: RouteHas[]\n  missing?: RouteHas[]\n  originalSource: string\n}\n\nexport interface PageStaticInfo {\n  runtime?: ServerRuntime\n  preferredRegion?: string | string[]\n  ssg?: boolean\n  ssr?: boolean\n  rsc?: RSCModuleType\n  generateStaticParams?: boolean\n  generateSitemaps?: boolean\n  generateImageMetadata?: boolean\n  middleware?: MiddlewareConfigParsed\n  amp?: boolean | 'hybrid'\n  extraConfig?: Record<string, any>\n}\n\nconst CLIENT_MODULE_LABEL =\n  /\\/\\* __next_internal_client_entry_do_not_use__ ([^ ]*) (cjs|auto) \\*\\//\n\nconst ACTION_MODULE_LABEL =\n  /\\/\\* __next_internal_action_entry_do_not_use__ (\\{[^}]+\\}) \\*\\//\n\nconst CLIENT_DIRECTIVE = 'use client'\nconst SERVER_ACTION_DIRECTIVE = 'use server'\n\nexport type RSCModuleType = 'server' | 'client'\nexport function getRSCModuleInformation(\n  source: string,\n  isReactServerLayer: boolean\n): RSCMeta {\n  const actionsJson = source.match(ACTION_MODULE_LABEL)\n  const actions = actionsJson\n    ? (Object.values(JSON.parse(actionsJson[1])) as string[])\n    : undefined\n  const clientInfoMatch = source.match(CLIENT_MODULE_LABEL)\n  const isClientRef = !!clientInfoMatch\n\n  if (!isReactServerLayer) {\n    return {\n      type: RSC_MODULE_TYPES.client,\n      actions,\n      isClientRef,\n    }\n  }\n\n  const clientRefs = clientInfoMatch?.[1]?.split(',')\n  const clientEntryType = clientInfoMatch?.[2] as 'cjs' | 'auto'\n\n  const type = clientRefs ? RSC_MODULE_TYPES.client : RSC_MODULE_TYPES.server\n\n  return {\n    type,\n    actions,\n    clientRefs,\n    clientEntryType,\n    isClientRef,\n  }\n}\n\nconst warnedInvalidValueMap = {\n  runtime: new Map<string, boolean>(),\n  preferredRegion: new Map<string, boolean>(),\n} as const\nfunction warnInvalidValue(\n  pageFilePath: string,\n  key: keyof typeof warnedInvalidValueMap,\n  message: string\n): void {\n  if (warnedInvalidValueMap[key].has(pageFilePath)) return\n\n  Log.warn(\n    `Next.js can't recognize the exported \\`${key}\\` field in \"${pageFilePath}\" as ${message}.` +\n      '\\n' +\n      'The default runtime will be used instead.'\n  )\n\n  warnedInvalidValueMap[key].set(pageFilePath, true)\n}\n/**\n * Receives a parsed AST from SWC and checks if it belongs to a module that\n * requires a runtime to be specified. Those are:\n *   - Modules with `export function getStaticProps | getServerSideProps`\n *   - Modules with `export { getStaticProps | getServerSideProps } <from ...>`\n *   - Modules with `export const runtime = ...`\n */\nfunction checkExports(\n  swcAST: any,\n  pageFilePath: string\n): {\n  ssr: boolean\n  ssg: boolean\n  runtime?: string\n  preferredRegion?: string | string[]\n  generateImageMetadata: boolean\n  generateSitemaps: boolean\n  generateStaticParams: boolean\n  extraProperties?: Set<string>\n  directives?: Set<string>\n} {\n  const exportsSet = new Set<string>([\n    'getStaticProps',\n    'getServerSideProps',\n    'generateImageMetadata',\n    'generateSitemaps',\n    'generateStaticParams',\n  ])\n  if (Array.isArray(swcAST?.body)) {\n    try {\n      let runtime: string | undefined\n      let preferredRegion: string | string[] | undefined\n      let ssr: boolean = false\n      let ssg: boolean = false\n      let generateImageMetadata: boolean = false\n      let generateSitemaps: boolean = false\n      let generateStaticParams = false\n      let extraProperties = new Set<string>()\n      let directives = new Set<string>()\n      let hasLeadingNonDirectiveNode = false\n\n      for (const node of swcAST.body) {\n        // There should be no non-string literals nodes before directives\n        if (\n          node.type === 'ExpressionStatement' &&\n          node.expression.type === 'StringLiteral'\n        ) {\n          if (!hasLeadingNonDirectiveNode) {\n            const directive = node.expression.value\n            if (CLIENT_DIRECTIVE === directive) {\n              directives.add('client')\n            }\n            if (SERVER_ACTION_DIRECTIVE === directive) {\n              directives.add('server')\n            }\n          }\n        } else {\n          hasLeadingNonDirectiveNode = true\n        }\n        if (\n          node.type === 'ExportDeclaration' &&\n          node.declaration?.type === 'VariableDeclaration'\n        ) {\n          for (const declaration of node.declaration?.declarations) {\n            if (declaration.id.value === 'runtime') {\n              runtime = declaration.init.value\n            } else if (declaration.id.value === 'preferredRegion') {\n              if (declaration.init.type === 'ArrayExpression') {\n                const elements: string[] = []\n                for (const element of declaration.init.elements) {\n                  const { expression } = element\n                  if (expression.type !== 'StringLiteral') {\n                    continue\n                  }\n                  elements.push(expression.value)\n                }\n                preferredRegion = elements\n              } else {\n                preferredRegion = declaration.init.value\n              }\n            } else {\n              extraProperties.add(declaration.id.value)\n            }\n          }\n        }\n\n        if (\n          node.type === 'ExportDeclaration' &&\n          node.declaration?.type === 'FunctionDeclaration' &&\n          exportsSet.has(node.declaration.identifier?.value)\n        ) {\n          const id = node.declaration.identifier.value\n          ssg = id === 'getStaticProps'\n          ssr = id === 'getServerSideProps'\n          generateImageMetadata = id === 'generateImageMetadata'\n          generateSitemaps = id === 'generateSitemaps'\n          generateStaticParams = id === 'generateStaticParams'\n        }\n\n        if (\n          node.type === 'ExportDeclaration' &&\n          node.declaration?.type === 'VariableDeclaration'\n        ) {\n          const id = node.declaration?.declarations[0]?.id.value\n          if (exportsSet.has(id)) {\n            ssg = id === 'getStaticProps'\n            ssr = id === 'getServerSideProps'\n            generateImageMetadata = id === 'generateImageMetadata'\n            generateSitemaps = id === 'generateSitemaps'\n            generateStaticParams = id === 'generateStaticParams'\n          }\n        }\n\n        if (node.type === 'ExportNamedDeclaration') {\n          const values = node.specifiers.map(\n            (specifier: any) =>\n              specifier.type === 'ExportSpecifier' &&\n              specifier.orig?.type === 'Identifier' &&\n              specifier.orig?.value\n          )\n\n          for (const value of values) {\n            if (!ssg && value === 'getStaticProps') ssg = true\n            if (!ssr && value === 'getServerSideProps') ssr = true\n            if (!generateImageMetadata && value === 'generateImageMetadata')\n              generateImageMetadata = true\n            if (!generateSitemaps && value === 'generateSitemaps')\n              generateSitemaps = true\n            if (!generateStaticParams && value === 'generateStaticParams')\n              generateStaticParams = true\n            if (!runtime && value === 'runtime')\n              warnInvalidValue(\n                pageFilePath,\n                'runtime',\n                'it was not assigned to a string literal'\n              )\n            if (!preferredRegion && value === 'preferredRegion')\n              warnInvalidValue(\n                pageFilePath,\n                'preferredRegion',\n                'it was not assigned to a string literal or an array of string literals'\n              )\n          }\n        }\n      }\n\n      return {\n        ssr,\n        ssg,\n        runtime,\n        preferredRegion,\n        generateImageMetadata,\n        generateSitemaps,\n        generateStaticParams,\n        extraProperties,\n        directives,\n      }\n    } catch (err) {}\n  }\n\n  return {\n    ssg: false,\n    ssr: false,\n    runtime: undefined,\n    preferredRegion: undefined,\n    generateImageMetadata: false,\n    generateSitemaps: false,\n    generateStaticParams: false,\n    extraProperties: undefined,\n    directives: undefined,\n  }\n}\n\nasync function tryToReadFile(filePath: string, shouldThrow: boolean) {\n  try {\n    return await fs.readFile(filePath, {\n      encoding: 'utf8',\n    })\n  } catch (error: any) {\n    if (shouldThrow) {\n      error.message = `Next.js ERROR: Failed to read file ${filePath}:\\n${error.message}`\n      throw error\n    }\n  }\n}\n\nexport function getMiddlewareMatchers(\n  matcherOrMatchers: unknown,\n  nextConfig: Pick<NextConfig, 'basePath' | 'i18n'>\n): MiddlewareMatcher[] {\n  let matchers: unknown[] = []\n  if (Array.isArray(matcherOrMatchers)) {\n    matchers = matcherOrMatchers\n  } else {\n    matchers.push(matcherOrMatchers)\n  }\n  const { i18n } = nextConfig\n\n  const originalSourceMap = new Map<Middleware, string>()\n  let routes = matchers.map((m) => {\n    let middleware = (typeof m === 'string' ? { source: m } : m) as Middleware\n    if (middleware) {\n      originalSourceMap.set(middleware, middleware.source)\n    }\n    return middleware\n  })\n\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(routes, 'middleware')\n\n  routes = routes.map((r) => {\n    let { source } = r\n\n    const isRoot = source === '/'\n\n    if (i18n?.locales && r.locale !== false) {\n      source = `/:nextInternalLocale((?!_next/)[^/.]{1,})${\n        isRoot ? '' : source\n      }`\n    }\n\n    source = `/:nextData(_next/data/[^/]{1,})?${source}${\n      isRoot\n        ? `(${nextConfig.i18n ? '|\\\\.json|' : ''}/?index|/?index\\\\.json)?`\n        : '(.json)?'\n    }`\n\n    if (nextConfig.basePath) {\n      source = `${nextConfig.basePath}${source}`\n    }\n\n    r.source = source\n    return r\n  })\n\n  checkCustomRoutes(routes, 'middleware')\n\n  return routes.map((r) => {\n    const { source, ...rest } = r\n    const parsedPage = tryToParsePath(source)\n\n    if (parsedPage.error || !parsedPage.regexStr) {\n      throw new Error(`Invalid source: ${source}`)\n    }\n\n    const originalSource = originalSourceMap.get(r)\n\n    return {\n      ...rest,\n      regexp: parsedPage.regexStr,\n      originalSource: originalSource || source,\n    }\n  })\n}\n\nfunction getMiddlewareConfig(\n  pageFilePath: string,\n  config: any,\n  nextConfig: NextConfig\n): Partial<MiddlewareConfigParsed> {\n  const result: Partial<MiddlewareConfigParsed> = {}\n\n  if (config.matcher) {\n    result.matchers = getMiddlewareMatchers(config.matcher, nextConfig)\n  }\n\n  if (typeof config.regions === 'string' || Array.isArray(config.regions)) {\n    result.regions = config.regions\n  } else if (typeof config.regions !== 'undefined') {\n    Log.warn(\n      `The \\`regions\\` config was ignored: config must be empty, a string or an array of strings. (${pageFilePath})`\n    )\n  }\n\n  if (config.unstable_allowDynamic) {\n    result.unstable_allowDynamicGlobs = Array.isArray(\n      config.unstable_allowDynamic\n    )\n      ? config.unstable_allowDynamic\n      : [config.unstable_allowDynamic]\n    for (const glob of result.unstable_allowDynamicGlobs ?? []) {\n      try {\n        picomatch(glob)\n      } catch (err) {\n        throw new Error(\n          `${pageFilePath} exported 'config.unstable_allowDynamic' contains invalid pattern '${glob}': ${\n            (err as Error).message\n          }`\n        )\n      }\n    }\n  }\n\n  return result\n}\n\nconst apiRouteWarnings = new LRUCache({ max: 250 })\nfunction warnAboutExperimentalEdge(apiRoute: string | null) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    process.env.NEXT_PRIVATE_BUILD_WORKER === '1'\n  ) {\n    return\n  }\n  if (apiRouteWarnings.has(apiRoute)) {\n    return\n  }\n  Log.warn(\n    apiRoute\n      ? `${apiRoute} provided runtime 'experimental-edge'. It can be updated to 'edge' instead.`\n      : `You are using an experimental edge runtime, the API might change.`\n  )\n  apiRouteWarnings.set(apiRoute, 1)\n}\n\nconst warnedUnsupportedValueMap = new LRUCache<string, boolean>({ max: 250 })\n\nfunction warnAboutUnsupportedValue(\n  pageFilePath: string,\n  page: string | undefined,\n  error: UnsupportedValueError\n) {\n  if (warnedUnsupportedValueMap.has(pageFilePath)) {\n    return\n  }\n\n  Log.warn(\n    `Next.js can't recognize the exported \\`config\\` field in ` +\n      (page ? `route \"${page}\"` : `\"${pageFilePath}\"`) +\n      ':\\n' +\n      error.message +\n      (error.path ? ` at \"${error.path}\"` : '') +\n      '.\\n' +\n      'The default config will be used instead.\\n' +\n      'Read More - https://nextjs.org/docs/messages/invalid-page-config'\n  )\n\n  warnedUnsupportedValueMap.set(pageFilePath, true)\n}\n\n/**\n * For a given pageFilePath and nextConfig, if the config supports it, this\n * function will read the file and return the runtime that should be used.\n * It will look into the file content only if the page *requires* a runtime\n * to be specified, that is, when gSSP or gSP is used.\n * Related discussion: https://github.com/vercel/next.js/discussions/34179\n */\nexport async function getPageStaticInfo(params: {\n  pageFilePath: string\n  nextConfig: Partial<NextConfig>\n  isDev?: boolean\n  page?: string\n  pageType: PAGE_TYPES\n}): Promise<PageStaticInfo> {\n  const { isDev, pageFilePath, nextConfig, page, pageType } = params\n\n  const fileContent = (await tryToReadFile(pageFilePath, !isDev)) || ''\n  if (\n    /(?<!(_jsx|jsx-))runtime|preferredRegion|getStaticProps|getServerSideProps|generateStaticParams|export const|generateImageMetadata|generateSitemaps/.test(\n      fileContent\n    )\n  ) {\n    const swcAST = await parseModule(pageFilePath, fileContent)\n    const {\n      ssg,\n      ssr,\n      runtime,\n      preferredRegion,\n      generateStaticParams,\n      generateImageMetadata,\n      generateSitemaps,\n      extraProperties,\n      directives,\n    } = checkExports(swcAST, pageFilePath)\n    const rscInfo = getRSCModuleInformation(fileContent, true)\n    const rsc = rscInfo.type\n\n    // default / failsafe value for config\n    let config: any // TODO: type this as unknown\n    try {\n      config = extractExportedConstValue(swcAST, 'config')\n    } catch (e) {\n      if (e instanceof UnsupportedValueError) {\n        warnAboutUnsupportedValue(pageFilePath, page, e)\n      }\n      // `export config` doesn't exist, or other unknown error thrown by swc, silence them\n    }\n\n    const extraConfig: Record<string, any> = {}\n\n    if (extraProperties && pageType === PAGE_TYPES.APP) {\n      for (const prop of extraProperties) {\n        if (!AUTHORIZED_EXTRA_ROUTER_PROPS.includes(prop)) continue\n        try {\n          extraConfig[prop] = extractExportedConstValue(swcAST, prop)\n        } catch (e) {\n          if (e instanceof UnsupportedValueError) {\n            warnAboutUnsupportedValue(pageFilePath, page, e)\n          }\n        }\n      }\n    } else if (pageType === PAGE_TYPES.PAGES) {\n      for (const key in config) {\n        if (!AUTHORIZED_EXTRA_ROUTER_PROPS.includes(key)) continue\n        extraConfig[key] = config[key]\n      }\n    }\n\n    if (pageType === PAGE_TYPES.APP) {\n      if (config) {\n        let message = `Page config in ${pageFilePath} is deprecated. Replace \\`export const config=…\\` with the following:`\n\n        if (config.runtime) {\n          message += `\\n  - \\`export const runtime = ${JSON.stringify(\n            config.runtime\n          )}\\``\n        }\n\n        if (config.regions) {\n          message += `\\n  - \\`export const preferredRegion = ${JSON.stringify(\n            config.regions\n          )}\\``\n        }\n\n        message += `\\nVisit https://nextjs.org/docs/app/api-reference/file-conventions/route-segment-config for more information.`\n\n        if (isDev) {\n          Log.warnOnce(message)\n        } else {\n          throw new Error(message)\n        }\n        config = {}\n      }\n    }\n    if (!config) config = {}\n\n    // We use `export const config = { runtime: '...' }` to specify the page runtime for pages/.\n    // In the new app directory, we prefer to use `export const runtime = '...'`\n    // and deprecate the old way. To prevent breaking changes for `pages`, we use the exported config\n    // as the fallback value.\n    let resolvedRuntime\n    if (pageType === PAGE_TYPES.APP) {\n      resolvedRuntime = runtime\n    } else {\n      resolvedRuntime = runtime || config.runtime\n    }\n\n    if (\n      typeof resolvedRuntime !== 'undefined' &&\n      resolvedRuntime !== SERVER_RUNTIME.nodejs &&\n      !isEdgeRuntime(resolvedRuntime)\n    ) {\n      const options = Object.values(SERVER_RUNTIME).join(', ')\n      const message =\n        typeof resolvedRuntime !== 'string'\n          ? `The \\`runtime\\` config must be a string. Please leave it empty or choose one of: ${options}`\n          : `Provided runtime \"${resolvedRuntime}\" is not supported. Please leave it empty or choose one of: ${options}`\n      if (isDev) {\n        Log.error(message)\n      } else {\n        throw new Error(message)\n      }\n    }\n\n    const requiresServerRuntime = ssr || ssg || pageType === PAGE_TYPES.APP\n\n    const isAnAPIRoute = isAPIRoute(page?.replace(/^(?:\\/src)?\\/pages\\//, '/'))\n\n    resolvedRuntime =\n      isEdgeRuntime(resolvedRuntime) || requiresServerRuntime\n        ? resolvedRuntime\n        : undefined\n\n    if (resolvedRuntime === SERVER_RUNTIME.experimentalEdge) {\n      warnAboutExperimentalEdge(isAnAPIRoute ? page! : null)\n    }\n\n    if (\n      resolvedRuntime === SERVER_RUNTIME.edge &&\n      pageType === PAGE_TYPES.PAGES &&\n      page &&\n      !isAnAPIRoute\n    ) {\n      const message = `Page ${page} provided runtime 'edge', the edge runtime for rendering is currently experimental. Use runtime 'experimental-edge' instead.`\n      if (isDev) {\n        Log.error(message)\n      } else {\n        throw new Error(message)\n      }\n    }\n\n    const middlewareConfig = getMiddlewareConfig(\n      page ?? 'middleware/edge API route',\n      config,\n      nextConfig\n    )\n\n    if (\n      pageType === PAGE_TYPES.APP &&\n      directives?.has('client') &&\n      generateStaticParams\n    ) {\n      throw new Error(\n        `Page \"${page}\" cannot use both \"use client\" and export function \"generateStaticParams()\".`\n      )\n    }\n\n    return {\n      ssr,\n      ssg,\n      rsc,\n      generateStaticParams,\n      generateImageMetadata,\n      generateSitemaps,\n      amp: config.amp || false,\n      ...(middlewareConfig && { middleware: middlewareConfig }),\n      ...(resolvedRuntime && { runtime: resolvedRuntime }),\n      preferredRegion,\n      extraConfig,\n    }\n  }\n\n  return {\n    ssr: false,\n    ssg: false,\n    rsc: RSC_MODULE_TYPES.server,\n    generateStaticParams: false,\n    generateImageMetadata: false,\n    generateSitemaps: false,\n    amp: false,\n    runtime: undefined,\n  }\n}\n"],"names":["promises","fs","LRUCache","picomatch","extractExportedConstValue","UnsupportedValueError","parseModule","Log","SERVER_RUNTIME","checkCustomRoutes","tryToParsePath","isAPIRoute","isEdgeRuntime","RSC_MODULE_TYPES","PAGE_TYPES","AUTHORIZED_EXTRA_ROUTER_PROPS","CLIENT_MODULE_LABEL","ACTION_MODULE_LABEL","CLIENT_DIRECTIVE","SERVER_ACTION_DIRECTIVE","getRSCModuleInformation","source","isReactServerLayer","clientInfoMatch","actionsJson","match","actions","Object","values","JSON","parse","undefined","isClientRef","type","client","clientRefs","split","clientEntryType","server","warnedInvalidValueMap","runtime","Map","preferredRegion","warnInvalidValue","pageFilePath","key","message","has","warn","set","checkExports","swcAST","exportsSet","Set","Array","isArray","body","ssr","ssg","generateImageMetadata","generateSitemaps","generateStaticParams","extraProperties","directives","hasLeadingNonDirectiveNode","node","expression","directive","value","add","declaration","declarations","id","init","elements","element","push","identifier","specifiers","map","specifier","orig","err","tryToReadFile","filePath","shouldThrow","readFile","encoding","error","getMiddlewareMatchers","matcherOrMatchers","nextConfig","matchers","i18n","originalSourceMap","routes","m","middleware","r","isRoot","locales","locale","basePath","rest","parsedPage","regexStr","Error","originalSource","get","regexp","getMiddlewareConfig","config","result","matcher","regions","unstable_allowDynamic","unstable_allowDynamicGlobs","glob","apiRouteWarnings","max","warnAboutExperimentalEdge","apiRoute","process","env","NODE_ENV","NEXT_PRIVATE_BUILD_WORKER","warnedUnsupportedValueMap","warnAboutUnsupportedValue","page","path","getPageStaticInfo","params","isDev","pageType","fileContent","test","rscInfo","rsc","e","extraConfig","APP","prop","includes","PAGES","stringify","warnOnce","resolvedRuntime","nodejs","options","join","requiresServerRuntime","isAnAPIRoute","replace","experimentalEdge","edge","middlewareConfig","amp"],"mappings":"AAGA,SAASA,YAAYC,EAAE,QAAQ,KAAI;AACnC,OAAOC,cAAc,+BAA8B;AACnD,OAAOC,eAAe,+BAA8B;AAEpD,SACEC,yBAAyB,EACzBC,qBAAqB,QAChB,wBAAuB;AAC9B,SAASC,WAAW,QAAQ,iBAAgB;AAC5C,YAAYC,SAAS,gBAAe;AACpC,SAASC,cAAc,QAAQ,sBAAqB;AACpD,SAASC,iBAAiB,QAAQ,+BAA8B;AAChE,SAASC,cAAc,QAAQ,8BAA6B;AAC5D,SAASC,UAAU,QAAQ,yBAAwB;AACnD,SAASC,aAAa,QAAQ,4BAA2B;AACzD,SAASC,gBAAgB,QAAQ,6BAA4B;AAE7D,SAASC,UAAU,QAAQ,uBAAsB;AAEjD,qCAAqC;AACrC,4DAA4D;AAC5D,MAAMC,gCAAgC;IAAC;CAAc;AA4CrD,MAAMC,sBACJ;AAEF,MAAMC,sBACJ;AAEF,MAAMC,mBAAmB;AACzB,MAAMC,0BAA0B;AAGhC,OAAO,SAASC,wBACdC,MAAc,EACdC,kBAA2B;QAiBRC;IAfnB,MAAMC,cAAcH,OAAOI,KAAK,CAACR;IACjC,MAAMS,UAAUF,cACXG,OAAOC,MAAM,CAACC,KAAKC,KAAK,CAACN,WAAW,CAAC,EAAE,KACxCO;IACJ,MAAMR,kBAAkBF,OAAOI,KAAK,CAACT;IACrC,MAAMgB,cAAc,CAAC,CAACT;IAEtB,IAAI,CAACD,oBAAoB;QACvB,OAAO;YACLW,MAAMpB,iBAAiBqB,MAAM;YAC7BR;YACAM;QACF;IACF;IAEA,MAAMG,aAAaZ,oCAAAA,oBAAAA,eAAiB,CAAC,EAAE,qBAApBA,kBAAsBa,KAAK,CAAC;IAC/C,MAAMC,kBAAkBd,mCAAAA,eAAiB,CAAC,EAAE;IAE5C,MAAMU,OAAOE,aAAatB,iBAAiBqB,MAAM,GAAGrB,iBAAiByB,MAAM;IAE3E,OAAO;QACLL;QACAP;QACAS;QACAE;QACAL;IACF;AACF;AAEA,MAAMO,wBAAwB;IAC5BC,SAAS,IAAIC;IACbC,iBAAiB,IAAID;AACvB;AACA,SAASE,iBACPC,YAAoB,EACpBC,GAAuC,EACvCC,OAAe;IAEf,IAAIP,qBAAqB,CAACM,IAAI,CAACE,GAAG,CAACH,eAAe;IAElDrC,IAAIyC,IAAI,CACN,CAAC,uCAAuC,EAAEH,IAAI,aAAa,EAAED,aAAa,KAAK,EAAEE,QAAQ,CAAC,CAAC,GACzF,OACA;IAGJP,qBAAqB,CAACM,IAAI,CAACI,GAAG,CAACL,cAAc;AAC/C;AACA;;;;;;CAMC,GACD,SAASM,aACPC,MAAW,EACXP,YAAoB;IAYpB,MAAMQ,aAAa,IAAIC,IAAY;QACjC;QACA;QACA;QACA;QACA;KACD;IACD,IAAIC,MAAMC,OAAO,CAACJ,0BAAAA,OAAQK,IAAI,GAAG;QAC/B,IAAI;YACF,IAAIhB;YACJ,IAAIE;YACJ,IAAIe,MAAe;YACnB,IAAIC,MAAe;YACnB,IAAIC,wBAAiC;YACrC,IAAIC,mBAA4B;YAChC,IAAIC,uBAAuB;YAC3B,IAAIC,kBAAkB,IAAIT;YAC1B,IAAIU,aAAa,IAAIV;YACrB,IAAIW,6BAA6B;YAEjC,KAAK,MAAMC,QAAQd,OAAOK,IAAI,CAAE;oBAoB5BS,mBA2BAA,oBACeA,8BAYfA;gBA3DF,iEAAiE;gBACjE,IACEA,KAAKhC,IAAI,KAAK,yBACdgC,KAAKC,UAAU,CAACjC,IAAI,KAAK,iBACzB;oBACA,IAAI,CAAC+B,4BAA4B;wBAC/B,MAAMG,YAAYF,KAAKC,UAAU,CAACE,KAAK;wBACvC,IAAIlD,qBAAqBiD,WAAW;4BAClCJ,WAAWM,GAAG,CAAC;wBACjB;wBACA,IAAIlD,4BAA4BgD,WAAW;4BACzCJ,WAAWM,GAAG,CAAC;wBACjB;oBACF;gBACF,OAAO;oBACLL,6BAA6B;gBAC/B;gBACA,IACEC,KAAKhC,IAAI,KAAK,uBACdgC,EAAAA,oBAAAA,KAAKK,WAAW,qBAAhBL,kBAAkBhC,IAAI,MAAK,uBAC3B;wBAC0BgC;oBAA1B,KAAK,MAAMK,gBAAeL,qBAAAA,KAAKK,WAAW,qBAAhBL,mBAAkBM,YAAY,CAAE;wBACxD,IAAID,YAAYE,EAAE,CAACJ,KAAK,KAAK,WAAW;4BACtC5B,UAAU8B,YAAYG,IAAI,CAACL,KAAK;wBAClC,OAAO,IAAIE,YAAYE,EAAE,CAACJ,KAAK,KAAK,mBAAmB;4BACrD,IAAIE,YAAYG,IAAI,CAACxC,IAAI,KAAK,mBAAmB;gCAC/C,MAAMyC,WAAqB,EAAE;gCAC7B,KAAK,MAAMC,WAAWL,YAAYG,IAAI,CAACC,QAAQ,CAAE;oCAC/C,MAAM,EAAER,UAAU,EAAE,GAAGS;oCACvB,IAAIT,WAAWjC,IAAI,KAAK,iBAAiB;wCACvC;oCACF;oCACAyC,SAASE,IAAI,CAACV,WAAWE,KAAK;gCAChC;gCACA1B,kBAAkBgC;4BACpB,OAAO;gCACLhC,kBAAkB4B,YAAYG,IAAI,CAACL,KAAK;4BAC1C;wBACF,OAAO;4BACLN,gBAAgBO,GAAG,CAACC,YAAYE,EAAE,CAACJ,KAAK;wBAC1C;oBACF;gBACF;gBAEA,IACEH,KAAKhC,IAAI,KAAK,uBACdgC,EAAAA,qBAAAA,KAAKK,WAAW,qBAAhBL,mBAAkBhC,IAAI,MAAK,yBAC3BmB,WAAWL,GAAG,EAACkB,+BAAAA,KAAKK,WAAW,CAACO,UAAU,qBAA3BZ,6BAA6BG,KAAK,GACjD;oBACA,MAAMI,KAAKP,KAAKK,WAAW,CAACO,UAAU,CAACT,KAAK;oBAC5CV,MAAMc,OAAO;oBACbf,MAAMe,OAAO;oBACbb,wBAAwBa,OAAO;oBAC/BZ,mBAAmBY,OAAO;oBAC1BX,uBAAuBW,OAAO;gBAChC;gBAEA,IACEP,KAAKhC,IAAI,KAAK,uBACdgC,EAAAA,qBAAAA,KAAKK,WAAW,qBAAhBL,mBAAkBhC,IAAI,MAAK,uBAC3B;wBACWgC,iCAAAA;oBAAX,MAAMO,MAAKP,qBAAAA,KAAKK,WAAW,sBAAhBL,kCAAAA,mBAAkBM,YAAY,CAAC,EAAE,qBAAjCN,gCAAmCO,EAAE,CAACJ,KAAK;oBACtD,IAAIhB,WAAWL,GAAG,CAACyB,KAAK;wBACtBd,MAAMc,OAAO;wBACbf,MAAMe,OAAO;wBACbb,wBAAwBa,OAAO;wBAC/BZ,mBAAmBY,OAAO;wBAC1BX,uBAAuBW,OAAO;oBAChC;gBACF;gBAEA,IAAIP,KAAKhC,IAAI,KAAK,0BAA0B;oBAC1C,MAAML,SAASqC,KAAKa,UAAU,CAACC,GAAG,CAChC,CAACC;4BAECA,iBACAA;+BAFAA,UAAU/C,IAAI,KAAK,qBACnB+C,EAAAA,kBAAAA,UAAUC,IAAI,qBAAdD,gBAAgB/C,IAAI,MAAK,kBACzB+C,mBAAAA,UAAUC,IAAI,qBAAdD,iBAAgBZ,KAAK;;oBAGzB,KAAK,MAAMA,SAASxC,OAAQ;wBAC1B,IAAI,CAAC8B,OAAOU,UAAU,kBAAkBV,MAAM;wBAC9C,IAAI,CAACD,OAAOW,UAAU,sBAAsBX,MAAM;wBAClD,IAAI,CAACE,yBAAyBS,UAAU,yBACtCT,wBAAwB;wBAC1B,IAAI,CAACC,oBAAoBQ,UAAU,oBACjCR,mBAAmB;wBACrB,IAAI,CAACC,wBAAwBO,UAAU,wBACrCP,uBAAuB;wBACzB,IAAI,CAACrB,WAAW4B,UAAU,WACxBzB,iBACEC,cACA,WACA;wBAEJ,IAAI,CAACF,mBAAmB0B,UAAU,mBAChCzB,iBACEC,cACA,mBACA;oBAEN;gBACF;YACF;YAEA,OAAO;gBACLa;gBACAC;gBACAlB;gBACAE;gBACAiB;gBACAC;gBACAC;gBACAC;gBACAC;YACF;QACF,EAAE,OAAOmB,KAAK,CAAC;IACjB;IAEA,OAAO;QACLxB,KAAK;QACLD,KAAK;QACLjB,SAAST;QACTW,iBAAiBX;QACjB4B,uBAAuB;QACvBC,kBAAkB;QAClBC,sBAAsB;QACtBC,iBAAiB/B;QACjBgC,YAAYhC;IACd;AACF;AAEA,eAAeoD,cAAcC,QAAgB,EAAEC,WAAoB;IACjE,IAAI;QACF,OAAO,MAAMpF,GAAGqF,QAAQ,CAACF,UAAU;YACjCG,UAAU;QACZ;IACF,EAAE,OAAOC,OAAY;QACnB,IAAIH,aAAa;YACfG,MAAM1C,OAAO,GAAG,CAAC,mCAAmC,EAAEsC,SAAS,GAAG,EAAEI,MAAM1C,OAAO,CAAC,CAAC;YACnF,MAAM0C;QACR;IACF;AACF;AAEA,OAAO,SAASC,sBACdC,iBAA0B,EAC1BC,UAAiD;IAEjD,IAAIC,WAAsB,EAAE;IAC5B,IAAItC,MAAMC,OAAO,CAACmC,oBAAoB;QACpCE,WAAWF;IACb,OAAO;QACLE,SAAShB,IAAI,CAACc;IAChB;IACA,MAAM,EAAEG,IAAI,EAAE,GAAGF;IAEjB,MAAMG,oBAAoB,IAAIrD;IAC9B,IAAIsD,SAASH,SAASb,GAAG,CAAC,CAACiB;QACzB,IAAIC,aAAc,OAAOD,MAAM,WAAW;YAAE3E,QAAQ2E;QAAE,IAAIA;QAC1D,IAAIC,YAAY;YACdH,kBAAkB7C,GAAG,CAACgD,YAAYA,WAAW5E,MAAM;QACrD;QACA,OAAO4E;IACT;IAEA,yDAAyD;IACzD,uBAAuB;IACvBxF,kBAAkBsF,QAAQ;IAE1BA,SAASA,OAAOhB,GAAG,CAAC,CAACmB;QACnB,IAAI,EAAE7E,MAAM,EAAE,GAAG6E;QAEjB,MAAMC,SAAS9E,WAAW;QAE1B,IAAIwE,CAAAA,wBAAAA,KAAMO,OAAO,KAAIF,EAAEG,MAAM,KAAK,OAAO;YACvChF,SAAS,CAAC,yCAAyC,EACjD8E,SAAS,KAAK9E,OACf,CAAC;QACJ;QAEAA,SAAS,CAAC,gCAAgC,EAAEA,OAAO,EACjD8E,SACI,CAAC,CAAC,EAAER,WAAWE,IAAI,GAAG,cAAc,GAAG,wBAAwB,CAAC,GAChE,WACL,CAAC;QAEF,IAAIF,WAAWW,QAAQ,EAAE;YACvBjF,SAAS,CAAC,EAAEsE,WAAWW,QAAQ,CAAC,EAAEjF,OAAO,CAAC;QAC5C;QAEA6E,EAAE7E,MAAM,GAAGA;QACX,OAAO6E;IACT;IAEAzF,kBAAkBsF,QAAQ;IAE1B,OAAOA,OAAOhB,GAAG,CAAC,CAACmB;QACjB,MAAM,EAAE7E,MAAM,EAAE,GAAGkF,MAAM,GAAGL;QAC5B,MAAMM,aAAa9F,eAAeW;QAElC,IAAImF,WAAWhB,KAAK,IAAI,CAACgB,WAAWC,QAAQ,EAAE;YAC5C,MAAM,IAAIC,MAAM,CAAC,gBAAgB,EAAErF,OAAO,CAAC;QAC7C;QAEA,MAAMsF,iBAAiBb,kBAAkBc,GAAG,CAACV;QAE7C,OAAO;YACL,GAAGK,IAAI;YACPM,QAAQL,WAAWC,QAAQ;YAC3BE,gBAAgBA,kBAAkBtF;QACpC;IACF;AACF;AAEA,SAASyF,oBACPlE,YAAoB,EACpBmE,MAAW,EACXpB,UAAsB;IAEtB,MAAMqB,SAA0C,CAAC;IAEjD,IAAID,OAAOE,OAAO,EAAE;QAClBD,OAAOpB,QAAQ,GAAGH,sBAAsBsB,OAAOE,OAAO,EAAEtB;IAC1D;IAEA,IAAI,OAAOoB,OAAOG,OAAO,KAAK,YAAY5D,MAAMC,OAAO,CAACwD,OAAOG,OAAO,GAAG;QACvEF,OAAOE,OAAO,GAAGH,OAAOG,OAAO;IACjC,OAAO,IAAI,OAAOH,OAAOG,OAAO,KAAK,aAAa;QAChD3G,IAAIyC,IAAI,CACN,CAAC,4FAA4F,EAAEJ,aAAa,CAAC,CAAC;IAElH;IAEA,IAAImE,OAAOI,qBAAqB,EAAE;QAChCH,OAAOI,0BAA0B,GAAG9D,MAAMC,OAAO,CAC/CwD,OAAOI,qBAAqB,IAE1BJ,OAAOI,qBAAqB,GAC5B;YAACJ,OAAOI,qBAAqB;SAAC;QAClC,KAAK,MAAME,QAAQL,OAAOI,0BAA0B,IAAI,EAAE,CAAE;YAC1D,IAAI;gBACFjH,UAAUkH;YACZ,EAAE,OAAOnC,KAAK;gBACZ,MAAM,IAAIwB,MACR,CAAC,EAAE9D,aAAa,mEAAmE,EAAEyE,KAAK,GAAG,EAC3F,AAACnC,IAAcpC,OAAO,CACvB,CAAC;YAEN;QACF;IACF;IAEA,OAAOkE;AACT;AAEA,MAAMM,mBAAmB,IAAIpH,SAAS;IAAEqH,KAAK;AAAI;AACjD,SAASC,0BAA0BC,QAAuB;IACxD,IACEC,QAAQC,GAAG,CAACC,QAAQ,KAAK,gBACzBF,QAAQC,GAAG,CAACE,yBAAyB,KAAK,KAC1C;QACA;IACF;IACA,IAAIP,iBAAiBvE,GAAG,CAAC0E,WAAW;QAClC;IACF;IACAlH,IAAIyC,IAAI,CACNyE,WACI,CAAC,EAAEA,SAAS,2EAA2E,CAAC,GACxF,CAAC,iEAAiE,CAAC;IAEzEH,iBAAiBrE,GAAG,CAACwE,UAAU;AACjC;AAEA,MAAMK,4BAA4B,IAAI5H,SAA0B;IAAEqH,KAAK;AAAI;AAE3E,SAASQ,0BACPnF,YAAoB,EACpBoF,IAAwB,EACxBxC,KAA4B;IAE5B,IAAIsC,0BAA0B/E,GAAG,CAACH,eAAe;QAC/C;IACF;IAEArC,IAAIyC,IAAI,CACN,CAAC,yDAAyD,CAAC,GACxDgF,CAAAA,OAAO,CAAC,OAAO,EAAEA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAEpF,aAAa,CAAC,CAAC,AAAD,IAC9C,QACA4C,MAAM1C,OAAO,GACZ0C,CAAAA,MAAMyC,IAAI,GAAG,CAAC,KAAK,EAAEzC,MAAMyC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAC,IACvC,QACA,+CACA;IAGJH,0BAA0B7E,GAAG,CAACL,cAAc;AAC9C;AAEA;;;;;;CAMC,GACD,OAAO,eAAesF,kBAAkBC,MAMvC;IACC,MAAM,EAAEC,KAAK,EAAExF,YAAY,EAAE+C,UAAU,EAAEqC,IAAI,EAAEK,QAAQ,EAAE,GAAGF;IAE5D,MAAMG,cAAc,AAAC,MAAMnD,cAAcvC,cAAc,CAACwF,UAAW;IACnE,IACE,qJAAqJG,IAAI,CACvJD,cAEF;QACA,MAAMnF,SAAS,MAAM7C,YAAYsC,cAAc0F;QAC/C,MAAM,EACJ5E,GAAG,EACHD,GAAG,EACHjB,OAAO,EACPE,eAAe,EACfmB,oBAAoB,EACpBF,qBAAqB,EACrBC,gBAAgB,EAChBE,eAAe,EACfC,UAAU,EACX,GAAGb,aAAaC,QAAQP;QACzB,MAAM4F,UAAUpH,wBAAwBkH,aAAa;QACrD,MAAMG,MAAMD,QAAQvG,IAAI;QAExB,sCAAsC;QACtC,IAAI8E,MAAY,6BAA6B;;QAC7C,IAAI;YACFA,SAAS3G,0BAA0B+C,QAAQ;QAC7C,EAAE,OAAOuF,GAAG;YACV,IAAIA,aAAarI,uBAAuB;gBACtC0H,0BAA0BnF,cAAcoF,MAAMU;YAChD;QACA,oFAAoF;QACtF;QAEA,MAAMC,cAAmC,CAAC;QAE1C,IAAI7E,mBAAmBuE,aAAavH,WAAW8H,GAAG,EAAE;YAClD,KAAK,MAAMC,QAAQ/E,gBAAiB;gBAClC,IAAI,CAAC/C,8BAA8B+H,QAAQ,CAACD,OAAO;gBACnD,IAAI;oBACFF,WAAW,CAACE,KAAK,GAAGzI,0BAA0B+C,QAAQ0F;gBACxD,EAAE,OAAOH,GAAG;oBACV,IAAIA,aAAarI,uBAAuB;wBACtC0H,0BAA0BnF,cAAcoF,MAAMU;oBAChD;gBACF;YACF;QACF,OAAO,IAAIL,aAAavH,WAAWiI,KAAK,EAAE;YACxC,IAAK,MAAMlG,OAAOkE,OAAQ;gBACxB,IAAI,CAAChG,8BAA8B+H,QAAQ,CAACjG,MAAM;gBAClD8F,WAAW,CAAC9F,IAAI,GAAGkE,MAAM,CAAClE,IAAI;YAChC;QACF;QAEA,IAAIwF,aAAavH,WAAW8H,GAAG,EAAE;YAC/B,IAAI7B,QAAQ;gBACV,IAAIjE,UAAU,CAAC,eAAe,EAAEF,aAAa,qEAAqE,CAAC;gBAEnH,IAAImE,OAAOvE,OAAO,EAAE;oBAClBM,WAAW,CAAC,+BAA+B,EAAEjB,KAAKmH,SAAS,CACzDjC,OAAOvE,OAAO,EACd,EAAE,CAAC;gBACP;gBAEA,IAAIuE,OAAOG,OAAO,EAAE;oBAClBpE,WAAW,CAAC,uCAAuC,EAAEjB,KAAKmH,SAAS,CACjEjC,OAAOG,OAAO,EACd,EAAE,CAAC;gBACP;gBAEApE,WAAW,CAAC,6GAA6G,CAAC;gBAE1H,IAAIsF,OAAO;oBACT7H,IAAI0I,QAAQ,CAACnG;gBACf,OAAO;oBACL,MAAM,IAAI4D,MAAM5D;gBAClB;gBACAiE,SAAS,CAAC;YACZ;QACF;QACA,IAAI,CAACA,QAAQA,SAAS,CAAC;QAEvB,4FAA4F;QAC5F,4EAA4E;QAC5E,iGAAiG;QACjG,yBAAyB;QACzB,IAAImC;QACJ,IAAIb,aAAavH,WAAW8H,GAAG,EAAE;YAC/BM,kBAAkB1G;QACpB,OAAO;YACL0G,kBAAkB1G,WAAWuE,OAAOvE,OAAO;QAC7C;QAEA,IACE,OAAO0G,oBAAoB,eAC3BA,oBAAoB1I,eAAe2I,MAAM,IACzC,CAACvI,cAAcsI,kBACf;YACA,MAAME,UAAUzH,OAAOC,MAAM,CAACpB,gBAAgB6I,IAAI,CAAC;YACnD,MAAMvG,UACJ,OAAOoG,oBAAoB,WACvB,CAAC,iFAAiF,EAAEE,QAAQ,CAAC,GAC7F,CAAC,kBAAkB,EAAEF,gBAAgB,4DAA4D,EAAEE,QAAQ,CAAC;YAClH,IAAIhB,OAAO;gBACT7H,IAAIiF,KAAK,CAAC1C;YACZ,OAAO;gBACL,MAAM,IAAI4D,MAAM5D;YAClB;QACF;QAEA,MAAMwG,wBAAwB7F,OAAOC,OAAO2E,aAAavH,WAAW8H,GAAG;QAEvE,MAAMW,eAAe5I,WAAWqH,wBAAAA,KAAMwB,OAAO,CAAC,wBAAwB;QAEtEN,kBACEtI,cAAcsI,oBAAoBI,wBAC9BJ,kBACAnH;QAEN,IAAImH,oBAAoB1I,eAAeiJ,gBAAgB,EAAE;YACvDjC,0BAA0B+B,eAAevB,OAAQ;QACnD;QAEA,IACEkB,oBAAoB1I,eAAekJ,IAAI,IACvCrB,aAAavH,WAAWiI,KAAK,IAC7Bf,QACA,CAACuB,cACD;YACA,MAAMzG,UAAU,CAAC,KAAK,EAAEkF,KAAK,4HAA4H,CAAC;YAC1J,IAAII,OAAO;gBACT7H,IAAIiF,KAAK,CAAC1C;YACZ,OAAO;gBACL,MAAM,IAAI4D,MAAM5D;YAClB;QACF;QAEA,MAAM6G,mBAAmB7C,oBACvBkB,QAAQ,6BACRjB,QACApB;QAGF,IACE0C,aAAavH,WAAW8H,GAAG,KAC3B7E,8BAAAA,WAAYhB,GAAG,CAAC,cAChBc,sBACA;YACA,MAAM,IAAI6C,MACR,CAAC,MAAM,EAAEsB,KAAK,4EAA4E,CAAC;QAE/F;QAEA,OAAO;YACLvE;YACAC;YACA+E;YACA5E;YACAF;YACAC;YACAgG,KAAK7C,OAAO6C,GAAG,IAAI;YACnB,GAAID,oBAAoB;gBAAE1D,YAAY0D;YAAiB,CAAC;YACxD,GAAIT,mBAAmB;gBAAE1G,SAAS0G;YAAgB,CAAC;YACnDxG;YACAiG;QACF;IACF;IAEA,OAAO;QACLlF,KAAK;QACLC,KAAK;QACL+E,KAAK5H,iBAAiByB,MAAM;QAC5BuB,sBAAsB;QACtBF,uBAAuB;QACvBC,kBAAkB;QAClBgG,KAAK;QACLpH,SAAST;IACX;AACF"}