{"version":3,"sources":["../../src/build/entries.ts"],"sourcesContent":["import type { ClientPagesLoaderOptions } from './webpack/loaders/next-client-pages-loader'\nimport type { MiddlewareLoaderOptions } from './webpack/loaders/next-middleware-loader'\nimport type { EdgeSSRLoaderQuery } from './webpack/loaders/next-edge-ssr-loader'\nimport type { EdgeAppRouteLoaderQuery } from './webpack/loaders/next-edge-app-route-loader'\nimport type { NextConfigComplete } from '../server/config-shared'\nimport type { webpack } from 'next/dist/compiled/webpack/webpack'\nimport type {\n  MiddlewareConfigParsed,\n  MiddlewareConfig,\n  MiddlewareMatcher,\n  PageStaticInfo,\n} from './analysis/get-page-static-info'\nimport type { LoadedEnvFiles } from '@next/env'\nimport type { AppLoaderOptions } from './webpack/loaders/next-app-loader'\n\nimport { posix, join, dirname, extname } from 'path'\nimport { stringify } from 'querystring'\nimport fs from 'fs'\nimport {\n  PAGES_DIR_ALIAS,\n  ROOT_DIR_ALIAS,\n  APP_DIR_ALIAS,\n  WEBPACK_LAYERS,\n  INSTRUMENTATION_HOOK_FILENAME,\n} from '../lib/constants'\nimport { isAPIRoute } from '../lib/is-api-route'\nimport { isEdgeRuntime } from '../lib/is-edge-runtime'\nimport {\n  APP_CLIENT_INTERNALS,\n  RSC_MODULE_TYPES,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport {\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  COMPILER_NAMES,\n  EDGE_RUNTIME_WEBPACK,\n} from '../shared/lib/constants'\nimport type { CompilerNameValues } from '../shared/lib/constants'\nimport type { __ApiPreviewProps } from '../server/api-utils'\nimport {\n  isMiddlewareFile,\n  isMiddlewareFilename,\n  isInstrumentationHookFile,\n  isInstrumentationHookFilename,\n} from './utils'\nimport { getPageStaticInfo } from './analysis/get-page-static-info'\nimport { normalizePathSep } from '../shared/lib/page-path/normalize-path-sep'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport type { ServerRuntime } from '../types'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\nimport { encodeMatchers } from './webpack/loaders/next-middleware-loader'\nimport type { EdgeFunctionLoaderOptions } from './webpack/loaders/next-edge-function-loader'\nimport { isAppRouteRoute } from '../lib/is-app-route-route'\nimport {\n  normalizeMetadataPageToRoute,\n  normalizeMetadataRoute,\n} from '../lib/metadata/get-metadata-route'\nimport { getRouteLoaderEntry } from './webpack/loaders/next-route-loader'\nimport {\n  isInternalComponent,\n  isNonRoutePagesPage,\n} from '../lib/is-internal-component'\nimport {\n  isMetadataRoute,\n  isStaticMetadataRouteFile,\n} from '../lib/metadata/is-metadata-route'\nimport { RouteKind } from '../server/route-kind'\nimport { encodeToBase64 } from './webpack/loaders/utils'\nimport { normalizeCatchAllRoutes } from './normalize-catchall-routes'\nimport type { PageExtensions } from './page-extensions-type'\nimport type { MappedPages } from './build-context'\nimport { PAGE_TYPES } from '../lib/page-types'\n\nexport function sortByPageExts(pageExtensions: PageExtensions) {\n  return (a: string, b: string) => {\n    // prioritize entries according to pageExtensions order\n    // for consistency as fs order can differ across systems\n    // NOTE: this is reversed so preferred comes last and\n    // overrides prior\n    const aExt = extname(a)\n    const bExt = extname(b)\n\n    const aNoExt = a.substring(0, a.length - aExt.length)\n    const bNoExt = a.substring(0, b.length - bExt.length)\n\n    if (aNoExt !== bNoExt) return 0\n\n    // find extension index (skip '.' as pageExtensions doesn't have it)\n    const aExtIndex = pageExtensions.indexOf(aExt.substring(1))\n    const bExtIndex = pageExtensions.indexOf(bExt.substring(1))\n\n    return bExtIndex - aExtIndex\n  }\n}\n\nexport async function getStaticInfoIncludingLayouts({\n  isInsideAppDir,\n  pageExtensions,\n  pageFilePath,\n  appDir,\n  config,\n  isDev,\n  page,\n}: {\n  isInsideAppDir: boolean\n  pageExtensions: PageExtensions\n  pageFilePath: string\n  appDir: string | undefined\n  config: NextConfigComplete\n  isDev: boolean | undefined\n  page: string\n}): Promise<PageStaticInfo> {\n  const pageStaticInfo = await getPageStaticInfo({\n    nextConfig: config,\n    pageFilePath,\n    isDev,\n    page,\n    pageType: isInsideAppDir ? PAGE_TYPES.APP : PAGE_TYPES.PAGES,\n  })\n\n  const staticInfo: PageStaticInfo = isInsideAppDir\n    ? {\n        // TODO-APP: Remove the rsc key altogether. It's no longer required.\n        rsc: 'server',\n      }\n    : pageStaticInfo\n\n  if (isInsideAppDir && appDir) {\n    const layoutFiles = []\n    const potentialLayoutFiles = pageExtensions.map((ext) => 'layout.' + ext)\n    let dir = dirname(pageFilePath)\n    // Uses startsWith to not include directories further up.\n    while (dir.startsWith(appDir)) {\n      for (const potentialLayoutFile of potentialLayoutFiles) {\n        const layoutFile = join(dir, potentialLayoutFile)\n        if (!fs.existsSync(layoutFile)) {\n          continue\n        }\n        layoutFiles.unshift(layoutFile)\n      }\n      // Walk up the directory tree\n      dir = join(dir, '..')\n    }\n\n    for (const layoutFile of layoutFiles) {\n      const layoutStaticInfo = await getPageStaticInfo({\n        nextConfig: config,\n        pageFilePath: layoutFile,\n        isDev,\n        page,\n        pageType: isInsideAppDir ? PAGE_TYPES.APP : PAGE_TYPES.PAGES,\n      })\n\n      // Only runtime is relevant here.\n      if (layoutStaticInfo.runtime) {\n        staticInfo.runtime = layoutStaticInfo.runtime\n      }\n      if (layoutStaticInfo.preferredRegion) {\n        staticInfo.preferredRegion = layoutStaticInfo.preferredRegion\n      }\n    }\n\n    if (pageStaticInfo.runtime) {\n      staticInfo.runtime = pageStaticInfo.runtime\n    }\n    if (pageStaticInfo.preferredRegion) {\n      staticInfo.preferredRegion = pageStaticInfo.preferredRegion\n    }\n\n    // if it's static metadata route, don't inherit runtime from layout\n    const relativePath = pageFilePath.replace(appDir, '')\n    if (isStaticMetadataRouteFile(relativePath)) {\n      delete staticInfo.runtime\n      delete staticInfo.preferredRegion\n    }\n  }\n  return staticInfo\n}\n\ntype ObjectValue<T> = T extends { [key: string]: infer V } ? V : never\n\n/**\n * For a given page path removes the provided extensions.\n */\nexport function getPageFromPath(\n  pagePath: string,\n  pageExtensions: PageExtensions\n) {\n  let page = normalizePathSep(\n    pagePath.replace(new RegExp(`\\\\.+(${pageExtensions.join('|')})$`), '')\n  )\n\n  page = page.replace(/\\/index$/, '')\n\n  return page === '' ? '/' : page\n}\n\nexport function getPageFilePath({\n  absolutePagePath,\n  pagesDir,\n  appDir,\n  rootDir,\n}: {\n  absolutePagePath: string\n  pagesDir: string | undefined\n  appDir: string | undefined\n  rootDir: string\n}) {\n  if (absolutePagePath.startsWith(PAGES_DIR_ALIAS) && pagesDir) {\n    return absolutePagePath.replace(PAGES_DIR_ALIAS, pagesDir)\n  }\n\n  if (absolutePagePath.startsWith(APP_DIR_ALIAS) && appDir) {\n    return absolutePagePath.replace(APP_DIR_ALIAS, appDir)\n  }\n\n  if (absolutePagePath.startsWith(ROOT_DIR_ALIAS)) {\n    return absolutePagePath.replace(ROOT_DIR_ALIAS, rootDir)\n  }\n\n  return require.resolve(absolutePagePath)\n}\n\n/**\n * Creates a mapping of route to page file path for a given list of page paths.\n * For example ['/middleware.ts'] is turned into  { '/middleware': `${ROOT_DIR_ALIAS}/middleware.ts` }\n */\nexport async function createPagesMapping({\n  isDev,\n  pageExtensions,\n  pagePaths,\n  pagesType,\n  pagesDir,\n  appDir,\n}: {\n  isDev: boolean\n  pageExtensions: PageExtensions\n  pagePaths: string[]\n  pagesType: PAGE_TYPES\n  pagesDir: string | undefined\n  appDir: string | undefined\n}): Promise<MappedPages> {\n  const isAppRoute = pagesType === 'app'\n  const pages: MappedPages = {}\n  const promises = pagePaths.map<Promise<void>>(async (pagePath) => {\n    // Do not process .d.ts files as routes\n    if (pagePath.endsWith('.d.ts') && pageExtensions.includes('ts')) {\n      return\n    }\n\n    let pageKey = getPageFromPath(pagePath, pageExtensions)\n    if (isAppRoute) {\n      pageKey = pageKey.replace(/%5F/g, '_')\n      if (pageKey === '/not-found') {\n        pageKey = UNDERSCORE_NOT_FOUND_ROUTE_ENTRY\n      }\n    }\n\n    const normalizedPath = normalizePathSep(\n      join(\n        pagesType === 'pages'\n          ? PAGES_DIR_ALIAS\n          : pagesType === 'app'\n            ? APP_DIR_ALIAS\n            : ROOT_DIR_ALIAS,\n        pagePath\n      )\n    )\n\n    let route = pagesType === 'app' ? normalizeMetadataRoute(pageKey) : pageKey\n\n    if (isMetadataRoute(route) && pagesType === 'app') {\n      const filePath = join(appDir!, pagePath)\n      const staticInfo = await getPageStaticInfo({\n        nextConfig: {},\n        pageFilePath: filePath,\n        isDev,\n        page: pageKey,\n        pageType: pagesType,\n      })\n\n      route = normalizeMetadataPageToRoute(\n        route,\n        !!(staticInfo.generateImageMetadata || staticInfo.generateSitemaps)\n      )\n    }\n\n    pages[route] = normalizedPath\n  })\n\n  await Promise.all(promises)\n\n  switch (pagesType) {\n    case PAGE_TYPES.ROOT: {\n      return pages\n    }\n    case PAGE_TYPES.APP: {\n      const hasAppPages = Object.keys(pages).some((page) =>\n        page.endsWith('/page')\n      )\n      return {\n        // If there's any app pages existed, add a default not-found page.\n        // If there's any custom not-found page existed, it will override the default one.\n        ...(hasAppPages && {\n          [UNDERSCORE_NOT_FOUND_ROUTE_ENTRY]:\n            'next/dist/client/components/not-found-error',\n        }),\n        ...pages,\n      }\n    }\n    case PAGE_TYPES.PAGES: {\n      if (isDev) {\n        delete pages['/_app']\n        delete pages['/_error']\n        delete pages['/_document']\n      }\n\n      // In development we always alias these to allow Webpack to fallback to\n      // the correct source file so that HMR can work properly when a file is\n      // added or removed.\n      const root = isDev && pagesDir ? PAGES_DIR_ALIAS : 'next/dist/pages'\n\n      return {\n        '/_app': `${root}/_app`,\n        '/_error': `${root}/_error`,\n        '/_document': `${root}/_document`,\n        ...pages,\n      }\n    }\n    default: {\n      return {}\n    }\n  }\n}\n\nexport interface CreateEntrypointsParams {\n  buildId: string\n  config: NextConfigComplete\n  envFiles: LoadedEnvFiles\n  isDev?: boolean\n  pages: MappedPages\n  pagesDir?: string\n  previewMode: __ApiPreviewProps\n  rootDir: string\n  rootPaths?: MappedPages\n  appDir?: string\n  appPaths?: MappedPages\n  pageExtensions: PageExtensions\n  hasInstrumentationHook?: boolean\n}\n\nexport function getEdgeServerEntry(opts: {\n  rootDir: string\n  absolutePagePath: string\n  buildId: string\n  bundlePath: string\n  config: NextConfigComplete\n  isDev: boolean\n  isServerComponent: boolean\n  page: string\n  pages: MappedPages\n  middleware?: Partial<MiddlewareConfigParsed>\n  pagesType: PAGE_TYPES\n  appDirLoader?: string\n  hasInstrumentationHook?: boolean\n  preferredRegion: string | string[] | undefined\n  middlewareConfig?: MiddlewareConfig\n}) {\n  if (\n    opts.pagesType === 'app' &&\n    isAppRouteRoute(opts.page) &&\n    opts.appDirLoader\n  ) {\n    const loaderParams: EdgeAppRouteLoaderQuery = {\n      absolutePagePath: opts.absolutePagePath,\n      page: opts.page,\n      appDirLoader: Buffer.from(opts.appDirLoader || '').toString('base64'),\n      nextConfigOutput: opts.config.output,\n      preferredRegion: opts.preferredRegion,\n      middlewareConfig: Buffer.from(\n        JSON.stringify(opts.middlewareConfig || {})\n      ).toString('base64'),\n    }\n\n    return {\n      import: `next-edge-app-route-loader?${stringify(loaderParams)}!`,\n      layer: WEBPACK_LAYERS.reactServerComponents,\n    }\n  }\n\n  if (isMiddlewareFile(opts.page)) {\n    const loaderParams: MiddlewareLoaderOptions = {\n      absolutePagePath: opts.absolutePagePath,\n      page: opts.page,\n      rootDir: opts.rootDir,\n      matchers: opts.middleware?.matchers\n        ? encodeMatchers(opts.middleware.matchers)\n        : '',\n      preferredRegion: opts.preferredRegion,\n      middlewareConfig: Buffer.from(\n        JSON.stringify(opts.middlewareConfig || {})\n      ).toString('base64'),\n    }\n\n    return `next-middleware-loader?${stringify(loaderParams)}!`\n  }\n\n  if (isAPIRoute(opts.page)) {\n    const loaderParams: EdgeFunctionLoaderOptions = {\n      absolutePagePath: opts.absolutePagePath,\n      page: opts.page,\n      rootDir: opts.rootDir,\n      preferredRegion: opts.preferredRegion,\n      middlewareConfig: Buffer.from(\n        JSON.stringify(opts.middlewareConfig || {})\n      ).toString('base64'),\n    }\n\n    return `next-edge-function-loader?${stringify(loaderParams)}!`\n  }\n\n  const loaderParams: EdgeSSRLoaderQuery = {\n    absolute500Path: opts.pages['/500'] || '',\n    absoluteAppPath: opts.pages['/_app'],\n    absoluteDocumentPath: opts.pages['/_document'],\n    absoluteErrorPath: opts.pages['/_error'],\n    absolutePagePath: opts.absolutePagePath,\n    dev: opts.isDev,\n    isServerComponent: opts.isServerComponent,\n    page: opts.page,\n    stringifiedConfig: Buffer.from(JSON.stringify(opts.config)).toString(\n      'base64'\n    ),\n    pagesType: opts.pagesType,\n    appDirLoader: Buffer.from(opts.appDirLoader || '').toString('base64'),\n    sriEnabled: !opts.isDev && !!opts.config.experimental.sri?.algorithm,\n    cacheHandler: opts.config.cacheHandler,\n    preferredRegion: opts.preferredRegion,\n    middlewareConfig: Buffer.from(\n      JSON.stringify(opts.middlewareConfig || {})\n    ).toString('base64'),\n    serverActions: opts.config.experimental.serverActions,\n  }\n\n  return {\n    import: `next-edge-ssr-loader?${JSON.stringify(loaderParams)}!`,\n    // The Edge bundle includes the server in its entrypoint, so it has to\n    // be in the SSR layer — we later convert the page request to the RSC layer\n    // via a webpack rule.\n    layer: opts.appDirLoader ? WEBPACK_LAYERS.serverSideRendering : undefined,\n  }\n}\n\nexport function getInstrumentationEntry(opts: {\n  absolutePagePath: string\n  isEdgeServer: boolean\n  isDev: boolean\n}) {\n  // the '../' is needed to make sure the file is not chunked\n  const filename = `${\n    opts.isEdgeServer ? 'edge-' : opts.isDev ? '' : '../'\n  }${INSTRUMENTATION_HOOK_FILENAME}.js`\n\n  return {\n    import: opts.absolutePagePath,\n    filename,\n    layer: WEBPACK_LAYERS.instrument,\n  }\n}\n\nexport function getAppEntry(opts: Readonly<AppLoaderOptions>) {\n  return {\n    import: `next-app-loader?${stringify(opts)}!`,\n    layer: WEBPACK_LAYERS.reactServerComponents,\n  }\n}\n\nexport function getClientEntry(opts: {\n  absolutePagePath: string\n  page: string\n}) {\n  const loaderOptions: ClientPagesLoaderOptions = {\n    absolutePagePath: opts.absolutePagePath,\n    page: opts.page,\n  }\n\n  const pageLoader = `next-client-pages-loader?${stringify(loaderOptions)}!`\n\n  // Make sure next/router is a dependency of _app or else chunk splitting\n  // might cause the router to not be able to load causing hydration\n  // to fail\n  return opts.page === '/_app'\n    ? [pageLoader, require.resolve('../client/router')]\n    : pageLoader\n}\n\nexport function runDependingOnPageType<T>(params: {\n  onClient: () => T\n  onEdgeServer: () => T\n  onServer: () => T\n  page: string\n  pageRuntime: ServerRuntime\n  pageType?: PAGE_TYPES\n}): void {\n  if (\n    params.pageType === PAGE_TYPES.ROOT &&\n    isInstrumentationHookFile(params.page)\n  ) {\n    params.onServer()\n    params.onEdgeServer()\n    return\n  }\n\n  if (isMiddlewareFile(params.page)) {\n    params.onEdgeServer()\n    return\n  }\n  if (isAPIRoute(params.page)) {\n    if (isEdgeRuntime(params.pageRuntime)) {\n      params.onEdgeServer()\n      return\n    }\n\n    params.onServer()\n    return\n  }\n  if (params.page === '/_document') {\n    params.onServer()\n    return\n  }\n  if (\n    params.page === '/_app' ||\n    params.page === '/_error' ||\n    params.page === '/404' ||\n    params.page === '/500'\n  ) {\n    params.onClient()\n    params.onServer()\n    return\n  }\n  if (isEdgeRuntime(params.pageRuntime)) {\n    params.onClient()\n    params.onEdgeServer()\n    return\n  }\n\n  params.onClient()\n  params.onServer()\n  return\n}\n\nexport async function createEntrypoints(\n  params: CreateEntrypointsParams\n): Promise<{\n  client: webpack.EntryObject\n  server: webpack.EntryObject\n  edgeServer: webpack.EntryObject\n  middlewareMatchers: undefined\n}> {\n  const {\n    config,\n    pages,\n    pagesDir,\n    isDev,\n    rootDir,\n    rootPaths,\n    appDir,\n    appPaths,\n    pageExtensions,\n  } = params\n  const edgeServer: webpack.EntryObject = {}\n  const server: webpack.EntryObject = {}\n  const client: webpack.EntryObject = {}\n  let middlewareMatchers: MiddlewareMatcher[] | undefined = undefined\n\n  let appPathsPerRoute: Record<string, string[]> = {}\n  if (appDir && appPaths) {\n    for (const pathname in appPaths) {\n      const normalizedPath = normalizeAppPath(pathname)\n      const actualPath = appPaths[pathname]\n      if (!appPathsPerRoute[normalizedPath]) {\n        appPathsPerRoute[normalizedPath] = []\n      }\n      appPathsPerRoute[normalizedPath].push(\n        // TODO-APP: refactor to pass the page path from createPagesMapping instead.\n        getPageFromPath(actualPath, pageExtensions).replace(APP_DIR_ALIAS, '')\n      )\n    }\n\n    // TODO: find a better place to do this\n    normalizeCatchAllRoutes(appPathsPerRoute)\n\n    // Make sure to sort parallel routes to make the result deterministic.\n    appPathsPerRoute = Object.fromEntries(\n      Object.entries(appPathsPerRoute).map(([k, v]) => [k, v.sort()])\n    )\n  }\n\n  const getEntryHandler =\n    (mappings: MappedPages, pagesType: PAGE_TYPES): ((page: string) => void) =>\n    async (page) => {\n      const bundleFile = normalizePagePath(page)\n      const clientBundlePath = posix.join(pagesType, bundleFile)\n      const serverBundlePath =\n        pagesType === PAGE_TYPES.PAGES\n          ? posix.join('pages', bundleFile)\n          : pagesType === PAGE_TYPES.APP\n            ? posix.join('app', bundleFile)\n            : bundleFile.slice(1)\n\n      const absolutePagePath = mappings[page]\n\n      // Handle paths that have aliases\n      const pageFilePath = getPageFilePath({\n        absolutePagePath,\n        pagesDir,\n        appDir,\n        rootDir,\n      })\n\n      const isInsideAppDir =\n        !!appDir &&\n        (absolutePagePath.startsWith(APP_DIR_ALIAS) ||\n          absolutePagePath.startsWith(appDir))\n\n      const staticInfo: PageStaticInfo = await getStaticInfoIncludingLayouts({\n        isInsideAppDir,\n        pageExtensions,\n        pageFilePath,\n        appDir,\n        config,\n        isDev,\n        page,\n      })\n\n      // TODO(timneutkens): remove this\n      const isServerComponent =\n        isInsideAppDir && staticInfo.rsc !== RSC_MODULE_TYPES.client\n\n      if (isMiddlewareFile(page)) {\n        middlewareMatchers = staticInfo.middleware?.matchers ?? [\n          { regexp: '.*', originalSource: '/:path*' },\n        ]\n      }\n\n      const isInstrumentation =\n        isInstrumentationHookFile(page) && pagesType === PAGE_TYPES.ROOT\n      runDependingOnPageType({\n        page,\n        pageRuntime: staticInfo.runtime,\n        pageType: pagesType,\n        onClient: () => {\n          if (isServerComponent || isInsideAppDir) {\n            // We skip the initial entries for server component pages and let the\n            // server compiler inject them instead.\n          } else {\n            client[clientBundlePath] = getClientEntry({\n              absolutePagePath,\n              page,\n            })\n          }\n        },\n        onServer: () => {\n          if (pagesType === 'app' && appDir) {\n            const matchedAppPaths = appPathsPerRoute[normalizeAppPath(page)]\n            server[serverBundlePath] = getAppEntry({\n              page,\n              name: serverBundlePath,\n              pagePath: absolutePagePath,\n              appDir,\n              appPaths: matchedAppPaths,\n              pageExtensions,\n              basePath: config.basePath,\n              assetPrefix: config.assetPrefix,\n              nextConfigOutput: config.output,\n              flyingShuttle: config.experimental.flyingShuttle,\n              nextConfigExperimentalUseEarlyImport: config.experimental\n                .useEarlyImport\n                ? true\n                : undefined,\n              preferredRegion: staticInfo.preferredRegion,\n              middlewareConfig: encodeToBase64(staticInfo.middleware || {}),\n            })\n          } else if (isInstrumentation) {\n            server[serverBundlePath.replace('src/', '')] =\n              getInstrumentationEntry({\n                absolutePagePath,\n                isEdgeServer: false,\n                isDev: false,\n              })\n          } else if (isAPIRoute(page)) {\n            server[serverBundlePath] = [\n              getRouteLoaderEntry({\n                kind: RouteKind.PAGES_API,\n                page,\n                absolutePagePath,\n                preferredRegion: staticInfo.preferredRegion,\n                middlewareConfig: staticInfo.middleware || {},\n              }),\n            ]\n          } else if (\n            !isMiddlewareFile(page) &&\n            !isInternalComponent(absolutePagePath) &&\n            !isNonRoutePagesPage(page)\n          ) {\n            server[serverBundlePath] = [\n              getRouteLoaderEntry({\n                kind: RouteKind.PAGES,\n                page,\n                pages,\n                absolutePagePath,\n                preferredRegion: staticInfo.preferredRegion,\n                middlewareConfig: staticInfo.middleware ?? {},\n              }),\n            ]\n          } else {\n            server[serverBundlePath] = [absolutePagePath]\n          }\n        },\n        onEdgeServer: () => {\n          let appDirLoader: string = ''\n          if (isInstrumentation) {\n            edgeServer[serverBundlePath.replace('src/', '')] =\n              getInstrumentationEntry({\n                absolutePagePath,\n                isEdgeServer: true,\n                isDev: false,\n              })\n          } else {\n            if (pagesType === 'app') {\n              const matchedAppPaths = appPathsPerRoute[normalizeAppPath(page)]\n              appDirLoader = getAppEntry({\n                name: serverBundlePath,\n                page,\n                pagePath: absolutePagePath,\n                appDir: appDir!,\n                appPaths: matchedAppPaths,\n                pageExtensions,\n                basePath: config.basePath,\n                assetPrefix: config.assetPrefix,\n                nextConfigOutput: config.output,\n                flyingShuttle: config.experimental.flyingShuttle,\n                // This isn't used with edge as it needs to be set on the entry module, which will be the `edgeServerEntry` instead.\n                // Still passing it here for consistency.\n                preferredRegion: staticInfo.preferredRegion,\n                middlewareConfig: Buffer.from(\n                  JSON.stringify(staticInfo.middleware || {})\n                ).toString('base64'),\n              }).import\n            }\n            edgeServer[serverBundlePath] = getEdgeServerEntry({\n              ...params,\n              rootDir,\n              absolutePagePath: absolutePagePath,\n              bundlePath: clientBundlePath,\n              isDev: false,\n              isServerComponent,\n              page,\n              middleware: staticInfo?.middleware,\n              pagesType,\n              appDirLoader,\n              preferredRegion: staticInfo.preferredRegion,\n              middlewareConfig: staticInfo.middleware,\n            })\n          }\n        },\n      })\n    }\n\n  const promises: Promise<void[]>[] = []\n\n  if (appPaths) {\n    const entryHandler = getEntryHandler(appPaths, PAGE_TYPES.APP)\n    promises.push(Promise.all(Object.keys(appPaths).map(entryHandler)))\n  }\n  if (rootPaths) {\n    promises.push(\n      Promise.all(\n        Object.keys(rootPaths).map(getEntryHandler(rootPaths, PAGE_TYPES.ROOT))\n      )\n    )\n  }\n  promises.push(\n    Promise.all(\n      Object.keys(pages).map(getEntryHandler(pages, PAGE_TYPES.PAGES))\n    )\n  )\n\n  await Promise.all(promises)\n\n  return {\n    client,\n    server,\n    edgeServer,\n    middlewareMatchers,\n  }\n}\n\nexport function finalizeEntrypoint({\n  name,\n  compilerType,\n  value,\n  isServerComponent,\n  hasAppDir,\n}: {\n  compilerType?: CompilerNameValues\n  name: string\n  value: ObjectValue<webpack.EntryObject>\n  isServerComponent?: boolean\n  hasAppDir?: boolean\n}): ObjectValue<webpack.EntryObject> {\n  const entry =\n    typeof value !== 'object' || Array.isArray(value)\n      ? { import: value }\n      : value\n\n  const isApi = name.startsWith('pages/api/')\n  const isInstrumentation = isInstrumentationHookFilename(name)\n\n  switch (compilerType) {\n    case COMPILER_NAMES.server: {\n      const layer = isApi\n        ? WEBPACK_LAYERS.api\n        : isInstrumentation\n          ? WEBPACK_LAYERS.instrument\n          : isServerComponent\n            ? WEBPACK_LAYERS.reactServerComponents\n            : undefined\n\n      return {\n        publicPath: isApi ? '' : undefined,\n        runtime: isApi ? 'webpack-api-runtime' : 'webpack-runtime',\n        layer,\n        ...entry,\n      }\n    }\n    case COMPILER_NAMES.edgeServer: {\n      return {\n        layer: isApi\n          ? WEBPACK_LAYERS.api\n          : isMiddlewareFilename(name) || isInstrumentation\n            ? WEBPACK_LAYERS.middleware\n            : undefined,\n        library: { name: ['_ENTRIES', `middleware_[name]`], type: 'assign' },\n        runtime: EDGE_RUNTIME_WEBPACK,\n        asyncChunks: false,\n        ...entry,\n      }\n    }\n    case COMPILER_NAMES.client: {\n      const isAppLayer =\n        hasAppDir &&\n        (name === CLIENT_STATIC_FILES_RUNTIME_MAIN_APP ||\n          name === APP_CLIENT_INTERNALS ||\n          name.startsWith('app/'))\n\n      if (\n        // Client special cases\n        name !== CLIENT_STATIC_FILES_RUNTIME_POLYFILLS &&\n        name !== CLIENT_STATIC_FILES_RUNTIME_MAIN &&\n        name !== CLIENT_STATIC_FILES_RUNTIME_MAIN_APP &&\n        name !== CLIENT_STATIC_FILES_RUNTIME_AMP &&\n        name !== CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH\n      ) {\n        if (isAppLayer) {\n          return {\n            dependOn: CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n            layer: WEBPACK_LAYERS.appPagesBrowser,\n            ...entry,\n          }\n        }\n\n        return {\n          dependOn:\n            name.startsWith('pages/') && name !== 'pages/_app'\n              ? 'pages/_app'\n              : CLIENT_STATIC_FILES_RUNTIME_MAIN,\n          ...entry,\n        }\n      }\n\n      if (isAppLayer) {\n        return {\n          layer: WEBPACK_LAYERS.appPagesBrowser,\n          ...entry,\n        }\n      }\n\n      return entry\n    }\n    default: {\n      // Should never happen.\n      throw new Error('Invalid compiler type')\n    }\n  }\n}\n"],"names":["posix","join","dirname","extname","stringify","fs","PAGES_DIR_ALIAS","ROOT_DIR_ALIAS","APP_DIR_ALIAS","WEBPACK_LAYERS","INSTRUMENTATION_HOOK_FILENAME","isAPIRoute","isEdgeRuntime","APP_CLIENT_INTERNALS","RSC_MODULE_TYPES","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","CLIENT_STATIC_FILES_RUNTIME_AMP","CLIENT_STATIC_FILES_RUNTIME_MAIN","CLIENT_STATIC_FILES_RUNTIME_MAIN_APP","CLIENT_STATIC_FILES_RUNTIME_POLYFILLS","CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH","COMPILER_NAMES","EDGE_RUNTIME_WEBPACK","isMiddlewareFile","isMiddlewareFilename","isInstrumentationHookFile","isInstrumentationHookFilename","getPageStaticInfo","normalizePathSep","normalizePagePath","normalizeAppPath","encodeMatchers","isAppRouteRoute","normalizeMetadataPageToRoute","normalizeMetadataRoute","getRouteLoaderEntry","isInternalComponent","isNonRoutePagesPage","isMetadataRoute","isStaticMetadataRouteFile","RouteKind","encodeToBase64","normalizeCatchAllRoutes","PAGE_TYPES","sortByPageExts","pageExtensions","a","b","aExt","bExt","aNoExt","substring","length","bNoExt","aExtIndex","indexOf","bExtIndex","getStaticInfoIncludingLayouts","isInsideAppDir","pageFilePath","appDir","config","isDev","page","pageStaticInfo","nextConfig","pageType","APP","PAGES","staticInfo","rsc","layoutFiles","potentialLayoutFiles","map","ext","dir","startsWith","potentialLayoutFile","layoutFile","existsSync","unshift","layoutStaticInfo","runtime","preferredRegion","relativePath","replace","getPageFromPath","pagePath","RegExp","getPageFilePath","absolutePagePath","pagesDir","rootDir","require","resolve","createPagesMapping","pagePaths","pagesType","isAppRoute","pages","promises","endsWith","includes","pageKey","normalizedPath","route","filePath","generateImageMetadata","generateSitemaps","Promise","all","ROOT","hasAppPages","Object","keys","some","root","getEdgeServerEntry","opts","appDirLoader","loaderParams","Buffer","from","toString","nextConfigOutput","output","middlewareConfig","JSON","import","layer","reactServerComponents","matchers","middleware","absolute500Path","absoluteAppPath","absoluteDocumentPath","absoluteErrorPath","dev","isServerComponent","stringifiedConfig","sriEnabled","experimental","sri","algorithm","cacheHandler","serverActions","serverSideRendering","undefined","getInstrumentationEntry","filename","isEdgeServer","instrument","getAppEntry","getClientEntry","loaderOptions","pageLoader","runDependingOnPageType","params","onServer","onEdgeServer","pageRuntime","onClient","createEntrypoints","rootPaths","appPaths","edgeServer","server","client","middlewareMatchers","appPathsPerRoute","pathname","actualPath","push","fromEntries","entries","k","v","sort","getEntryHandler","mappings","bundleFile","clientBundlePath","serverBundlePath","slice","regexp","originalSource","isInstrumentation","matchedAppPaths","name","basePath","assetPrefix","flyingShuttle","nextConfigExperimentalUseEarlyImport","useEarlyImport","kind","PAGES_API","bundlePath","entryHandler","finalizeEntrypoint","compilerType","value","hasAppDir","entry","Array","isArray","isApi","api","publicPath","library","type","asyncChunks","isAppLayer","dependOn","appPagesBrowser","Error"],"mappings":"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"}