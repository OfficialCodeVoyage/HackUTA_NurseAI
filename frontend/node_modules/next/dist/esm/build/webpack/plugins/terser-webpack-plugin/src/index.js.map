{"version":3,"sources":["../../../../../../src/build/webpack/plugins/terser-webpack-plugin/src/index.ts"],"sourcesContent":["import {\n  webpack,\n  ModuleFilenameHelpers,\n  sources,\n} from 'next/dist/compiled/webpack/webpack'\nimport pLimit from 'next/dist/compiled/p-limit'\nimport { spans } from '../../profiling-plugin'\n\nfunction getEcmaVersion(environment: any) {\n  // ES 6th\n  if (\n    environment.arrowFunction ||\n    environment.const ||\n    environment.destructuring ||\n    environment.forOf ||\n    environment.module\n  ) {\n    return 2015\n  }\n\n  // ES 11th\n  if (environment.bigIntLiteral || environment.dynamicImport) {\n    return 2020\n  }\n\n  return 5\n}\n\nfunction buildError(error: any, file: string) {\n  if (error.line) {\n    return new Error(\n      `${file} from Terser\\n${error.message} [${file}:${error.line},${\n        error.col\n      }]${\n        error.stack ? `\\n${error.stack.split('\\n').slice(1).join('\\n')}` : ''\n      }`\n    )\n  }\n\n  if (error.stack) {\n    return new Error(`${file} from Terser\\n${error.message}\\n${error.stack}`)\n  }\n\n  return new Error(`${file} from Terser\\n${error.message}`)\n}\n\nconst debugMinify = process.env.NEXT_DEBUG_MINIFY\n\nexport class TerserPlugin {\n  options: {\n    terserOptions: any\n  }\n  constructor(\n    options: {\n      terserOptions?: any\n    } = {}\n  ) {\n    const { terserOptions = {} } = options\n\n    this.options = {\n      terserOptions,\n    }\n  }\n\n  async optimize(\n    compiler: any,\n    compilation: any,\n    assets: any,\n    cache: any,\n    { SourceMapSource, RawSource }: any\n  ) {\n    const compilationSpan = spans.get(compilation)! || spans.get(compiler)\n    const terserSpan = compilationSpan.traceChild(\n      'terser-webpack-plugin-optimize'\n    )\n    terserSpan.setAttribute('compilationName', compilation.name)\n\n    return terserSpan.traceAsyncFn(async () => {\n      const assetsList = Object.keys(assets)\n\n      const assetsForMinify = await Promise.all(\n        assetsList\n          .filter((name) => {\n            if (\n              !ModuleFilenameHelpers.matchObject.bind(\n                // eslint-disable-next-line no-undefined\n                undefined,\n                { test: /\\.[cm]?js(\\?.*)?$/i }\n              )(name)\n            ) {\n              return false\n            }\n\n            const res = compilation.getAsset(name)\n            if (!res) {\n              console.log(name)\n              return false\n            }\n\n            const { info } = res\n\n            // Skip double minimize assets from child compilation\n            if (info.minimized) {\n              return false\n            }\n\n            return true\n          })\n          .map(async (name) => {\n            const { info, source } = compilation.getAsset(name)\n\n            const eTag = cache.getLazyHashedEtag(source)\n            const output = await cache.getPromise(name, eTag)\n\n            if (debugMinify && debugMinify === '1') {\n              console.log(\n                JSON.stringify({\n                  name,\n                  source: source.source().toString(),\n                }),\n                {\n                  breakLength: Infinity,\n                  maxStringLength: Infinity,\n                }\n              )\n            }\n            return { name, info, inputSource: source, output, eTag }\n          })\n      )\n\n      let initializedWorker: any\n\n      // eslint-disable-next-line consistent-return\n      const getWorker = () => {\n        return {\n          minify: async (options: any) => {\n            const result = await require('../../../../swc').minify(\n              options.input,\n              {\n                ...(options.inputSourceMap\n                  ? {\n                      sourceMap: {\n                        content: JSON.stringify(options.inputSourceMap),\n                      },\n                    }\n                  : {}),\n                compress: true,\n                mangle: true,\n                module: 'unknown',\n              }\n            )\n\n            return result\n          },\n        }\n      }\n\n      // The limit in the SWC minifier  will be handled by Node.js\n      const limit = pLimit(Infinity)\n      const scheduledTasks = []\n\n      for (const asset of assetsForMinify) {\n        scheduledTasks.push(\n          limit(async () => {\n            const { name, inputSource, info, eTag } = asset\n            let { output } = asset\n\n            const minifySpan = terserSpan.traceChild('minify-js')\n            minifySpan.setAttribute('name', name)\n            minifySpan.setAttribute(\n              'cache',\n              typeof output === 'undefined' ? 'MISS' : 'HIT'\n            )\n\n            return minifySpan.traceAsyncFn(async () => {\n              if (!output) {\n                const { source: sourceFromInputSource, map: inputSourceMap } =\n                  inputSource.sourceAndMap()\n\n                const input = Buffer.isBuffer(sourceFromInputSource)\n                  ? sourceFromInputSource.toString()\n                  : sourceFromInputSource\n\n                const options = {\n                  name,\n                  input,\n                  inputSourceMap,\n                  terserOptions: { ...this.options.terserOptions },\n                }\n\n                if (typeof options.terserOptions.module === 'undefined') {\n                  if (typeof info.javascriptModule !== 'undefined') {\n                    options.terserOptions.module = info.javascriptModule\n                  } else if (/\\.mjs(\\?.*)?$/i.test(name)) {\n                    options.terserOptions.module = true\n                  } else if (/\\.cjs(\\?.*)?$/i.test(name)) {\n                    options.terserOptions.module = false\n                  }\n                }\n\n                try {\n                  output = await getWorker().minify(options)\n                } catch (error) {\n                  compilation.errors.push(buildError(error, name))\n\n                  return\n                }\n\n                if (output.map) {\n                  output.source = new SourceMapSource(\n                    output.code,\n                    name,\n                    output.map,\n                    input,\n                    inputSourceMap,\n                    true\n                  )\n                } else {\n                  output.source = new RawSource(output.code)\n                }\n\n                await cache.storePromise(name, eTag, {\n                  source: output.source,\n                })\n              }\n\n              const newInfo = { minimized: true }\n              const { source } = output\n\n              compilation.updateAsset(name, source, newInfo)\n            })\n          })\n        )\n      }\n\n      await Promise.all(scheduledTasks)\n\n      if (initializedWorker) {\n        await initializedWorker.end()\n      }\n    })\n  }\n\n  apply(compiler: any) {\n    const { SourceMapSource, RawSource } = compiler?.webpack?.sources || sources\n    const { output } = compiler.options\n\n    if (typeof this.options.terserOptions.ecma === 'undefined') {\n      this.options.terserOptions.ecma = getEcmaVersion(output.environment || {})\n    }\n\n    const pluginName = this.constructor.name\n\n    compiler.hooks.thisCompilation.tap(pluginName, (compilation: any) => {\n      const cache = compilation.getCache('TerserWebpackPlugin')\n\n      const handleHashForChunk = (hash: any, _chunk: any) => {\n        // increment 'c' to invalidate cache\n        hash.update('c')\n      }\n\n      const JSModulesHooks =\n        webpack.javascript.JavascriptModulesPlugin.getCompilationHooks(\n          compilation\n        )\n      JSModulesHooks.chunkHash.tap(pluginName, (chunk, hash) => {\n        if (!chunk.hasRuntime()) return\n        return handleHashForChunk(hash, chunk)\n      })\n\n      compilation.hooks.processAssets.tapPromise(\n        {\n          name: pluginName,\n          stage: webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE,\n        },\n        (assets: any) =>\n          this.optimize(compiler, compilation, assets, cache, {\n            SourceMapSource,\n            RawSource,\n          })\n      )\n\n      compilation.hooks.statsPrinter.tap(pluginName, (stats: any) => {\n        stats.hooks.print\n          .for('asset.info.minimized')\n          .tap(\n            'terser-webpack-plugin',\n            (minimized: any, { green, formatFlag }: any) =>\n              // eslint-disable-next-line no-undefined\n              minimized ? green(formatFlag('minimized')) : undefined\n          )\n      })\n    })\n  }\n}\n"],"names":["webpack","ModuleFilenameHelpers","sources","pLimit","spans","getEcmaVersion","environment","arrowFunction","const","destructuring","forOf","module","bigIntLiteral","dynamicImport","buildError","error","file","line","Error","message","col","stack","split","slice","join","debugMinify","process","env","NEXT_DEBUG_MINIFY","TerserPlugin","constructor","options","terserOptions","optimize","compiler","compilation","assets","cache","SourceMapSource","RawSource","compilationSpan","get","terserSpan","traceChild","setAttribute","name","traceAsyncFn","assetsList","Object","keys","assetsForMinify","Promise","all","filter","matchObject","bind","undefined","test","res","getAsset","console","log","info","minimized","map","source","eTag","getLazyHashedEtag","output","getPromise","JSON","stringify","toString","breakLength","Infinity","maxStringLength","inputSource","initializedWorker","getWorker","minify","result","require","input","inputSourceMap","sourceMap","content","compress","mangle","limit","scheduledTasks","asset","push","minifySpan","sourceFromInputSource","sourceAndMap","Buffer","isBuffer","javascriptModule","errors","code","storePromise","newInfo","updateAsset","end","apply","ecma","pluginName","hooks","thisCompilation","tap","getCache","handleHashForChunk","hash","_chunk","update","JSModulesHooks","javascript","JavascriptModulesPlugin","getCompilationHooks","chunkHash","chunk","hasRuntime","processAssets","tapPromise","stage","Compilation","PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE","statsPrinter","stats","print","for","green","formatFlag"],"mappings":"AAAA,SACEA,OAAO,EACPC,qBAAqB,EACrBC,OAAO,QACF,qCAAoC;AAC3C,OAAOC,YAAY,6BAA4B;AAC/C,SAASC,KAAK,QAAQ,yBAAwB;AAE9C,SAASC,eAAeC,WAAgB;IACtC,SAAS;IACT,IACEA,YAAYC,aAAa,IACzBD,YAAYE,KAAK,IACjBF,YAAYG,aAAa,IACzBH,YAAYI,KAAK,IACjBJ,YAAYK,MAAM,EAClB;QACA,OAAO;IACT;IAEA,UAAU;IACV,IAAIL,YAAYM,aAAa,IAAIN,YAAYO,aAAa,EAAE;QAC1D,OAAO;IACT;IAEA,OAAO;AACT;AAEA,SAASC,WAAWC,KAAU,EAAEC,IAAY;IAC1C,IAAID,MAAME,IAAI,EAAE;QACd,OAAO,IAAIC,MACT,CAAC,EAAEF,KAAK,cAAc,EAAED,MAAMI,OAAO,CAAC,EAAE,EAAEH,KAAK,CAAC,EAAED,MAAME,IAAI,CAAC,CAAC,EAC5DF,MAAMK,GAAG,CACV,CAAC,EACAL,MAAMM,KAAK,GAAG,CAAC,EAAE,EAAEN,MAAMM,KAAK,CAACC,KAAK,CAAC,MAAMC,KAAK,CAAC,GAAGC,IAAI,CAAC,MAAM,CAAC,GAAG,GACpE,CAAC;IAEN;IAEA,IAAIT,MAAMM,KAAK,EAAE;QACf,OAAO,IAAIH,MAAM,CAAC,EAAEF,KAAK,cAAc,EAAED,MAAMI,OAAO,CAAC,EAAE,EAAEJ,MAAMM,KAAK,CAAC,CAAC;IAC1E;IAEA,OAAO,IAAIH,MAAM,CAAC,EAAEF,KAAK,cAAc,EAAED,MAAMI,OAAO,CAAC,CAAC;AAC1D;AAEA,MAAMM,cAAcC,QAAQC,GAAG,CAACC,iBAAiB;AAEjD,OAAO,MAAMC;IAIXC,YACEC,UAEI,CAAC,CAAC,CACN;QACA,MAAM,EAAEC,gBAAgB,CAAC,CAAC,EAAE,GAAGD;QAE/B,IAAI,CAACA,OAAO,GAAG;YACbC;QACF;IACF;IAEA,MAAMC,SACJC,QAAa,EACbC,WAAgB,EAChBC,MAAW,EACXC,KAAU,EACV,EAAEC,eAAe,EAAEC,SAAS,EAAO,EACnC;QACA,MAAMC,kBAAkBpC,MAAMqC,GAAG,CAACN,gBAAiB/B,MAAMqC,GAAG,CAACP;QAC7D,MAAMQ,aAAaF,gBAAgBG,UAAU,CAC3C;QAEFD,WAAWE,YAAY,CAAC,mBAAmBT,YAAYU,IAAI;QAE3D,OAAOH,WAAWI,YAAY,CAAC;YAC7B,MAAMC,aAAaC,OAAOC,IAAI,CAACb;YAE/B,MAAMc,kBAAkB,MAAMC,QAAQC,GAAG,CACvCL,WACGM,MAAM,CAAC,CAACR;gBACP,IACE,CAAC5C,sBAAsBqD,WAAW,CAACC,IAAI,CACrC,wCAAwC;gBACxCC,WACA;oBAAEC,MAAM;gBAAqB,GAC7BZ,OACF;oBACA,OAAO;gBACT;gBAEA,MAAMa,MAAMvB,YAAYwB,QAAQ,CAACd;gBACjC,IAAI,CAACa,KAAK;oBACRE,QAAQC,GAAG,CAAChB;oBACZ,OAAO;gBACT;gBAEA,MAAM,EAAEiB,IAAI,EAAE,GAAGJ;gBAEjB,qDAAqD;gBACrD,IAAII,KAAKC,SAAS,EAAE;oBAClB,OAAO;gBACT;gBAEA,OAAO;YACT,GACCC,GAAG,CAAC,OAAOnB;gBACV,MAAM,EAAEiB,IAAI,EAAEG,MAAM,EAAE,GAAG9B,YAAYwB,QAAQ,CAACd;gBAE9C,MAAMqB,OAAO7B,MAAM8B,iBAAiB,CAACF;gBACrC,MAAMG,SAAS,MAAM/B,MAAMgC,UAAU,CAACxB,MAAMqB;gBAE5C,IAAIzC,eAAeA,gBAAgB,KAAK;oBACtCmC,QAAQC,GAAG,CACTS,KAAKC,SAAS,CAAC;wBACb1B;wBACAoB,QAAQA,OAAOA,MAAM,GAAGO,QAAQ;oBAClC,IACA;wBACEC,aAAaC;wBACbC,iBAAiBD;oBACnB;gBAEJ;gBACA,OAAO;oBAAE7B;oBAAMiB;oBAAMc,aAAaX;oBAAQG;oBAAQF;gBAAK;YACzD;YAGJ,IAAIW;YAEJ,6CAA6C;YAC7C,MAAMC,YAAY;gBAChB,OAAO;oBACLC,QAAQ,OAAOhD;wBACb,MAAMiD,SAAS,MAAMC,QAAQ,mBAAmBF,MAAM,CACpDhD,QAAQmD,KAAK,EACb;4BACE,GAAInD,QAAQoD,cAAc,GACtB;gCACEC,WAAW;oCACTC,SAASf,KAAKC,SAAS,CAACxC,QAAQoD,cAAc;gCAChD;4BACF,IACA,CAAC,CAAC;4BACNG,UAAU;4BACVC,QAAQ;4BACR5E,QAAQ;wBACV;wBAGF,OAAOqE;oBACT;gBACF;YACF;YAEA,4DAA4D;YAC5D,MAAMQ,QAAQrF,OAAOuE;YACrB,MAAMe,iBAAiB,EAAE;YAEzB,KAAK,MAAMC,SAASxC,gBAAiB;gBACnCuC,eAAeE,IAAI,CACjBH,MAAM;oBACJ,MAAM,EAAE3C,IAAI,EAAE+B,WAAW,EAAEd,IAAI,EAAEI,IAAI,EAAE,GAAGwB;oBAC1C,IAAI,EAAEtB,MAAM,EAAE,GAAGsB;oBAEjB,MAAME,aAAalD,WAAWC,UAAU,CAAC;oBACzCiD,WAAWhD,YAAY,CAAC,QAAQC;oBAChC+C,WAAWhD,YAAY,CACrB,SACA,OAAOwB,WAAW,cAAc,SAAS;oBAG3C,OAAOwB,WAAW9C,YAAY,CAAC;wBAC7B,IAAI,CAACsB,QAAQ;4BACX,MAAM,EAAEH,QAAQ4B,qBAAqB,EAAE7B,KAAKmB,cAAc,EAAE,GAC1DP,YAAYkB,YAAY;4BAE1B,MAAMZ,QAAQa,OAAOC,QAAQ,CAACH,yBAC1BA,sBAAsBrB,QAAQ,KAC9BqB;4BAEJ,MAAM9D,UAAU;gCACdc;gCACAqC;gCACAC;gCACAnD,eAAe;oCAAE,GAAG,IAAI,CAACD,OAAO,CAACC,aAAa;gCAAC;4BACjD;4BAEA,IAAI,OAAOD,QAAQC,aAAa,CAACrB,MAAM,KAAK,aAAa;gCACvD,IAAI,OAAOmD,KAAKmC,gBAAgB,KAAK,aAAa;oCAChDlE,QAAQC,aAAa,CAACrB,MAAM,GAAGmD,KAAKmC,gBAAgB;gCACtD,OAAO,IAAI,iBAAiBxC,IAAI,CAACZ,OAAO;oCACtCd,QAAQC,aAAa,CAACrB,MAAM,GAAG;gCACjC,OAAO,IAAI,iBAAiB8C,IAAI,CAACZ,OAAO;oCACtCd,QAAQC,aAAa,CAACrB,MAAM,GAAG;gCACjC;4BACF;4BAEA,IAAI;gCACFyD,SAAS,MAAMU,YAAYC,MAAM,CAAChD;4BACpC,EAAE,OAAOhB,OAAO;gCACdoB,YAAY+D,MAAM,CAACP,IAAI,CAAC7E,WAAWC,OAAO8B;gCAE1C;4BACF;4BAEA,IAAIuB,OAAOJ,GAAG,EAAE;gCACdI,OAAOH,MAAM,GAAG,IAAI3B,gBAClB8B,OAAO+B,IAAI,EACXtD,MACAuB,OAAOJ,GAAG,EACVkB,OACAC,gBACA;4BAEJ,OAAO;gCACLf,OAAOH,MAAM,GAAG,IAAI1B,UAAU6B,OAAO+B,IAAI;4BAC3C;4BAEA,MAAM9D,MAAM+D,YAAY,CAACvD,MAAMqB,MAAM;gCACnCD,QAAQG,OAAOH,MAAM;4BACvB;wBACF;wBAEA,MAAMoC,UAAU;4BAAEtC,WAAW;wBAAK;wBAClC,MAAM,EAAEE,MAAM,EAAE,GAAGG;wBAEnBjC,YAAYmE,WAAW,CAACzD,MAAMoB,QAAQoC;oBACxC;gBACF;YAEJ;YAEA,MAAMlD,QAAQC,GAAG,CAACqC;YAElB,IAAIZ,mBAAmB;gBACrB,MAAMA,kBAAkB0B,GAAG;YAC7B;QACF;IACF;IAEAC,MAAMtE,QAAa,EAAE;YACoBA;QAAvC,MAAM,EAAEI,eAAe,EAAEC,SAAS,EAAE,GAAGL,CAAAA,6BAAAA,oBAAAA,SAAUlC,OAAO,qBAAjBkC,kBAAmBhC,OAAO,KAAIA;QACrE,MAAM,EAAEkE,MAAM,EAAE,GAAGlC,SAASH,OAAO;QAEnC,IAAI,OAAO,IAAI,CAACA,OAAO,CAACC,aAAa,CAACyE,IAAI,KAAK,aAAa;YAC1D,IAAI,CAAC1E,OAAO,CAACC,aAAa,CAACyE,IAAI,GAAGpG,eAAe+D,OAAO9D,WAAW,IAAI,CAAC;QAC1E;QAEA,MAAMoG,aAAa,IAAI,CAAC5E,WAAW,CAACe,IAAI;QAExCX,SAASyE,KAAK,CAACC,eAAe,CAACC,GAAG,CAACH,YAAY,CAACvE;YAC9C,MAAME,QAAQF,YAAY2E,QAAQ,CAAC;YAEnC,MAAMC,qBAAqB,CAACC,MAAWC;gBACrC,oCAAoC;gBACpCD,KAAKE,MAAM,CAAC;YACd;YAEA,MAAMC,iBACJnH,QAAQoH,UAAU,CAACC,uBAAuB,CAACC,mBAAmB,CAC5DnF;YAEJgF,eAAeI,SAAS,CAACV,GAAG,CAACH,YAAY,CAACc,OAAOR;gBAC/C,IAAI,CAACQ,MAAMC,UAAU,IAAI;gBACzB,OAAOV,mBAAmBC,MAAMQ;YAClC;YAEArF,YAAYwE,KAAK,CAACe,aAAa,CAACC,UAAU,CACxC;gBACE9E,MAAM6D;gBACNkB,OAAO5H,QAAQ6H,WAAW,CAACC,kCAAkC;YAC/D,GACA,CAAC1F,SACC,IAAI,CAACH,QAAQ,CAACC,UAAUC,aAAaC,QAAQC,OAAO;oBAClDC;oBACAC;gBACF;YAGJJ,YAAYwE,KAAK,CAACoB,YAAY,CAAClB,GAAG,CAACH,YAAY,CAACsB;gBAC9CA,MAAMrB,KAAK,CAACsB,KAAK,CACdC,GAAG,CAAC,wBACJrB,GAAG,CACF,yBACA,CAAC9C,WAAgB,EAAEoE,KAAK,EAAEC,UAAU,EAAO,GACzC,wCAAwC;oBACxCrE,YAAYoE,MAAMC,WAAW,gBAAgB5E;YAErD;QACF;IACF;AACF"}