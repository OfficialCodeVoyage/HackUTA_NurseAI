{"version":3,"sources":["../../../../src/build/webpack/plugins/font-stylesheet-gathering-plugin.ts"],"sourcesContent":["import {\n  webpack,\n  BasicEvaluatedExpression,\n  sources,\n} from 'next/dist/compiled/webpack/webpack'\nimport {\n  getFontDefinitionFromNetwork,\n  getFontOverrideCss,\n} from '../../../server/font-utils'\nimport type { FontManifest } from '../../../server/font-utils'\nimport postcss from 'postcss'\nimport minifier from 'next/dist/compiled/cssnano-simple'\nimport {\n  AUTOMATIC_FONT_OPTIMIZATION_MANIFEST,\n  OPTIMIZED_FONT_PROVIDERS,\n} from '../../../shared/lib/constants'\nimport * as Log from '../../output/log'\n\nfunction minifyCss(css: string): Promise<string> {\n  return postcss([\n    minifier(\n      {\n        excludeAll: true,\n        discardComments: true,\n        normalizeWhitespace: { exclude: false },\n      },\n      postcss\n    ),\n  ])\n    .process(css, { from: undefined })\n    .then((res) => res.css)\n}\n\nfunction isNodeCreatingLinkElement(node: any) {\n  const callee = node.callee as any\n  if (callee.type !== 'Identifier') {\n    return false\n  }\n  const componentNode = node.arguments[0] as any\n  if (componentNode.type !== 'Literal') {\n    return false\n  }\n  // React has pragma: _jsx.\n  // Next has pragma: __jsx.\n  return (\n    (callee.name === '_jsx' || callee.name === '__jsx') &&\n    componentNode.value === 'link'\n  )\n}\n\nexport class FontStylesheetGatheringPlugin {\n  compiler?: webpack.Compiler\n  gatheredStylesheets: Array<string> = []\n  manifestContent: FontManifest = []\n  adjustFontFallbacks?: boolean\n  adjustFontFallbacksWithSizeAdjust?: boolean\n\n  constructor({\n    adjustFontFallbacks,\n    adjustFontFallbacksWithSizeAdjust,\n  }: {\n    adjustFontFallbacks?: boolean\n    adjustFontFallbacksWithSizeAdjust?: boolean\n  }) {\n    this.adjustFontFallbacks = adjustFontFallbacks\n    this.adjustFontFallbacksWithSizeAdjust = adjustFontFallbacksWithSizeAdjust\n  }\n\n  private parserHandler = (\n    factory: ReturnType<webpack.Compiler['createNormalModuleFactory']>\n  ): void => {\n    const JS_TYPES = ['auto', 'esm', 'dynamic']\n    // Do an extra walk per module and add interested visitors to the walk.\n    for (const type of JS_TYPES) {\n      factory.hooks.parser\n        .for('javascript/' + type)\n        .tap(this.constructor.name, (parser: any) => {\n          /**\n           * Webpack fun facts:\n           * `parser.hooks.call.for` cannot catch calls for user defined identifiers like `__jsx`\n           * it can only detect calls for native objects like `window`, `this`, `eval` etc.\n           * In order to be able to catch calls of variables like `__jsx`, first we need to catch them as\n           * Identifier and then return `BasicEvaluatedExpression` whose `id` and `type` webpack matches to\n           * invoke hook for call.\n           * See: https://github.com/webpack/webpack/blob/webpack-4/lib/Parser.js#L1931-L1932.\n           */\n          parser.hooks.evaluate\n            .for('Identifier')\n            .tap(this.constructor.name, (node: any) => {\n              // We will only optimize fonts from first party code.\n              if (parser?.state?.module?.resource.includes('node_modules')) {\n                return\n              }\n              let result\n              if (node.name === '_jsx' || node.name === '__jsx') {\n                result = new BasicEvaluatedExpression()\n                // @ts-ignore\n                result.setRange(node.range)\n                result.setExpression(node)\n                result.setIdentifier(node.name)\n\n                // This was added in webpack 5.\n                result.getMembers = () => []\n              }\n              return result\n            })\n\n          const jsxNodeHandler = (node: any) => {\n            if (node.arguments.length !== 2) {\n              // A font link tag has only two arguments rel=stylesheet and href='...'\n              return\n            }\n            if (!isNodeCreatingLinkElement(node)) {\n              return\n            }\n\n            // node.arguments[0] is the name of the tag and [1] are the props.\n            const arg1 = node.arguments[1]\n\n            const propsNode =\n              arg1.type === 'ObjectExpression' ? (arg1 as any) : undefined\n            const props: { [key: string]: string } = {}\n            if (propsNode) {\n              propsNode.properties.forEach((prop: any) => {\n                if (prop.type !== 'Property') {\n                  return\n                }\n                if (\n                  prop.key.type === 'Identifier' &&\n                  prop.value.type === 'Literal'\n                ) {\n                  props[prop.key.name] = prop.value.value as string\n                }\n              })\n            }\n\n            if (\n              !props.rel ||\n              props.rel !== 'stylesheet' ||\n              !props.href ||\n              !OPTIMIZED_FONT_PROVIDERS.some(({ url }) =>\n                props.href.startsWith(url)\n              )\n            ) {\n              return false\n            }\n\n            this.gatheredStylesheets.push(props.href)\n\n            const buildInfo = parser?.state?.module?.buildInfo\n\n            if (buildInfo) {\n              buildInfo.valueDependencies.set(\n                AUTOMATIC_FONT_OPTIMIZATION_MANIFEST,\n                this.gatheredStylesheets\n              )\n            }\n          }\n\n          // React JSX transform:\n          parser.hooks.call\n            .for('_jsx')\n            .tap(this.constructor.name, jsxNodeHandler)\n          // Next.js JSX transform:\n          parser.hooks.call\n            .for('__jsx')\n            .tap(this.constructor.name, jsxNodeHandler)\n          // New React JSX transform:\n          parser.hooks.call\n            .for('imported var')\n            .tap(this.constructor.name, jsxNodeHandler)\n        })\n    }\n  }\n\n  public apply(compiler: webpack.Compiler) {\n    this.compiler = compiler\n    compiler.hooks.normalModuleFactory.tap(\n      this.constructor.name,\n      this.parserHandler\n    )\n    compiler.hooks.make.tapAsync(this.constructor.name, (compilation, cb) => {\n      compilation.hooks.finishModules.tapAsync(\n        this.constructor.name,\n        async (modules: any, modulesFinished: Function) => {\n          let fontStylesheets = this.gatheredStylesheets\n\n          const fontUrls = new Set<string>()\n          modules.forEach((module: any) => {\n            const fontDependencies = module?.buildInfo?.valueDependencies?.get(\n              AUTOMATIC_FONT_OPTIMIZATION_MANIFEST\n            )\n            if (fontDependencies) {\n              fontDependencies.forEach((v: string) => fontUrls.add(v))\n            }\n          })\n\n          fontStylesheets = Array.from(fontUrls)\n\n          const fontDefinitionPromises = fontStylesheets.map((url) =>\n            getFontDefinitionFromNetwork(url)\n          )\n\n          this.manifestContent = []\n          for (let promiseIndex in fontDefinitionPromises) {\n            let css = await fontDefinitionPromises[promiseIndex]\n\n            if (this.adjustFontFallbacks) {\n              css += getFontOverrideCss(\n                fontStylesheets[promiseIndex],\n                css,\n                this.adjustFontFallbacksWithSizeAdjust\n              )\n            }\n\n            if (css) {\n              try {\n                const content = await minifyCss(css)\n                this.manifestContent.push({\n                  url: fontStylesheets[promiseIndex],\n                  content,\n                })\n              } catch (err) {\n                Log.warn(\n                  `Failed to minify the stylesheet for ${fontStylesheets[promiseIndex]}. Skipped optimizing this font.`\n                )\n                console.error(err)\n              }\n            }\n          }\n\n          // @ts-expect-error invalid assets type\n          compilation.assets[AUTOMATIC_FONT_OPTIMIZATION_MANIFEST] =\n            new sources.RawSource(\n              JSON.stringify(this.manifestContent, null, '  ')\n            )\n\n          modulesFinished()\n        }\n      )\n      cb()\n    })\n\n    compiler.hooks.make.tap(this.constructor.name, (compilation) => {\n      compilation.hooks.processAssets.tap(\n        {\n          name: this.constructor.name,\n          stage: webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS,\n        },\n        (assets: any) => {\n          assets['../' + AUTOMATIC_FONT_OPTIMIZATION_MANIFEST] =\n            new sources.RawSource(\n              JSON.stringify(this.manifestContent, null, '  ')\n            )\n        }\n      )\n    })\n  }\n}\n"],"names":["webpack","BasicEvaluatedExpression","sources","getFontDefinitionFromNetwork","getFontOverrideCss","postcss","minifier","AUTOMATIC_FONT_OPTIMIZATION_MANIFEST","OPTIMIZED_FONT_PROVIDERS","Log","minifyCss","css","excludeAll","discardComments","normalizeWhitespace","exclude","process","from","undefined","then","res","isNodeCreatingLinkElement","node","callee","type","componentNode","arguments","name","value","FontStylesheetGatheringPlugin","constructor","adjustFontFallbacks","adjustFontFallbacksWithSizeAdjust","gatheredStylesheets","manifestContent","parserHandler","factory","JS_TYPES","hooks","parser","for","tap","evaluate","state","module","resource","includes","result","setRange","range","setExpression","setIdentifier","getMembers","jsxNodeHandler","length","arg1","propsNode","props","properties","forEach","prop","key","rel","href","some","url","startsWith","push","buildInfo","valueDependencies","set","call","apply","compiler","normalModuleFactory","make","tapAsync","compilation","cb","finishModules","modules","modulesFinished","fontStylesheets","fontUrls","Set","fontDependencies","get","v","add","Array","fontDefinitionPromises","map","promiseIndex","content","err","warn","console","error","assets","RawSource","JSON","stringify","processAssets","stage","Compilation","PROCESS_ASSETS_STAGE_ADDITIONS"],"mappings":"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"}