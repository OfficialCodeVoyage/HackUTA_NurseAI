{"version":3,"sources":["../../src/lib/scheduler.ts"],"sourcesContent":["export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = <T = void>(cb: ScheduledFn<T>): void => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    process.nextTick(cb)\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = <T = void>(cb: ScheduledFn<T>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n"],"names":["scheduleOnNextTick","cb","Promise","resolve","then","process","nextTick","scheduleImmediate","env","NEXT_RUNTIME","setTimeout","setImmediate","atLeastOneTask"],"mappings":"AAGA;;;;;CAKC,GACD,OAAO,MAAMA,qBAAqB,CAAWC;IAC3C,6EAA6E;IAC7E,4EAA4E;IAC5E,uCAAuC;IACvC,EAAE;IACF,kLAAkL;IAClL,EAAE;IACFC,QAAQC,OAAO,GAAGC,IAAI,CAAC;QACrBC,QAAQC,QAAQ,CAACL;IACnB;AACF,EAAC;AAED;;;;;CAKC,GACD,OAAO,MAAMM,oBAAoB,CAAWN;IAC1C,IAAII,QAAQG,GAAG,CAACC,YAAY,KAAK,QAAQ;QACvCC,WAAWT,IAAI;IACjB,OAAO;QACLU,aAAaV;IACf;AACF,EAAC;AAED;;;;CAIC,GACD,OAAO,SAASW;IACd,OAAO,IAAIV,QAAc,CAACC,UAAYI,kBAAkBJ;AAC1D"}