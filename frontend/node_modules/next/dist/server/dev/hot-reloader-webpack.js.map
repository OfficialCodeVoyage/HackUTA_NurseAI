{"version":3,"sources":["../../../src/server/dev/hot-reloader-webpack.ts"],"sourcesContent":["import type { NextConfigComplete } from '../config-shared'\nimport type { CustomRoutes } from '../../lib/load-custom-routes'\nimport type { Duplex } from 'stream'\nimport type { Telemetry } from '../../telemetry/storage'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { UrlObject } from 'url'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\n\nimport { webpack, StringXor } from 'next/dist/compiled/webpack/webpack'\nimport { getOverlayMiddleware } from '../../client/components/react-dev-overlay/server/middleware'\nimport { WebpackHotMiddleware } from './hot-middleware'\nimport { join, relative, isAbsolute, posix } from 'path'\nimport {\n  createEntrypoints,\n  createPagesMapping,\n  finalizeEntrypoint,\n  getClientEntry,\n  getEdgeServerEntry,\n  getAppEntry,\n  runDependingOnPageType,\n  getStaticInfoIncludingLayouts,\n  getInstrumentationEntry,\n} from '../../build/entries'\nimport { watchCompilers } from '../../build/output'\nimport * as Log from '../../build/output/log'\nimport getBaseWebpackConfig, {\n  loadProjectInfo,\n} from '../../build/webpack-config'\nimport { APP_DIR_ALIAS, WEBPACK_LAYERS } from '../../lib/constants'\nimport { recursiveDelete } from '../../lib/recursive-delete'\nimport {\n  BLOCKED_PAGES,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  COMPILER_NAMES,\n  RSC_MODULE_TYPES,\n} from '../../shared/lib/constants'\nimport type { __ApiPreviewProps } from '../api-utils'\nimport { getPathMatch } from '../../shared/lib/router/utils/path-match'\nimport { findPageFile } from '../lib/find-page-file'\nimport {\n  BUILDING,\n  getEntries,\n  EntryTypes,\n  getInvalidator,\n  onDemandEntryHandler,\n} from './on-demand-entry-handler'\nimport { denormalizePagePath } from '../../shared/lib/page-path/denormalize-page-path'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport getRouteFromEntrypoint from '../get-route-from-entrypoint'\nimport {\n  difference,\n  isInstrumentationHookFile,\n  isMiddlewareFile,\n  isMiddlewareFilename,\n} from '../../build/utils'\nimport { DecodeError } from '../../shared/lib/utils'\nimport { type Span, trace } from '../../trace'\nimport { getProperError } from '../../lib/is-error'\nimport ws from 'next/dist/compiled/ws'\nimport { existsSync, promises as fs } from 'fs'\nimport type { UnwrapPromise } from '../../lib/coalesced-function'\nimport { parseVersionInfo } from './parse-version-info'\nimport type { VersionInfo } from './parse-version-info'\nimport { isAPIRoute } from '../../lib/is-api-route'\nimport { getRouteLoaderEntry } from '../../build/webpack/loaders/next-route-loader'\nimport {\n  isInternalComponent,\n  isNonRoutePagesPage,\n} from '../../lib/is-internal-component'\nimport { RouteKind } from '../route-kind'\nimport {\n  HMR_ACTIONS_SENT_TO_BROWSER,\n  type NextJsHotReloaderInterface,\n} from './hot-reloader-types'\nimport type { HMR_ACTION_TYPES } from './hot-reloader-types'\nimport type { WebpackError } from 'webpack'\nimport { PAGE_TYPES } from '../../lib/page-types'\nimport { FAST_REFRESH_RUNTIME_RELOAD } from './messages'\n\nconst MILLISECONDS_IN_NANOSECOND = BigInt(1_000_000)\nconst isTestMode = !!(\n  process.env.NEXT_TEST_MODE ||\n  process.env.__NEXT_TEST_MODE ||\n  process.env.DEBUG\n)\n\nfunction diff(a: Set<any>, b: Set<any>) {\n  return new Set([...a].filter((v) => !b.has(v)))\n}\n\nconst wsServer = new ws.Server({ noServer: true })\n\nexport async function renderScriptError(\n  res: ServerResponse,\n  error: Error,\n  { verbose = true } = {}\n): Promise<{ finished: true | undefined }> {\n  // Asks CDNs and others to not to cache the errored page\n  res.setHeader(\n    'Cache-Control',\n    'no-cache, no-store, max-age=0, must-revalidate'\n  )\n\n  if ((error as any).code === 'ENOENT') {\n    return { finished: undefined }\n  }\n\n  if (verbose) {\n    console.error(error.stack)\n  }\n  res.statusCode = 500\n  res.end('500 - Internal Error')\n  return { finished: true }\n}\n\nfunction addCorsSupport(req: IncomingMessage, res: ServerResponse) {\n  // Only rewrite CORS handling when URL matches a hot-reloader middleware\n  if (!req.url!.startsWith('/__next')) {\n    return { preflight: false }\n  }\n\n  if (!req.headers.origin) {\n    return { preflight: false }\n  }\n\n  res.setHeader('Access-Control-Allow-Origin', req.headers.origin)\n  res.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET')\n  // Based on https://github.com/primus/access-control/blob/4cf1bc0e54b086c91e6aa44fb14966fa5ef7549c/index.js#L158\n  if (req.headers['access-control-request-headers']) {\n    res.setHeader(\n      'Access-Control-Allow-Headers',\n      req.headers['access-control-request-headers'] as string\n    )\n  }\n\n  if (req.method === 'OPTIONS') {\n    res.writeHead(200)\n    res.end()\n    return { preflight: true }\n  }\n\n  return { preflight: false }\n}\n\nexport const matchNextPageBundleRequest = getPathMatch(\n  '/_next/static/chunks/pages/:path*.js(\\\\.map|)'\n)\n\n// Iteratively look up the issuer till it ends up at the root\nfunction findEntryModule(\n  module: webpack.Module,\n  compilation: webpack.Compilation\n): any {\n  for (;;) {\n    const issuer = compilation.moduleGraph.getIssuer(module)\n    if (!issuer) return module\n    module = issuer\n  }\n}\n\nfunction erroredPages(compilation: webpack.Compilation) {\n  const failedPages: { [page: string]: WebpackError[] } = {}\n  for (const error of compilation.errors) {\n    if (!error.module) {\n      continue\n    }\n\n    const entryModule = findEntryModule(error.module, compilation)\n    const { name } = entryModule\n    if (!name) {\n      continue\n    }\n\n    // Only pages have to be reloaded\n    const enhancedName = getRouteFromEntrypoint(name)\n\n    if (!enhancedName) {\n      continue\n    }\n\n    if (!failedPages[enhancedName]) {\n      failedPages[enhancedName] = []\n    }\n\n    failedPages[enhancedName].push(error)\n  }\n\n  return failedPages\n}\n\nexport async function getVersionInfo(enabled: boolean): Promise<VersionInfo> {\n  let installed = '0.0.0'\n\n  if (!enabled) {\n    return { installed, staleness: 'unknown' }\n  }\n\n  try {\n    installed = require('next/package.json').version\n\n    let res\n\n    try {\n      // use NPM registry regardless user using Yarn\n      res = await fetch('https://registry.npmjs.org/-/package/next/dist-tags')\n    } catch {\n      // ignore fetch errors\n    }\n\n    if (!res || !res.ok) return { installed, staleness: 'unknown' }\n\n    const { latest, canary } = await res.json()\n\n    return parseVersionInfo({ installed, latest, canary })\n  } catch (e: any) {\n    console.error(e)\n    return { installed, staleness: 'unknown' }\n  }\n}\n\nexport default class HotReloaderWebpack implements NextJsHotReloaderInterface {\n  private hasAmpEntrypoints: boolean\n  private hasAppRouterEntrypoints: boolean\n  private hasPagesRouterEntrypoints: boolean\n  private dir: string\n  private buildId: string\n  private encryptionKey: string\n  private interceptors: any[]\n  private pagesDir?: string\n  private distDir: string\n  private webpackHotMiddleware?: WebpackHotMiddleware\n  private config: NextConfigComplete\n  private clientStats: webpack.Stats | null\n  private clientError: Error | null = null\n  private serverError: Error | null = null\n  private hmrServerError: Error | null = null\n  private serverPrevDocumentHash: string | null\n  private serverChunkNames?: Set<string>\n  private prevChunkNames?: Set<any>\n  private onDemandEntries?: ReturnType<typeof onDemandEntryHandler>\n  private previewProps: __ApiPreviewProps\n  private watcher: any\n  private rewrites: CustomRoutes['rewrites']\n  private fallbackWatcher: any\n  private hotReloaderSpan: Span\n  private pagesMapping: { [key: string]: string } = {}\n  private appDir?: string\n  private telemetry: Telemetry\n  private versionInfo: VersionInfo = {\n    staleness: 'unknown',\n    installed: '0.0.0',\n  }\n  private reloadAfterInvalidation: boolean = false\n\n  public serverStats: webpack.Stats | null\n  public edgeServerStats: webpack.Stats | null\n  public multiCompiler?: webpack.MultiCompiler\n  public activeWebpackConfigs?: Array<\n    UnwrapPromise<ReturnType<typeof getBaseWebpackConfig>>\n  >\n\n  constructor(\n    dir: string,\n    {\n      config,\n      pagesDir,\n      distDir,\n      buildId,\n      encryptionKey,\n      previewProps,\n      rewrites,\n      appDir,\n      telemetry,\n    }: {\n      config: NextConfigComplete\n      pagesDir?: string\n      distDir: string\n      buildId: string\n      encryptionKey: string\n      previewProps: __ApiPreviewProps\n      rewrites: CustomRoutes['rewrites']\n      appDir?: string\n      telemetry: Telemetry\n    }\n  ) {\n    this.hasAmpEntrypoints = false\n    this.hasAppRouterEntrypoints = false\n    this.hasPagesRouterEntrypoints = false\n    this.buildId = buildId\n    this.encryptionKey = encryptionKey\n    this.dir = dir\n    this.interceptors = []\n    this.pagesDir = pagesDir\n    this.appDir = appDir\n    this.distDir = distDir\n    this.clientStats = null\n    this.serverStats = null\n    this.edgeServerStats = null\n    this.serverPrevDocumentHash = null\n    this.telemetry = telemetry\n\n    this.config = config\n    this.previewProps = previewProps\n    this.rewrites = rewrites\n    this.hotReloaderSpan = trace('hot-reloader', undefined, {\n      version: process.env.__NEXT_VERSION as string,\n    })\n    // Ensure the hotReloaderSpan is flushed immediately as it's the parentSpan for all processing\n    // of the current `next dev` invocation.\n    this.hotReloaderSpan.stop()\n  }\n\n  public async run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlObject\n  ): Promise<{ finished?: true }> {\n    // Usually CORS support is not needed for the hot-reloader (this is dev only feature)\n    // With when the app runs for multi-zones support behind a proxy,\n    // the current page is trying to access this URL via assetPrefix.\n    // That's when the CORS support is needed.\n    const { preflight } = addCorsSupport(req, res)\n    if (preflight) {\n      return {}\n    }\n\n    // When a request comes in that is a page bundle, e.g. /_next/static/<buildid>/pages/index.js\n    // we have to compile the page using on-demand-entries, this middleware will handle doing that\n    // by adding the page to on-demand-entries, waiting till it's done\n    // and then the bundle will be served like usual by the actual route in server/index.js\n    const handlePageBundleRequest = async (\n      pageBundleRes: ServerResponse,\n      parsedPageBundleUrl: UrlObject\n    ): Promise<{ finished?: true }> => {\n      const { pathname } = parsedPageBundleUrl\n      const params = matchNextPageBundleRequest(pathname)\n      if (!params) {\n        return {}\n      }\n\n      let decodedPagePath: string\n\n      try {\n        decodedPagePath = `/${params.path\n          .map((param: string) => decodeURIComponent(param))\n          .join('/')}`\n      } catch (_) {\n        throw new DecodeError('failed to decode param')\n      }\n\n      const page = denormalizePagePath(decodedPagePath)\n\n      if (page === '/_error' || BLOCKED_PAGES.indexOf(page) === -1) {\n        try {\n          await this.ensurePage({ page, clientOnly: true, url: req.url })\n        } catch (error) {\n          return await renderScriptError(pageBundleRes, getProperError(error))\n        }\n\n        const errors = await this.getCompilationErrors(page)\n        if (errors.length > 0) {\n          return await renderScriptError(pageBundleRes, errors[0], {\n            verbose: false,\n          })\n        }\n      }\n\n      return {}\n    }\n\n    const { finished } = await handlePageBundleRequest(res, parsedUrl)\n\n    for (const fn of this.interceptors) {\n      await new Promise<void>((resolve, reject) => {\n        fn(req, res, (err: Error) => {\n          if (err) return reject(err)\n          resolve()\n        })\n      })\n    }\n\n    return { finished }\n  }\n\n  public setHmrServerError(error: Error | null): void {\n    this.hmrServerError = error\n  }\n\n  public clearHmrServerError(): void {\n    if (this.hmrServerError) {\n      this.setHmrServerError(null)\n      this.send({ action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE })\n    }\n  }\n\n  protected async refreshServerComponents(): Promise<void> {\n    this.send({\n      action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n      // TODO: granular reloading of changes\n      // entrypoints: serverComponentChanges,\n    })\n  }\n\n  public onHMR(\n    req: IncomingMessage,\n    _socket: Duplex,\n    head: Buffer,\n    callback: (client: ws.WebSocket) => void\n  ) {\n    wsServer.handleUpgrade(req, req.socket, head, (client) => {\n      this.webpackHotMiddleware?.onHMR(client)\n      this.onDemandEntries?.onHMR(client, () => this.hmrServerError)\n      callback(client)\n\n      client.addEventListener('message', ({ data }) => {\n        data = typeof data !== 'string' ? data.toString() : data\n\n        try {\n          const payload = JSON.parse(data)\n\n          let traceChild:\n            | {\n                name: string\n                startTime?: bigint\n                endTime?: bigint\n                attrs?: Record<string, number | string | undefined | string[]>\n              }\n            | undefined\n\n          switch (payload.event) {\n            case 'span-end': {\n              traceChild = {\n                name: payload.spanName,\n                startTime:\n                  BigInt(Math.floor(payload.startTime)) *\n                  MILLISECONDS_IN_NANOSECOND,\n                attrs: payload.attributes,\n                endTime:\n                  BigInt(Math.floor(payload.endTime)) *\n                  MILLISECONDS_IN_NANOSECOND,\n              }\n              break\n            }\n            case 'client-hmr-latency': {\n              traceChild = {\n                name: payload.event,\n                startTime:\n                  BigInt(payload.startTime) * MILLISECONDS_IN_NANOSECOND,\n                endTime: BigInt(payload.endTime) * MILLISECONDS_IN_NANOSECOND,\n                attrs: {\n                  updatedModules: payload.updatedModules.map((m: string) =>\n                    m\n                      .replace(`(${WEBPACK_LAYERS.appPagesBrowser})/`, '')\n                      .replace(/^\\.\\//, '[project]/')\n                  ),\n                  page: payload.page,\n                  isPageHidden: payload.isPageHidden,\n                },\n              }\n              break\n            }\n            case 'client-reload-page':\n            case 'client-success': {\n              traceChild = {\n                name: payload.event,\n              }\n              break\n            }\n            case 'client-error': {\n              traceChild = {\n                name: payload.event,\n                attrs: { errorCount: payload.errorCount },\n              }\n              break\n            }\n            case 'client-warning': {\n              traceChild = {\n                name: payload.event,\n                attrs: { warningCount: payload.warningCount },\n              }\n              break\n            }\n            case 'client-removed-page':\n            case 'client-added-page': {\n              traceChild = {\n                name: payload.event,\n                attrs: { page: payload.page || '' },\n              }\n              break\n            }\n            case 'client-full-reload': {\n              const { event, stackTrace, hadRuntimeError } = payload\n\n              traceChild = {\n                name: event,\n                attrs: { stackTrace: stackTrace ?? '' },\n              }\n\n              if (hadRuntimeError) {\n                Log.warn(FAST_REFRESH_RUNTIME_RELOAD)\n                break\n              }\n\n              let fileMessage = ''\n              if (stackTrace) {\n                const file = /Aborted because (.+) is not accepted/.exec(\n                  stackTrace\n                )?.[1]\n                if (file) {\n                  // `file` is filepath in `pages/` but it can be weird long webpack url in `app/`.\n                  // If it's a webpack loader URL, it will start with '(app-pages)/./'\n                  if (\n                    file.startsWith(`(${WEBPACK_LAYERS.appPagesBrowser})/./`)\n                  ) {\n                    const fileUrl = new URL(file, 'file://')\n                    const cwd = process.cwd()\n                    const modules = fileUrl.searchParams\n                      .getAll('modules')\n                      .map((filepath) => filepath.slice(cwd.length + 1))\n                      .filter(\n                        (filepath) => !filepath.startsWith('node_modules')\n                      )\n\n                    if (modules.length > 0) {\n                      fileMessage = ` when ${modules.join(', ')} changed`\n                    }\n                  } else {\n                    fileMessage = ` when ${file} changed`\n                  }\n                }\n              }\n\n              Log.warn(\n                `Fast Refresh had to perform a full reload${fileMessage}. Read more: https://nextjs.org/docs/messages/fast-refresh-reload`\n              )\n              break\n            }\n            default: {\n              break\n            }\n          }\n\n          if (traceChild) {\n            this.hotReloaderSpan.manualTraceChild(\n              traceChild.name,\n              traceChild.startTime,\n              traceChild.endTime,\n              { ...traceChild.attrs, clientId: payload.id }\n            )\n          }\n        } catch (_) {\n          // invalid WebSocket message\n        }\n      })\n    })\n  }\n\n  private async clean(span: Span): Promise<void> {\n    return span\n      .traceChild('clean')\n      .traceAsyncFn(() =>\n        recursiveDelete(join(this.dir, this.config.distDir), /^cache/)\n      )\n  }\n\n  private async getWebpackConfig(span: Span) {\n    const webpackConfigSpan = span.traceChild('get-webpack-config')\n\n    const pageExtensions = this.config.pageExtensions\n\n    return webpackConfigSpan.traceAsyncFn(async () => {\n      const pagePaths = !this.pagesDir\n        ? ([] as (string | null)[])\n        : await webpackConfigSpan\n            .traceChild('get-page-paths')\n            .traceAsyncFn(() =>\n              Promise.all([\n                findPageFile(this.pagesDir!, '/_app', pageExtensions, false),\n                findPageFile(\n                  this.pagesDir!,\n                  '/_document',\n                  pageExtensions,\n                  false\n                ),\n              ])\n            )\n\n      this.pagesMapping = await webpackConfigSpan\n        .traceChild('create-pages-mapping')\n        .traceAsyncFn(() =>\n          createPagesMapping({\n            isDev: true,\n            pageExtensions: this.config.pageExtensions,\n            pagesType: PAGE_TYPES.PAGES,\n            pagePaths: pagePaths.filter(\n              (i: string | null): i is string => typeof i === 'string'\n            ),\n            pagesDir: this.pagesDir,\n            appDir: this.appDir,\n          })\n        )\n\n      const entrypoints = await webpackConfigSpan\n        .traceChild('create-entrypoints')\n        .traceAsyncFn(() =>\n          createEntrypoints({\n            appDir: this.appDir,\n            buildId: this.buildId,\n            config: this.config,\n            envFiles: [],\n            isDev: true,\n            pages: this.pagesMapping,\n            pagesDir: this.pagesDir,\n            previewMode: this.previewProps,\n            rootDir: this.dir,\n            pageExtensions: this.config.pageExtensions,\n          })\n        )\n\n      const commonWebpackOptions = {\n        dev: true,\n        buildId: this.buildId,\n        encryptionKey: this.encryptionKey,\n        config: this.config,\n        pagesDir: this.pagesDir,\n        rewrites: this.rewrites,\n        originalRewrites: this.config._originalRewrites,\n        originalRedirects: this.config._originalRedirects,\n        runWebpackSpan: this.hotReloaderSpan,\n        appDir: this.appDir,\n      }\n\n      return webpackConfigSpan\n        .traceChild('generate-webpack-config')\n        .traceAsyncFn(async () => {\n          const info = await loadProjectInfo({\n            dir: this.dir,\n            config: commonWebpackOptions.config,\n            dev: true,\n          })\n          return Promise.all([\n            // order is important here\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.client,\n              entrypoints: entrypoints.client,\n              ...info,\n            }),\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.server,\n              entrypoints: entrypoints.server,\n              ...info,\n            }),\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.edgeServer,\n              entrypoints: entrypoints.edgeServer,\n              ...info,\n            }),\n          ])\n        })\n    })\n  }\n\n  public async buildFallbackError(): Promise<void> {\n    if (this.fallbackWatcher) return\n\n    const info = await loadProjectInfo({\n      dir: this.dir,\n      config: this.config,\n      dev: true,\n    })\n    const fallbackConfig = await getBaseWebpackConfig(this.dir, {\n      runWebpackSpan: this.hotReloaderSpan,\n      dev: true,\n      compilerType: COMPILER_NAMES.client,\n      config: this.config,\n      buildId: this.buildId,\n      encryptionKey: this.encryptionKey,\n      pagesDir: this.pagesDir,\n      rewrites: {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      },\n      originalRewrites: {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      },\n      originalRedirects: [],\n      isDevFallback: true,\n      entrypoints: (\n        await createEntrypoints({\n          appDir: this.appDir,\n          buildId: this.buildId,\n          config: this.config,\n          envFiles: [],\n          isDev: true,\n          pages: {\n            '/_app': 'next/dist/pages/_app',\n            '/_error': 'next/dist/pages/_error',\n          },\n          pagesDir: this.pagesDir,\n          previewMode: this.previewProps,\n          rootDir: this.dir,\n          pageExtensions: this.config.pageExtensions,\n        })\n      ).client,\n      ...info,\n    })\n    const fallbackCompiler = webpack(fallbackConfig)\n\n    this.fallbackWatcher = await new Promise((resolve) => {\n      let bootedFallbackCompiler = false\n      fallbackCompiler.watch(\n        // @ts-ignore webpack supports an array of watchOptions when using a multiCompiler\n        fallbackConfig.watchOptions,\n        // Errors are handled separately\n        (_err: any) => {\n          if (!bootedFallbackCompiler) {\n            bootedFallbackCompiler = true\n            resolve(true)\n          }\n        }\n      )\n    })\n  }\n\n  private async tracedGetVersionInfo(span: Span, enabled: boolean) {\n    const versionInfoSpan = span.traceChild('get-version-info')\n    return versionInfoSpan.traceAsyncFn<VersionInfo>(async () =>\n      getVersionInfo(enabled)\n    )\n  }\n\n  public async start(): Promise<void> {\n    const startSpan = this.hotReloaderSpan.traceChild('start')\n    startSpan.stop() // Stop immediately to create an artificial parent span\n\n    this.versionInfo = await this.tracedGetVersionInfo(\n      startSpan,\n      isTestMode || this.telemetry.isEnabled\n    )\n\n    await this.clean(startSpan)\n    // Ensure distDir exists before writing package.json\n    await fs.mkdir(this.distDir, { recursive: true })\n\n    const distPackageJsonPath = join(this.distDir, 'package.json')\n    // Ensure commonjs handling is used for files in the distDir (generally .next)\n    // Files outside of the distDir can be \"type\": \"module\"\n    await fs.writeFile(distPackageJsonPath, '{\"type\": \"commonjs\"}')\n\n    this.activeWebpackConfigs = await this.getWebpackConfig(startSpan)\n\n    for (const config of this.activeWebpackConfigs) {\n      const defaultEntry = config.entry\n      config.entry = async (...args) => {\n        const outputPath = this.multiCompiler?.outputPath || ''\n        const entries = getEntries(outputPath)\n        // @ts-ignore entry is always a function\n        const entrypoints = await defaultEntry(...args)\n        const isClientCompilation = config.name === COMPILER_NAMES.client\n        const isNodeServerCompilation = config.name === COMPILER_NAMES.server\n        const isEdgeServerCompilation =\n          config.name === COMPILER_NAMES.edgeServer\n\n        await Promise.all(\n          Object.keys(entries).map(async (entryKey) => {\n            const entryData = entries[entryKey]\n            const { bundlePath, dispose } = entryData\n\n            const result =\n              /^(client|server|edge-server)@(app|pages|root)@(.*)/g.exec(\n                entryKey\n              )\n            const [, key /* pageType */, , page] = result! // this match should always happen\n\n            if (key === COMPILER_NAMES.client && !isClientCompilation) return\n            if (key === COMPILER_NAMES.server && !isNodeServerCompilation)\n              return\n            if (key === COMPILER_NAMES.edgeServer && !isEdgeServerCompilation)\n              return\n\n            const isEntry = entryData.type === EntryTypes.ENTRY\n            const isChildEntry = entryData.type === EntryTypes.CHILD_ENTRY\n\n            // Check if the page was removed or disposed and remove it\n            if (isEntry) {\n              const pageExists =\n                !dispose && existsSync(entryData.absolutePagePath)\n              if (!pageExists) {\n                delete entries[entryKey]\n                return\n              }\n            }\n\n            // For child entries, if it has an entry file and it's gone, remove it\n            if (isChildEntry) {\n              if (entryData.absoluteEntryFilePath) {\n                const pageExists =\n                  !dispose && existsSync(entryData.absoluteEntryFilePath)\n                if (!pageExists) {\n                  delete entries[entryKey]\n                  return\n                }\n              }\n            }\n\n            // Ensure _error is considered a `pages` page.\n            if (page === '/_error') {\n              this.hasPagesRouterEntrypoints = true\n            }\n\n            const hasAppDir = !!this.appDir\n            const isAppPath = hasAppDir && bundlePath.startsWith('app/')\n            const staticInfo = isEntry\n              ? await getStaticInfoIncludingLayouts({\n                  isInsideAppDir: isAppPath,\n                  pageExtensions: this.config.pageExtensions,\n                  pageFilePath: entryData.absolutePagePath,\n                  appDir: this.appDir,\n                  config: this.config,\n                  isDev: true,\n                  page,\n                })\n              : {}\n\n            if (staticInfo.amp === true || staticInfo.amp === 'hybrid') {\n              this.hasAmpEntrypoints = true\n            }\n            const isServerComponent =\n              isAppPath && staticInfo.rsc !== RSC_MODULE_TYPES.client\n\n            const pageType: PAGE_TYPES = entryData.bundlePath.startsWith(\n              'pages/'\n            )\n              ? PAGE_TYPES.PAGES\n              : entryData.bundlePath.startsWith('app/')\n                ? PAGE_TYPES.APP\n                : PAGE_TYPES.ROOT\n\n            if (pageType === 'pages') {\n              this.hasPagesRouterEntrypoints = true\n            }\n            if (pageType === 'app') {\n              this.hasAppRouterEntrypoints = true\n            }\n\n            const isInstrumentation =\n              isInstrumentationHookFile(page) && pageType === PAGE_TYPES.ROOT\n\n            runDependingOnPageType({\n              page,\n              pageRuntime: staticInfo.runtime,\n              pageType,\n              onEdgeServer: () => {\n                // TODO-APP: verify if child entry should support.\n                if (!isEdgeServerCompilation || !isEntry) return\n                entries[entryKey].status = BUILDING\n\n                if (isInstrumentation) {\n                  const normalizedBundlePath = bundlePath.replace('src/', '')\n                  entrypoints[normalizedBundlePath] = finalizeEntrypoint({\n                    compilerType: COMPILER_NAMES.edgeServer,\n                    name: normalizedBundlePath,\n                    value: getInstrumentationEntry({\n                      absolutePagePath: entryData.absolutePagePath,\n                      isEdgeServer: true,\n                      isDev: true,\n                    }),\n                    isServerComponent: true,\n                    hasAppDir,\n                  })\n                  return\n                }\n                const appDirLoader = isAppPath\n                  ? getAppEntry({\n                      name: bundlePath,\n                      page,\n                      appPaths: entryData.appPaths,\n                      pagePath: posix.join(\n                        APP_DIR_ALIAS,\n                        relative(\n                          this.appDir!,\n                          entryData.absolutePagePath\n                        ).replace(/\\\\/g, '/')\n                      ),\n                      appDir: this.appDir!,\n                      pageExtensions: this.config.pageExtensions,\n                      rootDir: this.dir,\n                      isDev: true,\n                      tsconfigPath: this.config.typescript.tsconfigPath,\n                      basePath: this.config.basePath,\n                      assetPrefix: this.config.assetPrefix,\n                      nextConfigOutput: this.config.output,\n                      preferredRegion: staticInfo.preferredRegion,\n                      middlewareConfig: Buffer.from(\n                        JSON.stringify(staticInfo.middleware || {})\n                      ).toString('base64'),\n                    }).import\n                  : undefined\n\n                entrypoints[bundlePath] = finalizeEntrypoint({\n                  compilerType: COMPILER_NAMES.edgeServer,\n                  name: bundlePath,\n                  value: getEdgeServerEntry({\n                    absolutePagePath: entryData.absolutePagePath,\n                    rootDir: this.dir,\n                    buildId: this.buildId,\n                    bundlePath,\n                    config: this.config,\n                    isDev: true,\n                    page,\n                    pages: this.pagesMapping,\n                    isServerComponent,\n                    appDirLoader,\n                    pagesType: isAppPath ? PAGE_TYPES.APP : PAGE_TYPES.PAGES,\n                    preferredRegion: staticInfo.preferredRegion,\n                  }),\n                  hasAppDir,\n                })\n              },\n              onClient: () => {\n                if (!isClientCompilation) return\n                if (isChildEntry) {\n                  entries[entryKey].status = BUILDING\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    name: bundlePath,\n                    compilerType: COMPILER_NAMES.client,\n                    value: entryData.request,\n                    hasAppDir,\n                  })\n                } else {\n                  entries[entryKey].status = BUILDING\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    name: bundlePath,\n                    compilerType: COMPILER_NAMES.client,\n                    value: getClientEntry({\n                      absolutePagePath: entryData.absolutePagePath,\n                      page,\n                    }),\n                    hasAppDir,\n                  })\n                }\n              },\n              onServer: () => {\n                // TODO-APP: verify if child entry should support.\n                if (!isNodeServerCompilation || !isEntry) return\n                entries[entryKey].status = BUILDING\n                let relativeRequest = relative(\n                  config.context!,\n                  entryData.absolutePagePath\n                )\n                if (\n                  !isAbsolute(relativeRequest) &&\n                  !relativeRequest.startsWith('../')\n                ) {\n                  relativeRequest = `./${relativeRequest}`\n                }\n\n                let value: { import: string; layer?: string } | string\n                if (isInstrumentation) {\n                  value = getInstrumentationEntry({\n                    absolutePagePath: entryData.absolutePagePath,\n                    isEdgeServer: false,\n                    isDev: true,\n                  })\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    compilerType: COMPILER_NAMES.server,\n                    name: bundlePath,\n                    isServerComponent: true,\n                    value,\n                    hasAppDir,\n                  })\n                } else if (isAppPath) {\n                  value = getAppEntry({\n                    name: bundlePath,\n                    page,\n                    appPaths: entryData.appPaths,\n                    pagePath: posix.join(\n                      APP_DIR_ALIAS,\n                      relative(\n                        this.appDir!,\n                        entryData.absolutePagePath\n                      ).replace(/\\\\/g, '/')\n                    ),\n                    appDir: this.appDir!,\n                    pageExtensions: this.config.pageExtensions,\n                    rootDir: this.dir,\n                    isDev: true,\n                    tsconfigPath: this.config.typescript.tsconfigPath,\n                    basePath: this.config.basePath,\n                    assetPrefix: this.config.assetPrefix,\n                    nextConfigOutput: this.config.output,\n                    preferredRegion: staticInfo.preferredRegion,\n                    middlewareConfig: Buffer.from(\n                      JSON.stringify(staticInfo.middleware || {})\n                    ).toString('base64'),\n                  })\n                } else if (isAPIRoute(page)) {\n                  value = getRouteLoaderEntry({\n                    kind: RouteKind.PAGES_API,\n                    page,\n                    absolutePagePath: relativeRequest,\n                    preferredRegion: staticInfo.preferredRegion,\n                    middlewareConfig: staticInfo.middleware || {},\n                  })\n                } else if (\n                  !isMiddlewareFile(page) &&\n                  !isInternalComponent(relativeRequest) &&\n                  !isNonRoutePagesPage(page) &&\n                  !isInstrumentation\n                ) {\n                  value = getRouteLoaderEntry({\n                    kind: RouteKind.PAGES,\n                    page,\n                    pages: this.pagesMapping,\n                    absolutePagePath: relativeRequest,\n                    preferredRegion: staticInfo.preferredRegion,\n                    middlewareConfig: staticInfo.middleware ?? {},\n                  })\n                } else {\n                  value = relativeRequest\n                }\n\n                entrypoints[bundlePath] = finalizeEntrypoint({\n                  compilerType: COMPILER_NAMES.server,\n                  name: bundlePath,\n                  isServerComponent,\n                  value,\n                  hasAppDir,\n                })\n              },\n            })\n          })\n        )\n\n        if (!this.hasAmpEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_AMP]\n        }\n        if (!this.hasPagesRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_MAIN]\n          delete entrypoints['pages/_app']\n          delete entrypoints['pages/_error']\n          delete entrypoints['/_error']\n          delete entrypoints['pages/_document']\n        }\n        // Remove React Refresh entrypoint chunk as `app` doesn't require it.\n        if (!this.hasAmpEntrypoints && !this.hasPagesRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH]\n        }\n        if (!this.hasAppRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_MAIN_APP]\n        }\n\n        return entrypoints\n      }\n    }\n\n    // Enable building of client compilation before server compilation in development\n    // @ts-ignore webpack 5\n    this.activeWebpackConfigs.parallelism = 1\n\n    this.multiCompiler = webpack(\n      this.activeWebpackConfigs\n    ) as unknown as webpack.MultiCompiler\n\n    // Copy over the filesystem so that it is shared between all compilers.\n    const inputFileSystem = this.multiCompiler.compilers[0].inputFileSystem\n    for (const compiler of this.multiCompiler.compilers) {\n      compiler.inputFileSystem = inputFileSystem\n      // This is set for the initial compile. After that Watching class in webpack adds it.\n      compiler.fsStartTime = Date.now()\n      // Ensure NodeEnvironmentPlugin doesn't purge the inputFileSystem. Purging is handled in `done` below.\n      compiler.hooks.beforeRun.intercept({\n        register(tapInfo: any) {\n          if (tapInfo.name === 'NodeEnvironmentPlugin') {\n            return null\n          }\n          return tapInfo\n        },\n      })\n    }\n\n    this.multiCompiler.hooks.done.tap('NextjsHotReloader', () => {\n      inputFileSystem.purge!()\n    })\n    watchCompilers(\n      this.multiCompiler.compilers[0],\n      this.multiCompiler.compilers[1],\n      this.multiCompiler.compilers[2]\n    )\n\n    // Watch for changes to client/server page files so we can tell when just\n    // the server file changes and trigger a reload for GS(S)P pages\n    const changedClientPages = new Set<string>()\n    const changedServerPages = new Set<string>()\n    const changedEdgeServerPages = new Set<string>()\n\n    const changedServerComponentPages = new Set<string>()\n    const changedCSSImportPages = new Set<string>()\n\n    const prevClientPageHashes = new Map<string, string>()\n    const prevServerPageHashes = new Map<string, string>()\n    const prevEdgeServerPageHashes = new Map<string, string>()\n    const prevCSSImportModuleHashes = new Map<string, string>()\n\n    const pageExtensionRegex = new RegExp(\n      `\\\\.(?:${this.config.pageExtensions.join('|')})$`\n    )\n\n    const trackPageChanges =\n      (\n        pageHashMap: Map<string, string>,\n        changedItems: Set<string>,\n        serverComponentChangedItems?: Set<string>\n      ) =>\n      (stats: webpack.Compilation) => {\n        try {\n          stats.entrypoints.forEach((entry, key) => {\n            if (\n              key.startsWith('pages/') ||\n              key.startsWith('app/') ||\n              isMiddlewareFilename(key)\n            ) {\n              // TODO this doesn't handle on demand loaded chunks\n              entry.chunks.forEach((chunk) => {\n                if (chunk.id === key) {\n                  const modsIterable: any =\n                    stats.chunkGraph.getChunkModulesIterable(chunk)\n\n                  let hasCSSModuleChanges = false\n                  let chunksHash = new StringXor()\n                  let chunksHashServerLayer = new StringXor()\n\n                  modsIterable.forEach((mod: any) => {\n                    if (\n                      mod.resource &&\n                      mod.resource.replace(/\\\\/g, '/').includes(key) &&\n                      // Shouldn't match CSS modules, etc.\n                      pageExtensionRegex.test(mod.resource)\n                    ) {\n                      // use original source to calculate hash since mod.hash\n                      // includes the source map in development which changes\n                      // every time for both server and client so we calculate\n                      // the hash without the source map for the page module\n                      const hash = require('crypto')\n                        .createHash('sha1')\n                        .update(mod.originalSource().buffer())\n                        .digest()\n                        .toString('hex')\n\n                      if (\n                        mod.layer === WEBPACK_LAYERS.reactServerComponents &&\n                        mod?.buildInfo?.rsc?.type !== 'client'\n                      ) {\n                        chunksHashServerLayer.add(hash)\n                      }\n\n                      chunksHash.add(hash)\n                    } else {\n                      // for non-pages we can use the module hash directly\n                      const hash = stats.chunkGraph.getModuleHash(\n                        mod,\n                        chunk.runtime\n                      )\n\n                      if (\n                        mod.layer === WEBPACK_LAYERS.reactServerComponents &&\n                        mod?.buildInfo?.rsc?.type !== 'client'\n                      ) {\n                        chunksHashServerLayer.add(hash)\n                      }\n\n                      chunksHash.add(hash)\n\n                      // Both CSS import changes from server and client\n                      // components are tracked.\n                      if (\n                        key.startsWith('app/') &&\n                        /\\.(css|scss|sass)$/.test(mod.resource || '')\n                      ) {\n                        const resourceKey = mod.layer + ':' + mod.resource\n                        const prevHash =\n                          prevCSSImportModuleHashes.get(resourceKey)\n                        if (prevHash && prevHash !== hash) {\n                          hasCSSModuleChanges = true\n                        }\n                        prevCSSImportModuleHashes.set(resourceKey, hash)\n                      }\n                    }\n                  })\n\n                  const prevHash = pageHashMap.get(key)\n                  const curHash = chunksHash.toString()\n                  if (prevHash && prevHash !== curHash) {\n                    changedItems.add(key)\n                  }\n                  pageHashMap.set(key, curHash)\n\n                  if (serverComponentChangedItems) {\n                    const serverKey =\n                      WEBPACK_LAYERS.reactServerComponents + ':' + key\n                    const prevServerHash = pageHashMap.get(serverKey)\n                    const curServerHash = chunksHashServerLayer.toString()\n                    if (prevServerHash && prevServerHash !== curServerHash) {\n                      serverComponentChangedItems.add(key)\n                    }\n                    pageHashMap.set(serverKey, curServerHash)\n                  }\n\n                  if (hasCSSModuleChanges) {\n                    changedCSSImportPages.add(key)\n                  }\n                }\n              })\n            }\n          })\n        } catch (err) {\n          console.error(err)\n        }\n      }\n\n    this.multiCompiler.compilers[0].hooks.emit.tap(\n      'NextjsHotReloaderForClient',\n      trackPageChanges(prevClientPageHashes, changedClientPages)\n    )\n    this.multiCompiler.compilers[1].hooks.emit.tap(\n      'NextjsHotReloaderForServer',\n      trackPageChanges(\n        prevServerPageHashes,\n        changedServerPages,\n        changedServerComponentPages\n      )\n    )\n    this.multiCompiler.compilers[2].hooks.emit.tap(\n      'NextjsHotReloaderForServer',\n      trackPageChanges(\n        prevEdgeServerPageHashes,\n        changedEdgeServerPages,\n        changedServerComponentPages\n      )\n    )\n\n    // This plugin watches for changes to _document.js and notifies the client side that it should reload the page\n    this.multiCompiler.compilers[1].hooks.failed.tap(\n      'NextjsHotReloaderForServer',\n      (err: Error) => {\n        this.serverError = err\n        this.serverStats = null\n        this.serverChunkNames = undefined\n      }\n    )\n\n    this.multiCompiler.compilers[2].hooks.done.tap(\n      'NextjsHotReloaderForServer',\n      (stats) => {\n        this.serverError = null\n        this.edgeServerStats = stats\n      }\n    )\n\n    this.multiCompiler.compilers[1].hooks.done.tap(\n      'NextjsHotReloaderForServer',\n      (stats) => {\n        this.serverError = null\n        this.serverStats = stats\n\n        if (!this.pagesDir) {\n          return\n        }\n\n        const { compilation } = stats\n\n        // We only watch `_document` for changes on the server compilation\n        // the rest of the files will be triggered by the client compilation\n        const documentChunk = compilation.namedChunks.get('pages/_document')\n        // If the document chunk can't be found we do nothing\n        if (!documentChunk) {\n          return\n        }\n\n        // Initial value\n        if (this.serverPrevDocumentHash === null) {\n          this.serverPrevDocumentHash = documentChunk.hash || null\n          return\n        }\n\n        // If _document.js didn't change we don't trigger a reload.\n        if (documentChunk.hash === this.serverPrevDocumentHash) {\n          return\n        }\n\n        // As document chunk will change if new app pages are joined,\n        // since react bundle is different it will effect the chunk hash.\n        // So we diff the chunk changes, if there's only new app page chunk joins,\n        // then we don't trigger a reload by checking pages/_document chunk change.\n        if (this.appDir) {\n          const chunkNames = new Set(compilation.namedChunks.keys())\n          const diffChunkNames = difference<string>(\n            this.serverChunkNames || new Set(),\n            chunkNames\n          )\n\n          if (\n            diffChunkNames.length === 0 ||\n            diffChunkNames.every((chunkName) => chunkName.startsWith('app/'))\n          ) {\n            return\n          }\n          this.serverChunkNames = chunkNames\n        }\n\n        this.serverPrevDocumentHash = documentChunk.hash || null\n\n        // Notify reload to reload the page, as _document.js was changed (different hash)\n        this.send({ action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE })\n      }\n    )\n\n    this.multiCompiler.hooks.done.tap('NextjsHotReloaderForServer', () => {\n      const reloadAfterInvalidation = this.reloadAfterInvalidation\n      this.reloadAfterInvalidation = false\n\n      const serverOnlyChanges = difference<string>(\n        changedServerPages,\n        changedClientPages\n      )\n\n      const edgeServerOnlyChanges = difference<string>(\n        changedEdgeServerPages,\n        changedClientPages\n      )\n\n      const pageChanges = serverOnlyChanges\n        .concat(edgeServerOnlyChanges)\n        .filter((key) => key.startsWith('pages/'))\n      const middlewareChanges = Array.from(changedEdgeServerPages).filter(\n        (name) => isMiddlewareFilename(name)\n      )\n\n      if (middlewareChanges.length > 0) {\n        this.send({\n          event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n        })\n      }\n\n      if (pageChanges.length > 0) {\n        this.send({\n          event: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ONLY_CHANGES,\n          pages: serverOnlyChanges.map((pg) =>\n            denormalizePagePath(pg.slice('pages'.length))\n          ),\n        })\n      }\n\n      if (\n        changedServerComponentPages.size ||\n        changedCSSImportPages.size ||\n        reloadAfterInvalidation\n      ) {\n        this.refreshServerComponents()\n      }\n\n      changedClientPages.clear()\n      changedServerPages.clear()\n      changedEdgeServerPages.clear()\n      changedServerComponentPages.clear()\n      changedCSSImportPages.clear()\n    })\n\n    this.multiCompiler.compilers[0].hooks.failed.tap(\n      'NextjsHotReloaderForClient',\n      (err: Error) => {\n        this.clientError = err\n        this.clientStats = null\n      }\n    )\n    this.multiCompiler.compilers[0].hooks.done.tap(\n      'NextjsHotReloaderForClient',\n      (stats) => {\n        this.clientError = null\n        this.clientStats = stats\n\n        const { compilation } = stats\n        const chunkNames = new Set(\n          [...compilation.namedChunks.keys()].filter(\n            (name) => !!getRouteFromEntrypoint(name)\n          )\n        )\n\n        if (this.prevChunkNames) {\n          // detect chunks which have to be replaced with a new template\n          // e.g, pages/index.js <-> pages/_error.js\n          const addedPages = diff(chunkNames, this.prevChunkNames!)\n          const removedPages = diff(this.prevChunkNames!, chunkNames)\n\n          if (addedPages.size > 0) {\n            for (const addedPage of addedPages) {\n              const page = getRouteFromEntrypoint(addedPage)\n              this.send({\n                action: HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE,\n                data: [page],\n              })\n            }\n          }\n\n          if (removedPages.size > 0) {\n            for (const removedPage of removedPages) {\n              const page = getRouteFromEntrypoint(removedPage)\n              this.send({\n                action: HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE,\n                data: [page],\n              })\n            }\n          }\n        }\n\n        this.prevChunkNames = chunkNames\n      }\n    )\n\n    this.webpackHotMiddleware = new WebpackHotMiddleware(\n      this.multiCompiler.compilers,\n      this.versionInfo\n    )\n\n    let booted = false\n\n    this.watcher = await new Promise((resolve) => {\n      const watcher = this.multiCompiler?.watch(\n        // @ts-ignore webpack supports an array of watchOptions when using a multiCompiler\n        this.activeWebpackConfigs.map((config) => config.watchOptions!),\n        // Errors are handled separately\n        (_err: any) => {\n          if (!booted) {\n            booted = true\n            resolve(watcher)\n          }\n        }\n      )\n    })\n\n    this.onDemandEntries = onDemandEntryHandler({\n      hotReloader: this,\n      multiCompiler: this.multiCompiler,\n      pagesDir: this.pagesDir,\n      appDir: this.appDir,\n      rootDir: this.dir,\n      nextConfig: this.config,\n      ...(this.config.onDemandEntries as {\n        maxInactiveAge: number\n        pagesBufferLength: number\n      }),\n    })\n\n    this.interceptors = [\n      getOverlayMiddleware({\n        rootDirectory: this.dir,\n        stats: () => this.clientStats,\n        serverStats: () => this.serverStats,\n        edgeServerStats: () => this.edgeServerStats,\n      }),\n    ]\n  }\n\n  public invalidate(\n    { reloadAfterInvalidation }: { reloadAfterInvalidation: boolean } = {\n      reloadAfterInvalidation: false,\n    }\n  ) {\n    // Cache the `reloadAfterInvalidation` flag, and use it to reload the page when compilation is done\n    this.reloadAfterInvalidation = reloadAfterInvalidation\n    const outputPath = this.multiCompiler?.outputPath\n    if (outputPath) {\n      getInvalidator(outputPath)?.invalidate()\n    }\n  }\n\n  public async stop(): Promise<void> {\n    await new Promise((resolve, reject) => {\n      this.watcher.close((err: any) => (err ? reject(err) : resolve(true)))\n    })\n\n    if (this.fallbackWatcher) {\n      await new Promise((resolve, reject) => {\n        this.fallbackWatcher.close((err: any) =>\n          err ? reject(err) : resolve(true)\n        )\n      })\n    }\n    this.multiCompiler = undefined\n  }\n\n  public async getCompilationErrors(page: string) {\n    const getErrors = ({ compilation }: webpack.Stats) => {\n      const failedPages = erroredPages(compilation)\n      const normalizedPage = normalizePathSep(page)\n      // If there is an error related to the requesting page we display it instead of the first error\n      return failedPages[normalizedPage]?.length > 0\n        ? failedPages[normalizedPage]\n        : compilation.errors\n    }\n\n    if (this.clientError) {\n      return [this.clientError]\n    } else if (this.serverError) {\n      return [this.serverError]\n    } else if (this.clientStats?.hasErrors()) {\n      return getErrors(this.clientStats)\n    } else if (this.serverStats?.hasErrors()) {\n      return getErrors(this.serverStats)\n    } else if (this.edgeServerStats?.hasErrors()) {\n      return getErrors(this.edgeServerStats)\n    } else {\n      return []\n    }\n  }\n\n  public send(action: HMR_ACTION_TYPES): void {\n    this.webpackHotMiddleware!.publish(action)\n  }\n\n  public async ensurePage({\n    page,\n    clientOnly,\n    appPaths,\n    definition,\n    isApp,\n    url,\n  }: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    isApp?: boolean\n    definition?: RouteDefinition\n    url?: string\n  }): Promise<void> {\n    // Make sure we don't re-build or dispose prebuilt pages\n    if (page !== '/_error' && BLOCKED_PAGES.indexOf(page) !== -1) {\n      return\n    }\n    const error = clientOnly\n      ? this.clientError\n      : this.serverError || this.clientError\n    if (error) {\n      throw error\n    }\n\n    return this.onDemandEntries?.ensurePage({\n      page,\n      appPaths,\n      definition,\n      isApp,\n      url,\n    })\n  }\n}\n"],"names":["HotReloaderWebpack","getVersionInfo","matchNextPageBundleRequest","renderScriptError","MILLISECONDS_IN_NANOSECOND","BigInt","isTestMode","process","env","NEXT_TEST_MODE","__NEXT_TEST_MODE","DEBUG","diff","a","b","Set","filter","v","has","wsServer","ws","Server","noServer","res","error","verbose","setHeader","code","finished","undefined","console","stack","statusCode","end","addCorsSupport","req","url","startsWith","preflight","headers","origin","method","writeHead","getPathMatch","findEntryModule","module","compilation","issuer","moduleGraph","getIssuer","erroredPages","failedPages","errors","entryModule","name","enhancedName","getRouteFromEntrypoint","push","enabled","installed","staleness","require","version","fetch","ok","latest","canary","json","parseVersionInfo","e","constructor","dir","config","pagesDir","distDir","buildId","encryptionKey","previewProps","rewrites","appDir","telemetry","clientError","serverError","hmrServerError","pagesMapping","versionInfo","reloadAfterInvalidation","hasAmpEntrypoints","hasAppRouterEntrypoints","hasPagesRouterEntrypoints","interceptors","clientStats","serverStats","edgeServerStats","serverPrevDocumentHash","hotReloaderSpan","trace","__NEXT_VERSION","stop","run","parsedUrl","handlePageBundleRequest","pageBundleRes","parsedPageBundleUrl","pathname","params","decodedPagePath","path","map","param","decodeURIComponent","join","_","DecodeError","page","denormalizePagePath","BLOCKED_PAGES","indexOf","ensurePage","clientOnly","getProperError","getCompilationErrors","length","fn","Promise","resolve","reject","err","setHmrServerError","clearHmrServerError","send","action","HMR_ACTIONS_SENT_TO_BROWSER","RELOAD_PAGE","refreshServerComponents","SERVER_COMPONENT_CHANGES","onHMR","_socket","head","callback","handleUpgrade","socket","client","webpackHotMiddleware","onDemandEntries","addEventListener","data","toString","payload","JSON","parse","traceChild","event","spanName","startTime","Math","floor","attrs","attributes","endTime","updatedModules","m","replace","WEBPACK_LAYERS","appPagesBrowser","isPageHidden","errorCount","warningCount","stackTrace","hadRuntimeError","Log","warn","FAST_REFRESH_RUNTIME_RELOAD","fileMessage","file","exec","fileUrl","URL","cwd","modules","searchParams","getAll","filepath","slice","manualTraceChild","clientId","id","clean","span","traceAsyncFn","recursiveDelete","getWebpackConfig","webpackConfigSpan","pageExtensions","pagePaths","all","findPageFile","createPagesMapping","isDev","pagesType","PAGE_TYPES","PAGES","i","entrypoints","createEntrypoints","envFiles","pages","previewMode","rootDir","commonWebpackOptions","dev","originalRewrites","_originalRewrites","originalRedirects","_originalRedirects","runWebpackSpan","info","loadProjectInfo","getBaseWebpackConfig","compilerType","COMPILER_NAMES","server","edgeServer","buildFallbackError","fallbackWatcher","fallbackConfig","beforeFiles","afterFiles","fallback","isDevFallback","fallbackCompiler","webpack","bootedFallbackCompiler","watch","watchOptions","_err","tracedGetVersionInfo","versionInfoSpan","start","startSpan","isEnabled","fs","mkdir","recursive","distPackageJsonPath","writeFile","activeWebpackConfigs","defaultEntry","entry","args","outputPath","multiCompiler","entries","getEntries","isClientCompilation","isNodeServerCompilation","isEdgeServerCompilation","Object","keys","entryKey","entryData","bundlePath","dispose","result","key","isEntry","type","EntryTypes","ENTRY","isChildEntry","CHILD_ENTRY","pageExists","existsSync","absolutePagePath","absoluteEntryFilePath","hasAppDir","isAppPath","staticInfo","getStaticInfoIncludingLayouts","isInsideAppDir","pageFilePath","amp","isServerComponent","rsc","RSC_MODULE_TYPES","pageType","APP","ROOT","isInstrumentation","isInstrumentationHookFile","runDependingOnPageType","pageRuntime","runtime","onEdgeServer","status","BUILDING","normalizedBundlePath","finalizeEntrypoint","value","getInstrumentationEntry","isEdgeServer","appDirLoader","getAppEntry","appPaths","pagePath","posix","APP_DIR_ALIAS","relative","tsconfigPath","typescript","basePath","assetPrefix","nextConfigOutput","output","preferredRegion","middlewareConfig","Buffer","from","stringify","middleware","import","getEdgeServerEntry","onClient","request","getClientEntry","onServer","relativeRequest","context","isAbsolute","isAPIRoute","getRouteLoaderEntry","kind","RouteKind","PAGES_API","isMiddlewareFile","isInternalComponent","isNonRoutePagesPage","CLIENT_STATIC_FILES_RUNTIME_AMP","CLIENT_STATIC_FILES_RUNTIME_MAIN","CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH","CLIENT_STATIC_FILES_RUNTIME_MAIN_APP","parallelism","inputFileSystem","compilers","compiler","fsStartTime","Date","now","hooks","beforeRun","intercept","register","tapInfo","done","tap","purge","watchCompilers","changedClientPages","changedServerPages","changedEdgeServerPages","changedServerComponentPages","changedCSSImportPages","prevClientPageHashes","Map","prevServerPageHashes","prevEdgeServerPageHashes","prevCSSImportModuleHashes","pageExtensionRegex","RegExp","trackPageChanges","pageHashMap","changedItems","serverComponentChangedItems","stats","forEach","isMiddlewareFilename","chunks","chunk","modsIterable","chunkGraph","getChunkModulesIterable","hasCSSModuleChanges","chunksHash","StringXor","chunksHashServerLayer","mod","resource","includes","test","hash","createHash","update","originalSource","buffer","digest","layer","reactServerComponents","buildInfo","add","getModuleHash","resourceKey","prevHash","get","set","curHash","serverKey","prevServerHash","curServerHash","emit","failed","serverChunkNames","documentChunk","namedChunks","chunkNames","diffChunkNames","difference","every","chunkName","serverOnlyChanges","edgeServerOnlyChanges","pageChanges","concat","middlewareChanges","Array","MIDDLEWARE_CHANGES","SERVER_ONLY_CHANGES","pg","size","clear","prevChunkNames","addedPages","removedPages","addedPage","ADDED_PAGE","removedPage","REMOVED_PAGE","WebpackHotMiddleware","booted","watcher","onDemandEntryHandler","hotReloader","nextConfig","getOverlayMiddleware","rootDirectory","invalidate","getInvalidator","close","getErrors","normalizedPage","normalizePathSep","hasErrors","publish","definition","isApp"],"mappings":"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"}