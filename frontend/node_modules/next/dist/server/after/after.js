"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "unstable_after", {
    enumerable: true,
    get: function() {
        return unstable_after;
    }
});
const _requestasyncstorageexternal = require("../../client/components/request-async-storage.external");
const _staticgenerationasyncstorageexternal = require("../../client/components/static-generation-async-storage.external");
const _staticgenerationbailout = require("../../client/components/static-generation-bailout");
const _dynamicrendering = require("../app-render/dynamic-rendering");
function unstable_after(task) {
    const callingExpression = 'unstable_after';
    const requestStore = (0, _requestasyncstorageexternal.getExpectedRequestStore)(callingExpression);
    const { afterContext } = requestStore;
    if (!afterContext) {
        throw new Error('`unstable_after()` must be explicitly enabled by setting `experimental.after: true` in your next.config.js.');
    }
    const staticGenerationStore = _staticgenerationasyncstorageexternal.staticGenerationAsyncStorage.getStore();
    if (staticGenerationStore) {
        if (staticGenerationStore.forceStatic) {
            throw new _staticgenerationbailout.StaticGenBailoutError(`Route ${staticGenerationStore.route} with \`dynamic = "force-static"\` couldn't be rendered statically because it used \`${callingExpression}\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);
        } else {
            (0, _dynamicrendering.markCurrentScopeAsDynamic)(staticGenerationStore, callingExpression);
        }
    }
    return afterContext.after(task);
}

//# sourceMappingURL=after.js.map