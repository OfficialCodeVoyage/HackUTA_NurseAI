{"version":3,"sources":["../../../src/server/after/builtin-request-context.ts"],"sourcesContent":["export function getBuiltinRequestContext():\n  | BuiltinRequestContextValue\n  | undefined {\n  const _globalThis = globalThis as GlobalThisWithRequestContext\n  const ctx =\n    _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL] ??\n    _globalThis[VERCEL_REQUEST_CONTEXT_SYMBOL]\n  return ctx?.get()\n}\n\n/** This should be considered unstable until `unstable_after` is stablized. */\nconst NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context')\n\n// TODO(after): this is a temporary workaround.\n// Remove this when vercel builder is updated to provide '@next/request-context'.\nconst VERCEL_REQUEST_CONTEXT_SYMBOL = Symbol.for('@vercel/request-context')\n\ntype GlobalThisWithRequestContext = typeof globalThis & {\n  [NEXT_REQUEST_CONTEXT_SYMBOL]?: BuiltinRequestContext\n  /** @deprecated */\n  [VERCEL_REQUEST_CONTEXT_SYMBOL]?: BuiltinRequestContext\n}\n\n/** A request context provided by the platform.\n * It should be considered unstable until `unstable_after` is stablized. */\nexport type BuiltinRequestContext = {\n  get(): BuiltinRequestContextValue | undefined\n}\n\nexport type BuiltinRequestContextValue = { waitUntil?: WaitUntil }\nexport type WaitUntil = (promise: Promise<any>) => void\n"],"names":["getBuiltinRequestContext","_globalThis","globalThis","ctx","NEXT_REQUEST_CONTEXT_SYMBOL","VERCEL_REQUEST_CONTEXT_SYMBOL","get","Symbol","for"],"mappings":";;;;+BAAgBA;;;eAAAA;;;AAAT,SAASA;IAGd,MAAMC,cAAcC;IACpB,MAAMC,MACJF,WAAW,CAACG,4BAA4B,IACxCH,WAAW,CAACI,8BAA8B;IAC5C,OAAOF,uBAAAA,IAAKG,GAAG;AACjB;AAEA,4EAA4E,GAC5E,MAAMF,8BAA8BG,OAAOC,GAAG,CAAC;AAE/C,+CAA+C;AAC/C,iFAAiF;AACjF,MAAMH,gCAAgCE,OAAOC,GAAG,CAAC"}