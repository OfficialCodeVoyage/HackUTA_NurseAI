{"version":3,"sources":["../../../src/server/base-http/web.ts"],"sourcesContent":["import type { IncomingHttpHeaders, OutgoingHttpHeaders } from 'http'\nimport type { FetchMetrics } from './index'\n\nimport { toNodeOutgoingHttpHeaders } from '../web/utils'\nimport { BaseNextRequest, BaseNextResponse } from './index'\nimport { DetachedPromise } from '../../lib/detached-promise'\nimport type { NextRequestHint } from '../web/adapter'\nimport { CloseController, trackBodyConsumed } from '../web/web-on-close'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nexport class WebNextRequest extends BaseNextRequest<ReadableStream | null> {\n  public request: Request\n  public headers: IncomingHttpHeaders\n  public fetchMetrics?: FetchMetrics\n\n  constructor(request: NextRequestHint) {\n    const url = new URL(request.url)\n\n    super(\n      request.method,\n      url.href.slice(url.origin.length),\n      request.clone().body\n    )\n    this.request = request\n    this.fetchMetrics = request.fetchMetrics\n\n    this.headers = {}\n    for (const [name, value] of request.headers.entries()) {\n      this.headers[name] = value\n    }\n  }\n\n  async parseBody(_limit: string | number): Promise<any> {\n    throw new Error('parseBody is not implemented in the web runtime')\n  }\n}\n\nexport class WebNextResponse extends BaseNextResponse<WritableStream> {\n  private headers = new Headers()\n  private textBody: string | undefined = undefined\n\n  private closeController = new CloseController()\n\n  public statusCode: number | undefined\n  public statusMessage: string | undefined\n\n  constructor(\n    public transformStream = new TransformStream(),\n    private trackOnClose = false\n  ) {\n    super(transformStream.writable)\n  }\n\n  setHeader(name: string, value: string | string[]): this {\n    this.headers.delete(name)\n    for (const val of Array.isArray(value) ? value : [value]) {\n      this.headers.append(name, val)\n    }\n    return this\n  }\n\n  removeHeader(name: string): this {\n    this.headers.delete(name)\n    return this\n  }\n\n  getHeaderValues(name: string): string[] | undefined {\n    // https://developer.mozilla.org/docs/Web/API/Headers/get#example\n    return this.getHeader(name)\n      ?.split(',')\n      .map((v) => v.trimStart())\n  }\n\n  getHeader(name: string): string | undefined {\n    return this.headers.get(name) ?? undefined\n  }\n\n  getHeaders(): OutgoingHttpHeaders {\n    return toNodeOutgoingHttpHeaders(this.headers)\n  }\n\n  hasHeader(name: string): boolean {\n    return this.headers.has(name)\n  }\n\n  appendHeader(name: string, value: string): this {\n    this.headers.append(name, value)\n    return this\n  }\n\n  body(value: string) {\n    this.textBody = value\n    return this\n  }\n\n  private readonly sendPromise = new DetachedPromise<void>()\n\n  private _sent = false\n  public send() {\n    this.sendPromise.resolve()\n    this._sent = true\n  }\n\n  get sent() {\n    return this._sent\n  }\n\n  public async toResponse() {\n    // If we haven't called `send` yet, wait for it to be called.\n    if (!this.sent) await this.sendPromise.promise\n\n    const body = this.textBody ?? this.transformStream.readable\n\n    let bodyInit: BodyInit = body\n\n    const canAddListenersLater = typeof bodyInit !== 'string'\n    const shouldTrackBody =\n      this.trackOnClose &&\n      (canAddListenersLater ? true : this.closeController.listeners > 0)\n\n    if (shouldTrackBody) {\n      bodyInit = trackBodyConsumed(body, () => {\n        this.closeController.dispatchClose()\n      })\n    }\n\n    return new Response(bodyInit, {\n      headers: this.headers,\n      status: this.statusCode,\n      statusText: this.statusMessage,\n    })\n  }\n\n  public onClose(callback: () => void) {\n    if (!this.trackOnClose) {\n      throw new InvariantError(\n        'Cannot call onClose on a WebNextResponse initialized with `trackOnClose = false`'\n      )\n    }\n    if (this.closeController.isClosed) {\n      throw new InvariantError(\n        'Cannot call onClose on a WebNextResponse that is already closed'\n      )\n    }\n    return this.closeController.onClose(callback)\n  }\n}\n"],"names":["WebNextRequest","WebNextResponse","BaseNextRequest","constructor","request","url","URL","method","href","slice","origin","length","clone","body","fetchMetrics","headers","name","value","entries","parseBody","_limit","Error","BaseNextResponse","transformStream","TransformStream","trackOnClose","writable","Headers","textBody","undefined","closeController","CloseController","sendPromise","DetachedPromise","_sent","setHeader","delete","val","Array","isArray","append","removeHeader","getHeaderValues","getHeader","split","map","v","trimStart","get","getHeaders","toNodeOutgoingHttpHeaders","hasHeader","has","appendHeader","send","resolve","sent","toResponse","promise","readable","bodyInit","canAddListenersLater","shouldTrackBody","listeners","trackBodyConsumed","dispatchClose","Response","status","statusCode","statusText","statusMessage","onClose","callback","InvariantError","isClosed"],"mappings":"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"}