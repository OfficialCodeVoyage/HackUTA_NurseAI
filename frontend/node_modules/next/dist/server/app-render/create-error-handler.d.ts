declare global {
    var __next_log_error__: undefined | ((err: unknown) => void);
}
export type ErrorHandler = (err: unknown, errorInfo: unknown) => string | undefined;
export type DigestedError = Error & {
    digest: string;
};
/**
 * Create error handler for renderers.
 * Tolerate dynamic server errors during prerendering so console
 * isn't spammed with unactionable errors
 */
export declare function createErrorHandler({ dev, isNextExport, onReactStreamRenderError, getErrorByRenderSource, allCapturedErrors, silenceLogger, }: {
    dev?: boolean;
    isNextExport?: boolean;
    onReactStreamRenderError?: (err: any) => void;
    getErrorByRenderSource: (err: DigestedError) => Error;
    allCapturedErrors?: Error[];
    silenceLogger?: boolean;
}): ErrorHandler;
