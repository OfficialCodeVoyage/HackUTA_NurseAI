{"version":3,"sources":["../../../src/lib/helpers/get-registry.ts"],"sourcesContent":["import { execSync } from 'child_process'\nimport { getPkgManager } from './get-pkg-manager'\nimport { getFormattedNodeOptionsWithoutInspect } from '../../server/lib/utils'\n\n/**\n * Returns the package registry using the user's package manager.\n * The URL will have a trailing slash.\n * @default https://registry.npmjs.org/\n */\nexport function getRegistry(baseDir: string = process.cwd()) {\n  let registry = `https://registry.npmjs.org/`\n  try {\n    const pkgManager = getPkgManager(baseDir)\n    const output = execSync(`${pkgManager} config get registry`, {\n      env: {\n        ...process.env,\n        NODE_OPTIONS: getFormattedNodeOptionsWithoutInspect(),\n      },\n    })\n      .toString()\n      .trim()\n\n    if (output.startsWith('http')) {\n      registry = output.endsWith('/') ? output : `${output}/`\n    }\n  } finally {\n    return registry\n  }\n}\n"],"names":["getRegistry","baseDir","process","cwd","registry","pkgManager","getPkgManager","output","execSync","env","NODE_OPTIONS","getFormattedNodeOptionsWithoutInspect","toString","trim","startsWith","endsWith"],"mappings":";;;;+BASgBA;;;eAAAA;;;+BATS;+BACK;uBACwB;AAO/C,SAASA,YAAYC,UAAkBC,QAAQC,GAAG,EAAE;IACzD,IAAIC,WAAW,CAAC,2BAA2B,CAAC;IAC5C,IAAI;QACF,MAAMC,aAAaC,IAAAA,4BAAa,EAACL;QACjC,MAAMM,SAASC,IAAAA,uBAAQ,EAAC,CAAC,EAAEH,WAAW,oBAAoB,CAAC,EAAE;YAC3DI,KAAK;gBACH,GAAGP,QAAQO,GAAG;gBACdC,cAAcC,IAAAA,4CAAqC;YACrD;QACF,GACGC,QAAQ,GACRC,IAAI;QAEP,IAAIN,OAAOO,UAAU,CAAC,SAAS;YAC7BV,WAAWG,OAAOQ,QAAQ,CAAC,OAAOR,SAAS,CAAC,EAAEA,OAAO,CAAC,CAAC;QACzD;IACF,SAAU;QACR,OAAOH;IACT;AACF"}