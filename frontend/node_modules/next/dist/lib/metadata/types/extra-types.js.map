{"version":3,"sources":["../../../../src/lib/metadata/types/extra-types.ts"],"sourcesContent":["// When rendering applink meta tags add a namespace tag before each array instance\n// if more than one member exists.\n// ref: https://developers.facebook.com/docs/applinks/metadata-reference\n\nexport type AppLinks = {\n  ios?: AppLinksApple | Array<AppLinksApple>\n  iphone?: AppLinksApple | Array<AppLinksApple>\n  ipad?: AppLinksApple | Array<AppLinksApple>\n  android?: AppLinksAndroid | Array<AppLinksAndroid>\n  windows_phone?: AppLinksWindows | Array<AppLinksWindows>\n  windows?: AppLinksWindows | Array<AppLinksWindows>\n  windows_universal?: AppLinksWindows | Array<AppLinksWindows>\n  web?: AppLinksWeb | Array<AppLinksWeb>\n}\nexport type ResolvedAppLinks = {\n  ios?: Array<AppLinksApple>\n  iphone?: Array<AppLinksApple>\n  ipad?: Array<AppLinksApple>\n  android?: Array<AppLinksAndroid>\n  windows_phone?: Array<AppLinksWindows>\n  windows?: Array<AppLinksWindows>\n  windows_universal?: Array<AppLinksWindows>\n  web?: Array<AppLinksWeb>\n}\nexport type AppLinksApple = {\n  url: string | URL\n  app_store_id?: string | number\n  app_name?: string\n}\nexport type AppLinksAndroid = {\n  package: string\n  url?: string | URL\n  class?: string\n  app_name?: string\n}\nexport type AppLinksWindows = {\n  url: string | URL\n  app_id?: string\n  app_name?: string\n}\nexport type AppLinksWeb = {\n  url: string | URL\n  should_fallback?: boolean\n}\n\n// Apple Itunes APp\n// https://developer.apple.com/documentation/webkit/promoting_apps_with_smart_app_banners\nexport type ItunesApp = {\n  appId: string\n  appArgument?: string\n}\n\n// Viewport meta structure\n// https://developer.mozilla.org/docs/Web/HTML/Viewport_meta_tag\n// intentionally leaving out user-scalable, use a string if you want that behavior\nexport type ViewportLayout = {\n  width?: string | number\n  height?: string | number\n  initialScale?: number\n  minimumScale?: number\n  maximumScale?: number\n  userScalable?: boolean\n  viewportFit?: 'auto' | 'cover' | 'contain'\n  interactiveWidget?: 'resizes-visual' | 'resizes-content' | 'overlays-content'\n}\n\n// Apple Web App\n// https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html\n// https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html\nexport type AppleWebApp = {\n  // default true\n  capable?: boolean\n  title?: string\n  startupImage?: AppleImage | Array<AppleImage>\n  // default \"default\"\n  statusBarStyle?: 'default' | 'black' | 'black-translucent'\n}\nexport type AppleImage = string | AppleImageDescriptor\nexport type AppleImageDescriptor = {\n  url: string\n  media?: string\n}\n\nexport type ResolvedAppleWebApp = {\n  capable: boolean\n  title?: string | null\n  startupImage?: AppleImageDescriptor[] | null\n  statusBarStyle?: 'default' | 'black' | 'black-translucent'\n}\n\nexport type Facebook = FacebookAppId | FacebookAdmins\nexport type FacebookAppId = {\n  appId: string\n  admins?: never\n}\nexport type FacebookAdmins = {\n  appId?: never\n  admins: string | string[]\n}\nexport type ResolvedFacebook = {\n  appId?: string\n  admins?: string[]\n}\n\n// Format Detection\n// This is a poorly specified metadata export type that is supposed to\n// control whether the device attempts to conver text that matches\n// certain formats into links for action. The most supported example\n// is how mobile devices detect phone numbers and make them into links\n// that can initiate a phone call\n// https://www.goodemailcode.com/email-code/template.html\nexport type FormatDetection = {\n  telephone?: boolean\n  date?: boolean\n  address?: boolean\n  email?: boolean\n  url?: boolean\n}\n"],"names":[],"mappings":"AAAA,kFAAkF;AAClF,kCAAkC;AAClC,wEAAwE"}